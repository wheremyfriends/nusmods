{"version":3,"file":"index.es.js","sources":["../src/academicCalendar.js","../src/index.js"],"sourcesContent":["import { addWeeks, startOfWeek, isBefore, getYear } from 'date-fns';\n\n/* eslint-disable no-fallthrough, no-console */\n\n/**\n * Returns a Date object of the first weekday of Week 0 of that academic year.\n * Assumes Week 0 begins on the first Monday of August.\n * @param acadYear the academic year. E.g. \"18/19\"\n * @return {Date} Start date of the academic year\n */\nexport function getAcadYearStartDate(acadYear) {\n  const shortYear = acadYear.split('/')[0];\n  const targetYear = 2000 + parseInt(shortYear, 10);\n  const firstDateOfMonth = new Date(targetYear, 7, 1, 0, 0, 0);\n  const nearestMonday = startOfWeek(firstDateOfMonth, { weekStartsOn: 1 });\n\n  if (isBefore(nearestMonday, firstDateOfMonth)) {\n    const firstMonday = addWeeks(nearestMonday, 1);\n    return firstMonday;\n  }\n  // 1st Aug is already a Monday\n  return nearestMonday;\n}\n\n// Constant variables.\nconst oneWeekDuration = 1000 * 60 * 60 * 24 * 7;\nconst sem1 = 'Semester 1';\nconst sem2 = 'Semester 2';\nconst special1 = 'Special Term I';\nconst special2 = 'Special Term II';\n\n/**\n * Takes in a Date and returns an object of acad year and start date for that year.\n * @param  {Date} date\n * @return {Object} acadYearObject - { year: \"15/16\", startDate: Date }\n */\nexport function getAcadYear(date) {\n  const shortYear = getYear(date) % 100;\n\n  // A date like 8th August 2015 can either be in AY15/16 or AY16/17. We check\n  // the date against the start of AY15/16 and return the correct one.\n  const potentialAcadYear = `${shortYear}/${shortYear + 1}`;\n  const potentialStartDate = getAcadYearStartDate(potentialAcadYear);\n\n  const year = isBefore(date, potentialStartDate)\n    ? `${shortYear - 1}/${shortYear}`\n    : potentialAcadYear;\n\n  return {\n    year,\n    startDate: getAcadYearStartDate(year),\n  };\n}\n\n/**\n * Computes the current academic semester.\n * Expects a week number of a year.\n * @param  {number} acadWeekNumber\n * @return {string} semester - \"Semester 1\"\n * @example acadWeekNumber(3)\n */\nexport function getAcadSem(acadWeekNumber) {\n  const earliestSupportedWeek = 1;\n  const lastWeekOfSem1 = 23;\n  const lastWeekOfSem2 = 40;\n  const lastWeekOfSpecialSem1 = 46;\n  const lastWeekOfSpecialSem2 = 52;\n\n  if (acadWeekNumber < earliestSupportedWeek) {\n    console.warn(`[nusmoderator] Unsupported acadWeekNumber: ${acadWeekNumber}`);\n    return null;\n  }\n\n  if (acadWeekNumber <= lastWeekOfSem1) return sem1;\n  if (acadWeekNumber <= lastWeekOfSem2) return sem2;\n  if (acadWeekNumber <= lastWeekOfSpecialSem1) return special1;\n  if (acadWeekNumber <= lastWeekOfSpecialSem2) return special2;\n\n  console.warn(`[nusmoderator] Unsupported acadWeekNumber: ${acadWeekNumber}`);\n  return null;\n}\n\n/**\n * Computes the current academic week of the semester\n * Expects a week number of a semester.\n * @param  {number} acadWeekNumber\n * @return {string} semester - \"Recess\" | \"Reading\" | \"Examination\"\n * @example acadWeekNumber(3)\n */\nexport function getAcadWeekName(acadWeekNumber) {\n  switch (acadWeekNumber) {\n    case 7:\n      return {\n        weekType: 'Recess',\n        weekNumber: null,\n      };\n    case 15:\n      return {\n        weekType: 'Reading',\n        weekNumber: null,\n      };\n    case 16:\n    case 17:\n      return {\n        weekType: 'Examination',\n        weekNumber: acadWeekNumber - 15,\n      };\n    default: {\n      let weekNumber = acadWeekNumber;\n      if (weekNumber >= 8) {\n        // For weeks after recess week\n        weekNumber -= 1;\n      }\n\n      if (acadWeekNumber < 1 || acadWeekNumber > 17) {\n        console.warn(`[nusmoderator] Unsupported acadWeekNumber as parameter: ${acadWeekNumber}`);\n        return null;\n      }\n\n      return {\n        weekType: 'Instructional',\n        weekNumber,\n      };\n    }\n  }\n}\n\n/**\n  * Computes the current academic week and return in an object of acad date components\n  * @param  {Date} date\n  * @return {Object}\n  * {\n  *   year: \"15/16\",\n  *   sem: 'Semester 1'|'Semester 2'|'Special Sem 1'|'Special Sem 2',\n  *   type: 'Instructional'|'Reading'|'Examination'|'Recess'|'Vacation'|'Orientation',\n  *   num: <weekNum>\n  * }\n  */\nexport function getAcadWeekInfo(date) {\n  const currentAcad = getAcadYear(date);\n  const acadYear = currentAcad.year;\n  const acadYearStartDate = getAcadYearStartDate(acadYear);\n\n  let acadWeekNumber = Math.ceil(\n    (date.getTime() - acadYearStartDate.getTime() + 1) / oneWeekDuration,\n  );\n  const semester = getAcadSem(acadWeekNumber);\n\n  let weekType = null;\n  let weekNumber = null;\n  switch (semester) {\n    case sem2: // Semester 2 starts 22 weeks after Week 1 of semester 1\n      acadWeekNumber -= 22;\n    case sem1:\n      if (acadWeekNumber === 1) {\n        weekType = 'Orientation';\n        break;\n      }\n      if (acadWeekNumber > 18) {\n        weekType = 'Vacation';\n        weekNumber = acadWeekNumber - 18;\n        break;\n      }\n      acadWeekNumber -= 1;\n      ({ weekType, weekNumber } = getAcadWeekName(acadWeekNumber));\n      break;\n    case special2: // Special Term II starts 6 weeks after Special Term I\n      acadWeekNumber -= 6;\n    case special1: // Special Term I starts on week 41 of the AY\n      acadWeekNumber -= 40;\n      weekType = 'Instructional';\n      weekNumber = acadWeekNumber;\n      break;\n    default:\n      if (acadWeekNumber === 53) {\n        // This means it is the 53th week of the AY, and this week is Vacation.\n        // This happens 5 times every 28 years.\n        weekType = 'Vacation';\n        weekNumber = null;\n      }\n      break;\n  }\n\n  return {\n    year: acadYear,\n    sem: semester,\n    type: weekType,\n    num: weekNumber,\n  };\n}\n\n/**\n * Get the first day of the exam week for the given semester\n * @param {string} year\n * @param {number} semester\n * @returns {Date}\n */\nexport function getExamWeek(year, semester) {\n  const startDate = getAcadYearStartDate(year);\n\n  if (!startDate) {\n    console.warn(`[nusmoderator] Unsupported year: ${year}`);\n    return null;\n  }\n\n  const examWeek = {\n    1: 16,\n    2: 38,\n    3: 45,\n    4: 51,\n  };\n\n  const weeks = examWeek[semester];\n  if (!weeks) {\n    console.warn(`[nusmoderator] Unknown semester: ${semester}`);\n    return null;\n  }\n\n  const d = new Date(startDate.valueOf());\n  d.setDate(startDate.getDate() + weeks * 7);\n  return d;\n}\n\nexport default {\n  getAcadYearStartDate,\n  getAcadYear,\n  getAcadSem,\n  getAcadWeekName,\n  getAcadWeekInfo,\n  getExamWeek,\n};\n","import academicCalendar from './academicCalendar';\n\nexport default {\n  academicCalendar,\n};\n"],"names":["getAcadYearStartDate","acadYear","shortYear","split","targetYear","parseInt","firstDateOfMonth","Date","nearestMonday","startOfWeek","weekStartsOn","isBefore","addWeeks","const","sem1","sem2","special1","special2","getAcadYear","date","getYear","potentialAcadYear","potentialStartDate","year","startDate","getAcadSem","acadWeekNumber","console","warn","getAcadWeekName","weekType","weekNumber","acadYearStartDate","Math","ceil","getTime","semester","sem","type","num","weeks","d","valueOf","setDate","getDate"],"mappings":"gFAUO,SAASA,EAAqBC,OAC7BC,EAAYD,EAASE,MAAM,KAAK,GAChCC,EAAa,IAAOC,SAASH,EAAW,IACxCI,EAAmB,IAAIC,KAAKH,EAAY,EAAG,EAAG,EAAG,EAAG,GACpDI,EAAgBC,EAAYH,EAAkB,CAAEI,aAAc,WAEhEC,EAASH,EAAeF,GACNM,EAASJ,EAAe,GAIvCA,EAITK,IACMC,EAAO,aACPC,EAAO,aACPC,EAAW,iBACXC,EAAW,kBAOV,SAASC,EAAYC,OACpBjB,EAAYkB,EAAQD,GAAQ,IAI5BE,EAAqBnB,OAAeA,EAAY,GAChDoB,EAAqBtB,EAAqBqB,GAE1CE,EAAOZ,EAASQ,EAAMG,GACrBpB,EAAY,MAAKA,EACpBmB,QAEG,MACLE,EACAC,UAAWxB,EAAqBuB,IAW7B,SAASE,EAAWC,UAOrBA,EAN0B,GAO5BC,QAAQC,mDAAmDF,GACpD,MAGLA,GAVmB,GAUsBZ,EACzCY,GAVmB,GAUsBX,EACzCW,GAV0B,GAUsBV,EAChDU,GAV0B,GAUsBT,GAEpDU,QAAQC,mDAAmDF,GACpD,MAUF,SAASG,EAAgBH,UACtBA,QACD,QACI,CACLI,SAAU,SACVC,WAAY,WAEX,SACI,CACLD,SAAU,UACVC,WAAY,WAEX,QACA,SACI,CACLD,SAAU,cACVC,WAAYL,EAAiB,gBAG3BK,EAAaL,SACbK,GAAc,IAEhBA,GAAc,GAGZL,EAAiB,GAAKA,EAAiB,IACzCC,QAAQC,gEAAgEF,GACjE,MAGF,CACLI,SAAU,2BACVC,kBCvHO,kBD6NA,sBACb/B,cACAkB,aACAO,kBACAI,kBAzFK,SAAyBV,SAExBlB,EADciB,EAAYC,GACHI,KACvBS,EAAoBhC,EAAqBC,GAE3CyB,EAAiBO,KAAKC,MACvBf,EAAKgB,UAAYH,EAAkBG,UAAY,GAvH5B,QAyHhBC,EAAWX,EAAWC,GAExBI,EAAW,KACXC,EAAa,YACTK,QACDrB,EACHW,GAAkB,QACfZ,KACoB,IAAnBY,EAAsB,CACxBI,EAAW,uBAGTJ,EAAiB,GAAI,CACvBI,EAAW,WACXC,EAAaL,EAAiB,SAI7BI,KAAyBD,EAD5BH,GAAkB,aACLK,0BAEVd,EACHS,GAAkB,OACfV,EAEHc,EAAW,gBACXC,EAFAL,GAAkB,iBAKK,KAAnBA,IAGFI,EAAW,WACXC,EAAa,YAKZ,CACLR,KAAMtB,EACNoC,IAAKD,EACLE,KAAMR,EACNS,IAAKR,gBAUF,SAAqBR,EAAMa,OAC1BZ,EAAYxB,EAAqBuB,OAElCC,SACHG,QAAQC,yCAAyCL,GAC1C,SAUHiB,EAPW,GACZ,KACA,KACA,KACA,IAGkBJ,OAClBI,SACHb,QAAQC,yCAAyCQ,GAC1C,SAGHK,EAAI,IAAIlC,KAAKiB,EAAUkB,kBAC7BD,EAAEE,QAAQnB,EAAUoB,UAAoB,EAARJ,GACzBC"}