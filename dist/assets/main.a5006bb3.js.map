{"version":3,"file":"assets/main.a5006bb3.js","mappings":"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","sources":["webpack:///./apis/nusmods.js","webpack:///./bootstrapping/browser.ts","webpack:///./actions/requests.ts","webpack:///./config/index.ts","webpack:///./actions/constants.ts","webpack:///./actions/moduleBank.ts","webpack:///./actions/moduleBank-lru.ts","webpack:///./actions/app.ts","webpack:///./types/utils.ts","webpack:///./types/reducers.ts","webpack:///./selectors/moduleBank.ts","webpack:///./utils/timify.ts","webpack:///./utils/react.tsx","webpack:///./utils/modules.ts","webpack:///./utils/array.ts","webpack:///./utils/timetables.ts","webpack:///./actions/timetables.ts","webpack:///./storage/persistReducer.ts","webpack:///./reducers/requests.ts","webpack:///./utils/debug.ts","webpack:///./selectors/modreg.ts","webpack:///./actions/settings.ts","webpack:///./reducers/app.ts","webpack:///./middlewares/requests-middleware.ts","webpack:///./reducers/moduleBank.ts","webpack:///./reducers/venueBank.ts","webpack:///./utils/colors.ts","webpack:///./reducers/timetables.ts","webpack:///./actions/theme.ts","webpack:///./utils/error.ts","webpack:///./bootstrapping/matomo.ts","webpack:///./reducers/theme.ts","webpack:///./types/settings.ts","webpack:///./reducers/settings.ts","webpack:///./utils/placeholders/general.ts","webpack:///./utils/placeholders/cs.ts","webpack:///./utils/placeholders/index.ts","webpack:///./reducers/planner.ts","webpack:///./selectors/planner.ts","webpack:///./reducers/index.ts","webpack:///./actions/venueBank.ts","webpack:///./actions/planner.ts","webpack:///./reducers/undoHistory.ts","webpack:///./middlewares/raven-middleware.ts","webpack:///./storage/localStorage.ts","webpack:///./bootstrapping/configure-store.ts","webpack:///./utils/weekText.ts","webpack:///./views/routes/paths.ts","webpack:///./views/layout/Navtabs.scss?b5f4","webpack:///./views/layout/Navtabs.tsx","webpack:///./featureFlags.ts","webpack:///./views/components/notfications/Notification.tsx","webpack:///./views/components/notfications/Notification.scss?4c2f","webpack:///./views/errors/ErrorBoundary.tsx","webpack:///./views/components/RandomKawaii.tsx","webpack:///./views/components/Title.tsx","webpack:///./views/components/Online.tsx","webpack:///./views/errors/ErrorPage.scss?85c6","webpack:///./views/errors/ErrorPage.tsx","webpack:///./utils/css.ts","webpack:///./img/nusmods-logo.svg","webpack:///./views/errors/ApiError.tsx","webpack:///./views/components/LoadingSpinner.tsx","webpack:///./views/components/LoadingSpinner.scss?2e5a","webpack:///./views/components/ExternalLink.tsx","webpack:///./views/components/CloseButton.tsx","webpack:///./views/components/CloseButton.scss?b87b","webpack:///./views/components/Modal.scss?56f3","webpack:///./views/components/Modal.tsx","webpack:///./views/components/FeedbackModal.scss?7c17","webpack:///./views/components/FeedbackModal.tsx","webpack:///./utils/ComponentMap.ts","webpack:///./views/components/KeyboardShortcuts.tsx","webpack:///./views/components/KeyboardShortcuts.scss?a93f","webpack:///./views/AppShell.tsx","webpack:///./views/AppShell.scss?4dcf","webpack:///./selectors/timetables.ts","webpack:///./actions/undoHistory.ts","webpack:///./views/components/semester-switcher/SemesterSwitcher.tsx","webpack:///./views/components/semester-switcher/SemesterSwitcher.scss?4cfb","webpack:///./utils/moduleSearch.ts","webpack:///./utils/promise.ts","webpack:///./utils/retryImport.ts","webpack:///./views/components/Tooltip/index.tsx","webpack:///./views/timetable/ModulesSelect.scss?0255","webpack:///./views/timetable/ModulesSelect.tsx","webpack:///./views/hooks/useMediaQuery.ts","webpack:///./views/timetable/ModulesSelectContainer.tsx","webpack:///./selectors/requests.ts","webpack:///./storage/index.ts","webpack:///./views/components/notfications/Announcements.scss?9e52","webpack:///./views/components/notfications/Announcements.tsx","webpack:///./storage/keys.ts","webpack:///./views/components/notfications/ModRegNotification.tsx","webpack:///./views/components/notfications/ModRegNotification.scss?edea","webpack:///./views/hocs/withTimer.tsx","webpack:///./views/timetable/TimetableTimings.tsx","webpack:///./views/timetable/TimetableTimings.scss?fa54","webpack:///./views/timetable/TimetableCell.tsx","webpack:///./views/timetable/TimetableCell.scss?6625","webpack:///./types/modules.ts","webpack:///./views/timetable/TimetableRow.tsx","webpack:///./views/timetable/TimetableRow.scss?fd6a","webpack:///./views/timetable/CurrentTimeIndicator.tsx","webpack:///./views/timetable/CurrentTimeIndicator.scss?853e","webpack:///./views/timetable/TimetableHighlight.tsx","webpack:///./views/timetable/TimetableHighlight.scss?c5bc","webpack:///./views/timetable/TimetableDay.tsx","webpack:///./views/timetable/TimetableDay.scss?ff46","webpack:///./views/timetable/Timetable.tsx","webpack:///./views/timetable/Timetable.scss?107b","webpack:///./views/timetable/ResetTimetable.tsx","webpack:///./views/timetable/ShareTimetable.scss?5873","webpack:///./views/timetable/TimetableActions.scss?e52a","webpack:///./views/timetable/TimetableActions.tsx","webpack:///./views/components/ColorPicker.tsx","webpack:///./views/components/ColorPicker.scss?7f43","webpack:///./views/timetable/TimetableModulesTable.scss?d3d1","webpack:///./views/timetable/ModuleTombstone.tsx","webpack:///./views/timetable/ModulesTableFooter.tsx","webpack:///./views/timetable/TimetableModulesTable.tsx","webpack:///./views/timetable/TimetableContent.tsx","webpack:///./views/timetable/TimetableContent.scss?1b5f","webpack:///./views/timetable/TimetableContainer.tsx","webpack:///./views/timetable/TimetableContainer.scss?2939","webpack:///./views/hocs/deferComponentRender.tsx","webpack:///./views/hooks/useScrollToTop.ts","webpack:///./views/errors/NotFoundPage.tsx","webpack:///./views/routes/Routes.tsx","webpack:///./entry/App.tsx","webpack:///./entry/main.tsx","webpack:///./bootstrapping/subscribeOnlineEvents.ts","webpack:///./views/components/Tooltip/Tooltip.tsx","webpack:///./views/elements.js"],"sourcesContent":["const config = require('../config/app-config.json');\r\n\r\nclass NUSModsApi {\r\n  /**\r\n   * @param {string} academicYear\r\n   * @returns {string}\r\n   */\r\n  static baseUrl(academicYear = config.academicYear) {\r\n    let envApiBaseUrl;\r\n    if (typeof DATA_API_BASE_URL !== 'undefined') {\r\n      // Use global constant defined with Webpack's DefinePlugin\r\n      envApiBaseUrl = DATA_API_BASE_URL;\r\n    } else if (typeof process !== 'undefined') {\r\n      // Use Node.js `process`, which will be defined if we're in a Node.js\r\n      // environment (e.g. when building).\r\n      envApiBaseUrl = process.env.DATA_API_BASE_URL;\r\n    }\r\n\r\n    const apiBaseUrl = envApiBaseUrl || config.apiBaseUrl;\r\n    return `${apiBaseUrl}/v2/${academicYear.replace('/', '-')}`;\r\n  }\r\n\r\n  /**\r\n   * List of modules for the entire acad year.\r\n   * @param {string} academicYear\r\n   * @returns {string}\r\n   */\r\n  static moduleListUrl(academicYear = config.academicYear) {\r\n    return `${NUSModsApi.baseUrl(academicYear)}/moduleList.json`;\r\n  }\r\n\r\n  /**\r\n   * List of all modules for the entire acad year\r\n   * @param {string} academicYear\r\n   * @returns {string}\r\n   */\r\n  static modulesUrl(academicYear = config.academicYear) {\r\n    return `${NUSModsApi.baseUrl(academicYear)}/moduleInformation.json`;\r\n  }\r\n\r\n  /**\r\n   * Module for that acad year. Not tied to any semester.\r\n   * @param {string} moduleCode\r\n   * @param {string} academicYear\r\n   * @returns {string}\r\n   */\r\n  static moduleDetailsUrl(moduleCode, academicYear = config.academicYear) {\r\n    return `${NUSModsApi.baseUrl(academicYear)}/modules/${moduleCode}.json`;\r\n  }\r\n\r\n  /**\r\n   * List of all venues for one semester\r\n   * @param {number} semester\r\n   * @param {string} academicYear\r\n   * @returns {string}\r\n   */\r\n  static venueListUrl(semester, academicYear = config.academicYear) {\r\n    return `${NUSModsApi.baseUrl(academicYear)}/semesters/${semester}/venues.json`;\r\n  }\r\n\r\n  /**\r\n   * List of all venue's info for one semester in the current acad year\r\n   * @param {number} semester\r\n   * @param {string} academicYear\r\n   * @returns {string}\r\n   */\r\n  static venuesUrl(semester, academicYear = config.academicYear) {\r\n    return `${NUSModsApi.baseUrl(academicYear)}/semesters/${semester}/venueInformation.json`;\r\n  }\r\n\r\n  /**\r\n   * List of departments mapped to faculties\r\n   * @param {string} academicYear\r\n   * @returns {string}\r\n   */\r\n  static facultyDepartmentsUrl(academicYear = config.academicYear) {\r\n    return `${NUSModsApi.baseUrl(academicYear)}/facultyDepartments.json`;\r\n  }\r\n\r\n  /**\r\n   * List of modules available for MPE.\r\n   * @returns {string}\r\n   */\r\n  static mpeModuleListUrl() {\r\n    return `${NUSModsApi.baseUrl('')}cpexModules.json`;\r\n  }\r\n}\r\n\r\nmodule.exports = NUSModsApi;\r\n","import Bowser from 'bowser';\r\nimport browsersList from 'browserslist-config-nusmods';\r\n\r\nexport type Platform = 'mobile' | 'desktop' | 'tablet';\r\nexport type VersionMap = Record<string, any>; // Too fiddly to type properly\r\n\r\nfunction parseBrowser(browser: string): { platform?: Platform; browser: string } {\r\n  // Split desktop and mobile Safari because we support different versions of each\r\n  if (browser === 'ios_saf') return { platform: 'mobile', browser: 'safari' };\r\n  if (browser === 'safari') return { platform: 'desktop', browser: 'safari' };\r\n\r\n  // Samsung internet browser has a different name under bowser\r\n  if (browser === 'samsung') return { platform: 'mobile', browser: 'samsung_internet' };\r\n\r\n  return { browser };\r\n}\r\n\r\nfunction parseVersion(version: string): number {\r\n  const versions = version.split(/-/g).map((versionStr) => parseFloat(versionStr));\r\n  return Math.min(...versions);\r\n}\r\n\r\nfunction convertToCheckTree(versionMap: VersionMap): Bowser.Parser.checkTree {\r\n  const checkTree: Bowser.Parser.checkTree = {};\r\n\r\n  Object.keys(versionMap).forEach((key) => {\r\n    if (typeof versionMap[key] === 'number') {\r\n      checkTree[key] = `>=${versionMap[key]}`;\r\n    } else {\r\n      checkTree[key] = convertToCheckTree(versionMap[key]);\r\n    }\r\n  });\r\n\r\n  return checkTree;\r\n}\r\n\r\nfunction setMinVersion(versionMap: VersionMap, key: string, version: number) {\r\n  const currentVersion = versionMap[key];\r\n  if (currentVersion == null || version < currentVersion) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    versionMap[key] = version;\r\n  }\r\n}\r\n\r\nexport function browserlistToBowser(browserlist: string[]): Bowser.Parser.checkTree {\r\n  const minVersions: VersionMap = {\r\n    desktop: {},\r\n    mobile: {},\r\n    tablet: {},\r\n  };\r\n\r\n  browserlist.forEach((browserlistItem) => {\r\n    const [browserName, versions] = browserlistItem.split(/\\s+/g);\r\n\r\n    const { browser, platform } = parseBrowser(browserName);\r\n    const minVersion = parseVersion(versions);\r\n\r\n    if (platform != null) {\r\n      setMinVersion(minVersions[platform], browser, minVersion);\r\n\r\n      // Bowser treats tablet and phones OS separate, but we don't want that distinction\r\n      if (platform === 'mobile') setMinVersion(minVersions.tablet, browser, minVersion);\r\n      if (platform === 'tablet') setMinVersion(minVersions.mobile, browser, minVersion);\r\n    } else {\r\n      setMinVersion(minVersions, browser, minVersion);\r\n    }\r\n  });\r\n\r\n  return convertToCheckTree(minVersions);\r\n}\r\n\r\nconst checkTree = browserlistToBowser(browsersList);\r\nconst parser = Bowser.getParser(window.navigator.userAgent);\r\n\r\nexport const isIOS = parser.is('ios');\r\nexport const isAndroidChrome = parser.satisfies({ mobile: { chrome: '>1' } });\r\nexport const isBrowserSupported = () => {\r\n  if (parser.satisfies(checkTree)) {\r\n    return true;\r\n  }\r\n\r\n  if (isIOS) {\r\n    const os = parser.getOS();\r\n    const minVersion = parseFloat(checkTree.mobile.safari.slice(2));\r\n    if (os.version != null && parseFloat(os.version) >= minVersion) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n","import type { AxiosRequestConfig } from 'axios';\r\nimport type { RequestKey } from 'types/reducers';\r\nimport type { RequestType } from './constants';\r\n\r\nexport const API_REQUEST = 'API_REQUEST';\r\n\r\nexport type DispatchRequestAction<Type extends string> = {\r\n  type: Type;\r\n  payload: AxiosRequestConfig;\r\n  meta: {\r\n    [key: string]: string;\r\n  };\r\n};\r\n\r\nexport interface RequestsDispatchExt {\r\n  <T>(requestAction: DispatchRequestAction<RequestType>): Promise<T>;\r\n}\r\n\r\n/**\r\n * Create an action that makes a HTTP request. key is a string that uniquely\r\n * identifies each request. If type is not provided then it is assumed to be\r\n * the same as key.\r\n *\r\n * For example, fetching individual module info uses the type\r\n * FETCH_MODULE, while the key is FETCH_MODULE_[Module Code]. This allows the\r\n * status of each individual request to be stored, while the actions are still\r\n * grouped by their type.\r\n *\r\n * Options is passed directly into axios config, so minimally url should be\r\n * provided.\r\n */\r\ntype RequestActionCreator = {\r\n  <Key extends string>(key: Key, options: AxiosRequestConfig): DispatchRequestAction<Key>;\r\n  <Type extends string>(\r\n    key: RequestKey,\r\n    type: Type,\r\n    options: AxiosRequestConfig,\r\n  ): DispatchRequestAction<Type>;\r\n};\r\n\r\nexport const requestAction: RequestActionCreator = (\r\n  key: RequestKey,\r\n  type: string | AxiosRequestConfig,\r\n  options?: AxiosRequestConfig,\r\n): DispatchRequestAction<RequestKey | string> => {\r\n  let payload: AxiosRequestConfig;\r\n\r\n  if (typeof type !== 'string') {\r\n    payload = type;\r\n    // eslint-disable-next-line no-param-reassign\r\n    type = key;\r\n  } else if (options) {\r\n    payload = options;\r\n  } else {\r\n    throw new Error();\r\n  }\r\n\r\n  return {\r\n    type,\r\n    payload,\r\n    meta: {\r\n      [API_REQUEST]: key,\r\n    },\r\n  };\r\n};\r\n","import { mapValues } from 'lodash';\r\nimport { format } from 'date-fns';\r\n\r\nimport { AcadYear, Semester } from 'types/modules';\r\n\r\nimport holidays from 'data/holidays.json';\r\nimport modRegData from 'data/modreg-schedule.json';\r\nimport appConfig from './app-config.json';\r\n\r\nexport const regPeriods = [\r\n  'Select Courses',\r\n  'Select Tutorials / Labs',\r\n  'Add / Swap Tutorials',\r\n  'Submit Course Requests',\r\n  'Course Planning Exercise (CPEx)',\r\n] as const;\r\nexport type RegPeriodType = (typeof regPeriods)[number];\r\n\r\nexport const SCHEDULE_TYPES = ['Undergraduate', 'Graduate'] as const;\r\nexport type ScheduleType = (typeof SCHEDULE_TYPES)[number];\r\n\r\nexport type RegPeriod = {\r\n  type: RegPeriodType;\r\n  name: string;\r\n  start: string;\r\n  startDate: Date;\r\n  end: string;\r\n  endDate: Date;\r\n};\r\n\r\nexport type Config = {\r\n  brandName: string;\r\n  academicYear: AcadYear;\r\n  semester: Semester;\r\n  getSemesterKey: () => string;\r\n\r\n  apiBaseUrl: string;\r\n  elasticsearchBaseUrl: string;\r\n\r\n  disqusShortname: string;\r\n  venueFeedbackApi: string;\r\n  moduleErrorApi: string;\r\n\r\n  semesterNames: { [semester: string]: string };\r\n  shortSemesterNames: { [semester: string]: string };\r\n\r\n  /*\r\n   * Toggle to show a notice for ST2 modules to refer to NUS's timetable.\r\n   * Added because ModReg Round 0 (next AY data) overlaps with ST2 (prev AY)\r\n   * data, and NUSMods rotates complete AYs.\r\n   */\r\n  showSt2ExamTimetable: boolean;\r\n  st2ExamTimetableUrl: string;\r\n\r\n  archiveYears: string[];\r\n  examAvailability: Semester[];\r\n  examAvailabilitySet: Set<Semester>;\r\n\r\n  contact: {\r\n    blog: string;\r\n    email: string;\r\n    privateEmail: string;\r\n    facebook: string;\r\n    githubOrg: string;\r\n    githubRepo: string;\r\n    messenger: string;\r\n    twitter: string;\r\n  };\r\n\r\n  holidays: Date[];\r\n\r\n  modRegSchedule: { [type in ScheduleType]: RegPeriod[] };\r\n};\r\n\r\nexport function convertModRegDates(roundData: (typeof modRegData)[ScheduleType]): RegPeriod[] {\r\n  return roundData.map((data) => ({\r\n    ...data,\r\n    type: data.type as RegPeriodType,\r\n    start: format(new Date(data.start), 'EEEE do LLLL, h:mm aaaa'),\r\n    end: format(new Date(data.end), 'EEEE do LLLL, h:mm aaaa'),\r\n    startDate: new Date(data.start),\r\n    endDate: new Date(data.end),\r\n  }));\r\n}\r\n\r\nconst augmentedConfig: Config = {\r\n  ...appConfig,\r\n\r\n  holidays: holidays.map((date) => new Date(date)),\r\n\r\n  modRegSchedule: mapValues(modRegData, convertModRegDates),\r\n\r\n  examAvailabilitySet: new Set(appConfig.examAvailability),\r\n\r\n  /**\r\n   * Returns a unique key for every acad year + semester\r\n   */\r\n  getSemesterKey: (): string =>\r\n    `${augmentedConfig.academicYear} ${augmentedConfig.semesterNames[augmentedConfig.semester]}`,\r\n};\r\n\r\nexport default augmentedConfig;\r\n","/** moduleBank constants * */\r\n\r\nimport { ModuleCode } from '../types/modules';\r\n\r\nexport const FETCH_MODULE = 'FETCH_MODULE' as const; // Action to fetch modules\r\nexport const FETCH_MODULE_LIST = 'FETCH_MODULE_LIST' as const;\r\nexport const UPDATE_MODULE_TIMESTAMP = 'UPDATE_MODULE_TIMESTAMP' as const;\r\nexport const REMOVE_LRU_MODULE = 'REMOVE_LRU_MODULE' as const;\r\nexport const FETCH_ARCHIVE_MODULE = 'FETCH_ARCHIVE_MODULE' as const; // Action to fetch module from previous years\r\n\r\nexport type RequestType =\r\n  | typeof FETCH_MODULE\r\n  | typeof FETCH_MODULE_LIST\r\n  | typeof UPDATE_MODULE_TIMESTAMP\r\n  | typeof REMOVE_LRU_MODULE\r\n  | typeof FETCH_ARCHIVE_MODULE;\r\n\r\nexport function fetchModuleRequest(moduleCode: ModuleCode) {\r\n  return `${FETCH_MODULE}/${moduleCode}`;\r\n}\r\n\r\nexport function getRequestModuleCode(key: string): ModuleCode | null {\r\n  const parts = key.split('/');\r\n  if (parts.length === 2 && parts[0] === FETCH_MODULE) return parts[1];\r\n  return null;\r\n}\r\n\r\nexport function fetchArchiveRequest(moduleCode: ModuleCode, year: string) {\r\n  return `${FETCH_ARCHIVE_MODULE}_${moduleCode}_${year}`;\r\n}\r\n\r\n/** undoHistory constants * */\r\n\r\nexport const UNDO = 'UNDO' as const;\r\nexport const REDO = 'REDO' as const;\r\n\r\n/** export constant(s) * */\r\n\r\nexport const SET_EXPORTED_DATA = 'SET_EXPORTED_DATA' as const;\r\n","import { size } from 'lodash';\r\n\r\nimport type { AcadYear, Module, ModuleCode, ModuleCondensed } from 'types/modules';\r\nimport type { RequestActions } from 'middlewares/requests-middleware';\r\nimport type { Dispatch, GetState } from 'types/redux';\r\n\r\nimport { requestAction } from 'actions/requests';\r\nimport NUSModsApi from 'apis/nusmods';\r\nimport config from 'config';\r\nimport {\r\n  FETCH_ARCHIVE_MODULE,\r\n  FETCH_MODULE,\r\n  FETCH_MODULE_LIST,\r\n  fetchArchiveRequest,\r\n  fetchModuleRequest,\r\n  REMOVE_LRU_MODULE,\r\n  UPDATE_MODULE_TIMESTAMP,\r\n} from './constants';\r\nimport { getLRUModules } from './moduleBank-lru';\r\n\r\nexport function fetchModuleList() {\r\n  return requestAction(FETCH_MODULE_LIST, {\r\n    url: NUSModsApi.moduleListUrl(),\r\n  });\r\n}\r\nexport type FetchModuleListActions = RequestActions<typeof FETCH_MODULE_LIST, ModuleCondensed[]>;\r\n\r\nconst MAX_MODULE_LIMIT = 100;\r\nexport const Internal = {\r\n  updateModuleTimestamp(moduleCode: ModuleCode) {\r\n    return {\r\n      type: UPDATE_MODULE_TIMESTAMP,\r\n      payload: moduleCode,\r\n    };\r\n  },\r\n\r\n  removeLRUModule(moduleCodes: ModuleCode[]) {\r\n    return {\r\n      type: REMOVE_LRU_MODULE,\r\n      payload: moduleCodes,\r\n    };\r\n  },\r\n};\r\n\r\nexport function fetchModule(moduleCode: ModuleCode) {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    const onFinally = () => {\r\n      // Update the timestamp of the accessed module if it is in the store.\r\n      if (getState().moduleBank.modules[moduleCode]) {\r\n        dispatch(Internal.updateModuleTimestamp(moduleCode));\r\n      }\r\n\r\n      // Remove the LRU module if the size exceeds the maximum and if anything\r\n      // can be removed\r\n      const overLimitCount = size(getState().moduleBank.modules) - MAX_MODULE_LIMIT;\r\n      if (overLimitCount > 0) {\r\n        const { moduleBank, timetables } = getState();\r\n\r\n        const LRUModule = getLRUModules(\r\n          moduleBank.modules,\r\n          timetables.lessons,\r\n          moduleCode,\r\n          overLimitCount,\r\n        );\r\n\r\n        if (LRUModule) {\r\n          dispatch(Internal.removeLRUModule(LRUModule));\r\n        }\r\n      }\r\n    };\r\n\r\n    const key = fetchModuleRequest(moduleCode);\r\n\r\n    return dispatch<Module>(\r\n      requestAction(key, FETCH_MODULE, {\r\n        url: NUSModsApi.moduleDetailsUrl(moduleCode),\r\n      }),\r\n    ).then(\r\n      (module) => {\r\n        onFinally();\r\n        return module;\r\n      },\r\n      (error: Error) => {\r\n        onFinally();\r\n        throw error;\r\n      },\r\n    );\r\n  };\r\n}\r\nexport type FetchModuleActions = RequestActions<typeof FETCH_MODULE, Omit<Module, 'timestamp'>>;\r\n\r\nexport function fetchModuleArchive(moduleCode: ModuleCode, year: string) {\r\n  const key = fetchArchiveRequest(moduleCode, year);\r\n  const action = requestAction(key, FETCH_ARCHIVE_MODULE, {\r\n    url: NUSModsApi.moduleDetailsUrl(moduleCode, year),\r\n  });\r\n\r\n  action.meta.academicYear = year;\r\n  return action;\r\n}\r\nexport type FetchModuleArchiveActions = RequestActions<\r\n  typeof FETCH_ARCHIVE_MODULE,\r\n  Omit<Module, 'timestamp'>,\r\n  { academicYear: string }\r\n>;\r\n\r\nexport function fetchAllModuleArchive(moduleCode: ModuleCode) {\r\n  // Returns: Promise<[AcadYear, Module?][]>\r\n  return (dispatch: Dispatch) =>\r\n    Promise.all(\r\n      config.archiveYears.map((year) =>\r\n        dispatch<Module>(fetchModuleArchive(moduleCode, year))\r\n          .catch(() => null)\r\n          .then((module): [AcadYear, Module | null] => [year, module]),\r\n      ),\r\n    );\r\n}\r\n\r\nexport type ModuleBankRequestActions =\r\n  | FetchModuleListActions\r\n  | FetchModuleActions\r\n  | FetchModuleArchiveActions;\r\n","import { flatMap, sortBy, get } from 'lodash';\r\n\r\nimport { ModulesMap } from 'types/reducers';\r\nimport { TimetableConfig } from 'types/timetables';\r\nimport { ModuleCode } from 'types/modules';\r\n\r\n// Module bank utils - exported separately so this does not become exported as an action creator\r\n\r\n// Export for testing\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport function getLRUModules(\r\n  modules: ModulesMap,\r\n  lessons: TimetableConfig,\r\n  currentModule: string,\r\n  toRemove = 1,\r\n): ModuleCode[] {\r\n  // Pull all the modules in all the timetables\r\n  const timetableModules = new Set(flatMap(lessons, (semester) => Object.keys(semester)));\r\n\r\n  // Remove the module which is least recently used and which is not in timetable\r\n  // and not the currently loaded one\r\n  const canRemove: ModuleCode[] = Object.keys(modules).filter(\r\n    (moduleCode) => moduleCode !== currentModule && !timetableModules.has(moduleCode),\r\n  );\r\n\r\n  // Sort them based on the timestamp alone\r\n  const sortedModules = sortBy<ModuleCode>(canRemove, (moduleCode) =>\r\n    get(modules[moduleCode], ['timestamp'], 0),\r\n  );\r\n\r\n  return sortedModules.slice(0, toRemove);\r\n}\r\n","import { NotificationOptions } from 'types/reducers';\r\n\r\nexport const SET_ONLINE_STATUS = 'SET_ONLINE_STATUS' as const;\r\nexport function setOnlineStatus(isOnline: boolean) {\r\n  return {\r\n    type: SET_ONLINE_STATUS,\r\n    payload: { isOnline },\r\n  };\r\n}\r\n\r\nexport const TOGGLE_FEEDBACK_MODAL = 'TOGGLE_FEEDBACK_MODAL' as const;\r\nexport function toggleFeedback() {\r\n  return {\r\n    type: TOGGLE_FEEDBACK_MODAL,\r\n    payload: null,\r\n  };\r\n}\r\n\r\nexport const OPEN_NOTIFICATION = 'OPEN_NOTIFICATION' as const;\r\nexport function openNotification(message: string, options: NotificationOptions = {}) {\r\n  return {\r\n    type: OPEN_NOTIFICATION,\r\n    payload: {\r\n      message,\r\n      ...options,\r\n    },\r\n  };\r\n}\r\n\r\nexport const POP_NOTIFICATION = 'POP_NOTIFICATION' as const;\r\nexport function popNotification() {\r\n  return {\r\n    type: POP_NOTIFICATION,\r\n    payload: null,\r\n  };\r\n}\r\n\r\nexport const PROMPT_REFRESH = 'PROMPT_REFRESH' as const;\r\nexport function promptRefresh() {\r\n  return {\r\n    type: PROMPT_REFRESH,\r\n    payload: null,\r\n  };\r\n}\r\n","// Various utility types and type utilities for making working with TypeScript\r\n// easier\r\n\r\n/**\r\n * Remove from T the subset K\r\n */\r\nexport type Subtract<T extends K, K> = Omit<T, keyof K>;\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type AnyFunction = (...args: any[]) => any;\r\n\r\nexport type FunctionPropertyNames<T> = {\r\n  [K in keyof T]: T[K] extends AnyFunction ? K : never;\r\n}[keyof T];\r\n\r\n/**\r\n * We still need the {} type for things like components that take no props,\r\n * which is safe since JSX adds intrinsic attributes. This just gets around\r\n * the ESLint ban in a more readable fashion while still ensuring functions\r\n * don't use this type (since it is named Props)\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type EmptyProps = {};\r\n\r\n/**\r\n * Returns the types of the value of T\r\n */\r\nexport type Values<T extends Record<string, unknown>> = T[keyof T];\r\n\r\nexport const EMPTY_ARRAY: readonly unknown[] = [];\r\n\r\nexport const notNull = <T>(x: T | null | undefined): x is T => x != null;\r\n\r\n// TypeScript by default only allows string in parseFloat, even though this works fine\r\nexport const parseFloat = (float: number | string): number =>\r\n  typeof float === 'string' ? window.parseFloat(float) : float;\r\n\r\n/**\r\n * Used to assert that a value is never, usually used to verify that all values of a\r\n * union has been checked in a switch or series of if statements, eg.\r\n *\r\n * Do not use if the value can actually be something else, but we want our typing\r\n * to be tighter, such as with values from the user, since this will throw an error and\r\n * crash if called at run time. Use verifyNever instead in those cases.\r\n */\r\nexport function assertNever(value: never): never {\r\n  throw new Error(`Should be unreachable, unexpected value: ${JSON.stringify(value)}`);\r\n}\r\n\r\n/**\r\n * Typechecking helper that asserts a value cannot be reached. Same idea as\r\n * assertNever, but does not throw in case you want to do something else like\r\n * log instead.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport function verifyNever(_value: never) {\r\n  // Body left intentionally empty\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { RegPeriodType, ScheduleType } from 'config';\r\n\r\nimport { Mode } from './settings';\r\nimport { ColorIndex, Lesson, EditingLesson, SemTimetableMultiConfig, TimetableConfig } from './timetables';\r\nimport {\r\n  Faculty,\r\n  Module,\r\n  ModuleCode,\r\n  ModuleCondensed,\r\n  SearchableModule,\r\n  Semester,\r\n} from './modules';\r\nimport { VenueList } from './venues';\r\n\r\n/* app.js */\r\nexport type NotificationOptions = {\r\n  // Amount of time in ms for the notification to be shown, not including opening\r\n  // and closing animation\r\n  // Default: a non-zero, non-infinity value - currently 2750ms.\r\n  readonly timeout?: number;\r\n\r\n  // By default any notification that comes in when there is already a notification\r\n  // shown will be queued behind the current one. If the notification is not too important,\r\n  // or we expect a large number to be generated in a short period of time, we allow the\r\n  // current notification to be overwritten by the new one.\r\n  // Default behavior: false\r\n  readonly overwritable?: boolean;\r\n\r\n  // If `priority` is true, the new notification pushes aside the queue and the currently displayed\r\n  // notification, and is displayed immediately. Like this: https://youtu.be/Iimj0j4NYME\r\n  // `overwritable` behavior is prioritized over `priority`; an overwritable priority notification\r\n  // will be discarded if a non-overwritable notification is opened.\r\n  // Default behavior: false\r\n  readonly priority?: boolean;\r\n\r\n  readonly action?: {\r\n    readonly text: string;\r\n    readonly handler: () => boolean | null | void; // Return false to disable notification auto-close\r\n  };\r\n\r\n  // This function will be called when the notification is about to be closed,\r\n  // just before animation starts (i.e. just before state transitions to Closing).\r\n  // `discarded`: if false, notification will be displayed again.\r\n  // `actionClicked`: whether the action button was clicked while the notification was displayed\r\n  readonly willClose?: (discarded: boolean, actionClicked: boolean) => void;\r\n};\r\n\r\nexport type NotificationData = { readonly message: string } & NotificationOptions;\r\n\r\nexport type AppState = {\r\n  readonly activeSemester: Semester;\r\n  readonly activeLesson: Lesson | null;\r\n  readonly editingLesson: EditingLesson | null;\r\n  readonly selectedLessons: SemTimetableMultiConfig;\r\n  readonly isOnline: boolean;\r\n  readonly isFeedbackModalOpen: boolean;\r\n  readonly notifications: NotificationData[];\r\n  readonly promptRefresh: boolean;\r\n};\r\n\r\n/* requests.js */\r\nexport type RequestKey = string;\r\n\r\nexport type ApiStatus = '_REQUEST' | '_SUCCESS' | '_FAILURE';\r\nexport const REQUEST = '_REQUEST' as const;\r\nexport const SUCCESS = '_SUCCESS' as const;\r\nexport const FAILURE = '_FAILURE' as const;\r\n\r\nexport type FetchRequest = {\r\n  status: ApiStatus;\r\n  error?: AxiosError;\r\n};\r\n\r\nexport type Requests = { [requestKey: string]: FetchRequest };\r\n\r\n/* theme.js */\r\nexport type TimetableOrientation = 'HORIZONTAL' | 'VERTICAL';\r\nexport const VERTICAL: TimetableOrientation = 'VERTICAL';\r\nexport const HORIZONTAL: TimetableOrientation = 'HORIZONTAL';\r\n\r\nexport type ThemeState = Readonly<{\r\n  id: string;\r\n  timetableOrientation: TimetableOrientation;\r\n  showTitle: boolean;\r\n}>;\r\n\r\n/* settings */\r\nexport type ModRegRoundKey = { type: RegPeriodType; name?: string };\r\n\r\nexport type ModRegNotificationSettings = {\r\n  readonly enabled: boolean;\r\n  readonly semesterKey: string;\r\n  readonly dismissed: ModRegRoundKey[];\r\n  readonly scheduleType: ScheduleType;\r\n};\r\n\r\nexport type ModuleTableOrder = 'exam' | 'mc' | 'code';\r\n\r\nexport type SettingsState = {\r\n  readonly newStudent: boolean;\r\n  readonly faculty: Faculty | null;\r\n  readonly mode: Mode;\r\n  readonly hiddenInTimetable: ModuleCode[];\r\n  readonly modRegNotification: ModRegNotificationSettings;\r\n  readonly moduleTableOrder: ModuleTableOrder;\r\n  readonly beta?: boolean;\r\n  readonly loadDisqusManually: boolean;\r\n};\r\n\r\n/* timetables.js */\r\n\r\n// Mapping of module to color index [0, NUM_DIFFERENT_COLORS)\r\nexport type ColorMapping = { [moduleCode: string]: ColorIndex };\r\nexport type SemesterColorMap = { [semester: string]: ColorMapping };\r\nexport type HiddenModulesMap = { [semester: string]: ModuleCode[] };\r\n\r\nexport type TimetablesState = {\r\n  readonly lessons: TimetableConfig;\r\n  readonly colors: SemesterColorMap;\r\n  readonly hidden: HiddenModulesMap;\r\n  readonly academicYear: string;\r\n  // Mapping of academic year to old timetable config\r\n  readonly archive: { [key: string]: TimetableConfig };\r\n};\r\n\r\n/* venueBank.js */\r\n// VenueList is defined in venues.js\r\n\r\n/* planner.js */\r\n// The year, semester the module will be taken in, and the order\r\n// it appears on the list for the semester\r\nexport type PlannerTime = {\r\n  // The key in PlannerState.modules\r\n  id: string;\r\n\r\n  // The year, semester and zero-indexed position of the module in the planner\r\n  year: string;\r\n  semester: Semester;\r\n  index: number;\r\n\r\n  // Technically this should be { moduleCode } | { moduleCode?, placeholderId }\r\n  // that is, it should either have a placeholder ID and maybe a module code\r\n  // or a module code, but because TS handles union types poorly we're just\r\n  // merging the two here\r\n  moduleCode?: ModuleCode;\r\n  placeholderId?: string;\r\n};\r\n\r\nexport type CustomModule = {\r\n  // For modules which the school no longer offers, we let students\r\n  // key in the name and MCs manually\r\n  readonly title?: string | null;\r\n  readonly moduleCredit: number;\r\n};\r\n\r\nexport type CustomModuleData = {\r\n  [moduleCode: string]: CustomModule;\r\n};\r\n\r\n// Mapping modules to when they will be taken\r\nexport type PlannerState = Readonly<{\r\n  minYear: string;\r\n  maxYear: string;\r\n  iblocs: boolean;\r\n  ignorePrereqCheck?: boolean; // To turn checking of prerequisites on/off\r\n\r\n  modules: { [id: string]: PlannerTime };\r\n  custom: CustomModuleData;\r\n}>;\r\n\r\n/* moduleBank.js */\r\nexport type ModuleSelectListItem = SearchableModule & {\r\n  readonly isAdded: boolean;\r\n  readonly isAdding: boolean;\r\n};\r\nexport type ModuleList = ModuleCondensed[];\r\nexport type ModuleSelectList = ModuleSelectListItem[];\r\nexport type ModuleCodeMap = { [moduleCode: string]: ModuleCondensed };\r\nexport type ModuleArchive = {\r\n  [moduleCode: string]: {\r\n    // Mapping acad year to module info\r\n    [acadYear: string]: Module;\r\n  };\r\n};\r\n\r\n/**\r\n * moduleBank types\r\n */\r\nexport type ModulesMap = {\r\n  [moduleCode: string]: Module;\r\n};\r\nexport type ModuleBank = {\r\n  moduleList: ModuleList;\r\n  modules: ModulesMap;\r\n  moduleCodes: ModuleCodeMap;\r\n  moduleArchive: ModuleArchive;\r\n  apiLastUpdatedTimestamp: string | null;\r\n};\r\n\r\n/**\r\n * undoHistory types\r\n */\r\nexport type UndoHistoryState<T extends { undoHistory: UndoHistoryState<T> }> = {\r\n  past: Partial<T>[];\r\n  present: Partial<T> | undefined;\r\n  future: Partial<T>[];\r\n};\r\n\r\n/**\r\n * venueBank types\r\n */\r\nexport type VenueBank = {\r\n  readonly venueList: VenueList;\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport type { ModuleCode, ModuleCondensed, Semester } from 'types/modules';\r\nimport type { ModuleCodeMap, ModuleSelectListItem } from 'types/reducers';\r\nimport type { SemTimetableConfig } from 'types/timetables';\r\nimport type { State } from 'types/state';\r\n\r\nimport { notNull } from 'types/utils';\r\nimport { isOngoing } from './requests';\r\nimport { getRequestModuleCode } from '../actions/constants';\r\n\r\n// Returns a getter that returns module condensed given a module code\r\nexport type ModuleCondensedGetter = (moduleCode: ModuleCode) => ModuleCondensed | undefined;\r\nexport const getModuleCondensed = createSelector(\r\n  ({ moduleBank }: State) => moduleBank.moduleCodes,\r\n  (moduleCodes: ModuleCodeMap): ModuleCondensedGetter =>\r\n    (moduleCode: ModuleCode) =>\r\n      moduleCodes[moduleCode],\r\n);\r\n\r\nexport function getAllPendingModules(state: State): ModuleCode[] {\r\n  return Object.keys(state.requests)\r\n    .filter((key) => isOngoing(state, key))\r\n    .map(getRequestModuleCode)\r\n    .filter(notNull);\r\n}\r\n\r\nexport function getSemModuleSelectList(\r\n  state: State,\r\n  semester: Semester,\r\n  semTimetableConfig: SemTimetableConfig,\r\n): ModuleSelectListItem[] {\r\n  const pendingModules = new Set(getAllPendingModules(state));\r\n\r\n  return (\r\n    state.moduleBank.moduleList\r\n      // In specified semester and not within the timetable.\r\n      .filter((item) => item.semesters.includes(semester))\r\n      .map((module) => ({\r\n        ...module,\r\n        isAdded: module.moduleCode in semTimetableConfig,\r\n        isAdding: pendingModules.has(module.moduleCode),\r\n      }))\r\n  );\r\n}\r\n","import {\r\n  format,\r\n  getHours,\r\n  getISODay,\r\n  getMinutes,\r\n  getSeconds,\r\n  parseISO,\r\n  setHours,\r\n  setMinutes,\r\n  setSeconds,\r\n  startOfDay,\r\n} from 'date-fns';\r\nimport { DayText, LessonTime } from 'types/modules';\r\nimport { TimePeriod } from 'types/venues';\r\nimport { Lesson } from 'types/timetables';\r\n\r\nconst SGT_OFFSET = -8 * 60;\r\n\r\nexport function getLessonTimeHours(time: LessonTime): number {\r\n  return parseInt(time.substring(0, 2), 10);\r\n}\r\n\r\nexport function getLessonTimeMinutes(time: LessonTime): number {\r\n  return parseInt(time.substring(2), 10);\r\n}\r\n\r\n// Converts a 24-hour format time string to an index.\r\n// Each index corresponds to one cell of each timetable row.\r\n// Each row may not start from index 0, it depends on the config's starting time.\r\n// 0000 -> 0, 0030 -> 1, 0100 -> 2, ...\r\nexport function convertTimeToIndex(time: LessonTime): number {\r\n  const hour = getLessonTimeHours(time);\r\n  const minute = getLessonTimeMinutes(time);\r\n\r\n  // TODO: Expose incorrect offsets to user via UI\r\n  // Currently we round up in half hour blocks, but the actual time is not shown\r\n  let minuteOffset;\r\n  if (minute === 0) {\r\n    minuteOffset = 0;\r\n  } else if (minute <= 30) {\r\n    minuteOffset = 1;\r\n  } else {\r\n    minuteOffset = 2;\r\n  }\r\n\r\n  return hour * 2 + minuteOffset;\r\n}\r\n\r\n// Reverse of convertTimeToIndex.\r\n// 0 -> 0000, 1 -> 0030, 2 -> 0100, ... , 48 -> 2400\r\nexport function convertIndexToTime(index: number): LessonTime {\r\n  const timeIndex = Math.min(index, 48);\r\n  const hour: number = Math.floor(timeIndex / 2);\r\n  const minute: string = timeIndex % 2 === 0 ? '00' : '30';\r\n  return (hour < 10 ? `0${hour}` : hour.toString()) + minute;\r\n}\r\n\r\nexport function formatHour(hour: number): string {\r\n  if (hour === 12) return '12 noon';\r\n  if (hour === 0 || hour === 24) return '12 midnight';\r\n  if (hour < 12) return `${hour}am`;\r\n  return `${hour - 12}pm`;\r\n}\r\n\r\nexport function getTimeAsDate(time: string | number, date: Date = new Date()): Date {\r\n  const dateNumber = typeof time === 'string' ? parseInt(time, 10) : time;\r\n  return setHours(setMinutes(startOfDay(date), dateNumber % 100), Math.floor(dateNumber / 100));\r\n}\r\n\r\nexport function formatTime(time: string | number): string {\r\n  const timeNumber = typeof time === 'string' ? parseInt(time, 10) : time;\r\n\r\n  if (timeNumber === 0) return '12 midnight';\r\n  if (timeNumber === 1200) return '12 noon';\r\n\r\n  return format(getTimeAsDate(timeNumber), 'h:mm a').toLowerCase();\r\n}\r\n\r\n// Create a new date object with time from the second date object\r\nexport function setTime(date: Date, time: Date): Date {\r\n  return setHours(setMinutes(setSeconds(date, getSeconds(time)), getMinutes(time)), getHours(time));\r\n}\r\n\r\nexport const SCHOOLDAYS: DayText[] = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\nexport const DEFAULT_EARLIEST_TIME: LessonTime = '1000';\r\nexport const DEFAULT_LATEST_TIME: LessonTime = '1800';\r\n\r\n// Given an array of lessons, we calculate the earliest and latest timings based on the lesson timings.\r\n// This bounds will then be used to decide the starting and ending hours of the timetable.\r\nexport function calculateBorderTimings(\r\n  lessons: Lesson[],\r\n  period?: TimePeriod,\r\n): { startingIndex: number; endingIndex: number } {\r\n  let earliestTime: number = convertTimeToIndex(DEFAULT_EARLIEST_TIME);\r\n  let latestTime: number = convertTimeToIndex(DEFAULT_LATEST_TIME);\r\n  lessons.forEach((lesson) => {\r\n    earliestTime = Math.min(earliestTime, convertTimeToIndex(lesson.startTime));\r\n    latestTime = Math.max(latestTime, convertTimeToIndex(lesson.endTime));\r\n  });\r\n\r\n  // Consider time range of period, if applicable\r\n  if (period != null) {\r\n    earliestTime = Math.min(earliestTime, convertTimeToIndex(period.startTime));\r\n    latestTime = Math.max(latestTime, convertTimeToIndex(period.endTime));\r\n  }\r\n\r\n  return {\r\n    startingIndex: earliestTime % 2 === 0 ? earliestTime : earliestTime - 1, // floor to earliest hour.\r\n    endingIndex: latestTime % 2 === 0 ? latestTime : latestTime + 1, // ceil to latest hour.\r\n  };\r\n}\r\n\r\n/**\r\n * Gets the current time in hours, 0915 -> 9, 1315 -> 13\r\n * @deprecated Use date injected by withTimer instead\r\n */\r\nexport function getCurrentHours(\r\n  now: Date = new Date(), // Used for tests only\r\n): number {\r\n  return now.getHours();\r\n}\r\n\r\n/**\r\n * Gets the current time in hours, 0915 -> 15, 1345 -> 45\r\n * Current time to always match Singapore's\r\n *\r\n * @deprecated Use date injected by withTimer instead\r\n */\r\nexport function getCurrentMinutes(\r\n  now: Date = new Date(), // Used for tests only\r\n): number {\r\n  return now.getMinutes();\r\n}\r\n\r\n// Monday = 0, Friday = 4, Sunday = 6\r\nexport function getDayIndex(date: Date = new Date()): number {\r\n  return getISODay(date) - 1;\r\n}\r\n\r\n/**\r\n * Return a copy of the original Date incremented by the given number of days\r\n *\r\n * @deprecated Use addDays from date-fns\r\n */\r\nexport function daysAfter(startDate: Date, days: number): Date {\r\n  const d = new Date(startDate.valueOf());\r\n  d.setUTCDate(d.getUTCDate() + days);\r\n  return d;\r\n}\r\n\r\n/**\r\n * Converts a Date object representing an event happening in Singapore time\r\n * and outputs a new Date object with the local time in SGT. This is useful\r\n * in conjunction with format from date-fns since it always use local time when\r\n * formatting output.\r\n *\r\n * @example\r\n *     // Exam is at 9AM 23rd of October 2016\r\n *     const examDate = new Date('2016-11-23T01:00:00.000Z');\r\n *     format(examDate, 'dd-MM-yyyy p');\r\n *     // => \"23-11-2016 9:00 AM\", no matter where the user machine's TZ is\r\n */\r\nexport function toSingaporeTime(date: string | number | Date): Date {\r\n  const localDate = new Date(date);\r\n  return new Date(localDate.getTime() + (localDate.getTimezoneOffset() - SGT_OFFSET) * 60 * 1000);\r\n}\r\n\r\n/**\r\n * Convert an ISO date string, eg. 2018-10-12 to a Date object with the\r\n * given date and time set to midnight SGT (UTC+8)\r\n */\r\nexport function parseDate(string: string): Date {\r\n  return parseISO(`${string}T00:00+0800`);\r\n}\r\n","import * as React from 'react';\r\nimport { escapeRegExp, castArray } from 'lodash';\r\n\r\n// Define some useful Unicode characters as constants\r\nexport const NBSP = '\\u00a0';\r\nexport const ZWSP = '\\u200b';\r\nexport const BULLET = ' • ';\r\nexport const BULLET_NBSP = '\\u00a0•\\u00a0';\r\n\r\n/**\r\n * Replace substring matching the provided regex with React nodes. This is\r\n * basically the React version of replacing bits of strings with HTML tags,\r\n * except it is safer as the returned result is a React Node, so there's\r\n * no need to set innerHTML. This is useful for eg. highlighting search results\r\n * with <mark>\r\n *\r\n * @param str\r\n * @param regex\r\n * @param replacement\r\n * @returns {Node}\r\n */\r\nexport function replaceWithNode(\r\n  str: string,\r\n  regex: RegExp,\r\n  replacement: (match: string, index: number) => React.ReactNode,\r\n): React.ReactElement {\r\n  const parts = str.split(regex);\r\n\r\n  // We want to ensure the resulting array always have the matches at even position\r\n  // eg. ['Some text ', 'CS1010S', ' more text ', 'CS3216', 'more text']\r\n  // This allows us to replace the even position elements with components.\r\n  // However, if the string starts with a match, then the first element will be a match\r\n  // so we add in an empty string to pad matches to even positions\r\n  if (parts.length && regex.test(parts[0])) parts.unshift('');\r\n\r\n  return (\r\n    <>\r\n      {parts.map((part, i) => {\r\n        if (i % 2 === 0) return part;\r\n        return replacement(part, (i - 1) / 2);\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function highlight(str: string, search: string | string[], Tag = 'mark'): React.ReactNode {\r\n  const terms = castArray(search).filter(Boolean);\r\n  if (!terms.length) return str;\r\n  const regex = new RegExp(`(${terms.map(escapeRegExp).join('|')})`, 'ig');\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore This does not type check correctly\r\n  return replaceWithNode(str, regex, (match, i) => <Tag key={i}>{match}</Tag>);\r\n}\r\n\r\n/**\r\n * Replaces all spaces in a string with U+00A0 non-breaking spaces. This\r\n * avoids the browser inserting a page break between text that are part\r\n * of the same logical unit in the UI, such as 'Semester 1' or 'Week 13'.\r\n * Avoid using this for content.\r\n *\r\n * @param {string} text\r\n * @returns {string}\r\n */\r\nexport function noBreak(text: string): string {\r\n  return text.replace(/ /g, NBSP);\r\n}\r\n\r\nexport function defer(task: () => unknown) {\r\n  window.requestAnimationFrame(() => {\r\n    window.requestAnimationFrame(task);\r\n  });\r\n}\r\n\r\n// We really don't care about the props here\r\nexport function wrapComponentName<T>(Component: React.ComponentType<T>, wrapper: string): string {\r\n  return `${wrapper}(${Component.displayName || Component.name || 'Component'})`;\r\n}\r\n\r\n/**\r\n * Small utility function to scroll to an element with ID matching the URL hash if\r\n * both are present.\r\n *\r\n * This mimics traditional webpage behavior and should be used in componentDidMount() when\r\n * the component is not loaded on initial page load (ie. the element is not in the DOM when\r\n * the page is initially loaded), but has content that can be linked to via hashes.\r\n */\r\nexport function scrollToHash(hash: string) {\r\n  if (hash) {\r\n    const ele = document.getElementById(hash.slice(1)); // Hash string contains the '#' character\r\n    if (ele) {\r\n      ele.scrollIntoView(true);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Utility class that encapsulates an auto-incrementing counter. Useful for\r\n * keeping track of Downshift item indices\r\n */\r\nexport class Counter {\r\n  count = -1;\r\n\r\n  index() {\r\n    this.count += 1;\r\n    return this.count;\r\n  }\r\n\r\n  matches(index: number | null | undefined) {\r\n    this.count += 1;\r\n    return this.count === index;\r\n  }\r\n}\r\n\r\n/**\r\n * Reset scroll position to (0, 0)\r\n */\r\nexport function resetScrollPosition() {\r\n  window.scrollTo(0, 0);\r\n}\r\n","import _ from 'lodash';\r\nimport { format } from 'date-fns';\r\nimport type {\r\n  Module,\r\n  ModuleCode,\r\n  RawLesson,\r\n  Semester,\r\n  SemesterData,\r\n  SemesterDataCondensed,\r\n} from 'types/modules';\r\n\r\nimport config from 'config';\r\nimport { NBSP, noBreak } from 'utils/react';\r\nimport { Lesson, SemTimetableMultiConfig } from 'types/timetables';\r\nimport { toSingaporeTime } from './timify';\r\n\r\n// Look for strings that look like module codes - eg.\r\n// ACC1010  - 3 chars, 4 digits, no suffix\r\n// CS1010FC - 2 chars, 4 digits, 2 chars\r\n// CS2014R  - 2 chars, 4 digits, 1 char\r\n// BMA 5001 - 3 chars, space, 4 digits\r\nexport const MODULE_CODE_REGEX = /\\b(\\w{2,4}\\s*\\d{4}\\w{0,3})\\b/g;\r\n\r\n// Returns semester specific details such as exam date and timetable.\r\nexport function getModuleSemesterData(\r\n  module: Module,\r\n  semester: Semester,\r\n): SemesterData | undefined {\r\n  return module.semesterData.find((semData: SemesterData) => semData.semester === semester);\r\n}\r\n\r\n// Returns a flat array of lessons of a module for the corresponding semester.\r\nexport function getModuleTimetable(module: Module, semester: Semester): readonly RawLesson[] {\r\n  return _.get(getModuleSemesterData(module, semester), 'timetable', []);\r\n}\r\n\r\n// Is the lesson already selected and stored in selectedLessons?\r\nexport function areLessonsSelected(lesson: Lesson, selectedLessons: SemTimetableMultiConfig): boolean {\r\n  return (selectedLessons[lesson.moduleCode]?.[lesson.lessonType] || []).includes(lesson.classNo);\r\n}\r\n\r\n// Do these two lessons belong to the same class?\r\nexport function areLessonsSameClass(lesson1: Lesson, lesson2: Lesson): boolean {\r\n  return (\r\n    lesson1.moduleCode === lesson2.moduleCode &&\r\n    lesson1.classNo === lesson2.classNo &&\r\n    lesson1.lessonType === lesson2.lessonType\r\n  );\r\n}\r\n\r\n/**\r\n * Convert exam in ISO format to 12-hour date/time format.\r\n */\r\nexport function formatExamDate(examDate: string | null | undefined): string {\r\n  if (!examDate) return 'No Exam';\r\n\r\n  const localDate = toSingaporeTime(examDate);\r\n  return format(localDate, 'dd-MMM-yyyy p');\r\n}\r\n\r\nexport function getExamDate(module: Module, semester: Semester): string | null {\r\n  return _.get(getModuleSemesterData(module, semester), 'examDate') || null;\r\n}\r\n\r\nexport function getExamDuration(module: Module, semester: Semester): number | null {\r\n  return _.get(getModuleSemesterData(module, semester), 'examDuration') || null;\r\n}\r\n\r\nexport function getFormattedExamDate(module: Module, semester: Semester): string {\r\n  const examDate = getExamDate(module, semester);\r\n  return formatExamDate(examDate);\r\n}\r\n\r\n// Returns the current semester if it is found in semesters, or the first semester\r\n// where it is available\r\nexport function getFirstAvailableSemester(\r\n  semesters: readonly SemesterDataCondensed[],\r\n  current: Semester = config.semester, // For testing only\r\n): Semester {\r\n  const availableSemesters = semesters.map((semesterData) => semesterData.semester);\r\n  // Assume there is at least 1 semester\r\n  return availableSemesters.includes(current) ? current : Math.min(...availableSemesters);\r\n}\r\n\r\nexport function getSemestersOffered(module: Module): Semester[] {\r\n  return module.semesterData.map((semesterData) => semesterData.semester).sort();\r\n}\r\n\r\nexport function renderMCs(moduleCredits: number | string) {\r\n  const credit = typeof moduleCredits === 'string' ? parseFloat(moduleCredits) : moduleCredits;\r\n  return `${credit}${NBSP}${credit === 1 ? 'Unit' : 'Units'}`;\r\n}\r\n\r\nexport function renderExamDuration(examDuration: number) {\r\n  if (examDuration < 60 || examDuration % 30 !== 0) {\r\n    return noBreak(`${examDuration} mins`);\r\n  }\r\n  const hours = examDuration / 60;\r\n  return noBreak(`${hours} ${hours === 1 ? 'hr' : 'hrs'}`);\r\n}\r\n\r\nexport function subtractAcadYear(acadYear: string): string {\r\n  return acadYear.replace(/\\d+/g, (year) => String(parseInt(year, 10) - 1));\r\n}\r\n\r\nexport function addAcadYear(acadYear: string): string {\r\n  return acadYear.replace(/\\d+/g, (year) => String(parseInt(year, 10) + 1));\r\n}\r\n\r\nexport function isOffered(module: {\r\n  semesterData?: readonly (SemesterData | SemesterDataCondensed)[];\r\n}): boolean {\r\n  if (module.semesterData) return module.semesterData.length > 0;\r\n  return false;\r\n}\r\n\r\nexport function offsetAcadYear(year: string, offset: number) {\r\n  let i = offset;\r\n  let currentYear = year;\r\n\r\n  while (i !== 0) {\r\n    if (offset < 0) {\r\n      currentYear = subtractAcadYear(currentYear);\r\n      i += 1;\r\n    } else {\r\n      currentYear = addAcadYear(currentYear);\r\n      i -= 1;\r\n    }\r\n  }\r\n\r\n  return currentYear;\r\n}\r\n\r\nexport function getYearsBetween(minYear: string, maxYear: string): string[] {\r\n  if (minYear > maxYear) throw new Error('minYear should be less than or equal to maxYear');\r\n\r\n  const years = [];\r\n  let nextYear = minYear;\r\n  while (nextYear !== maxYear) {\r\n    years.push(nextYear);\r\n    nextYear = addAcadYear(nextYear);\r\n  }\r\n  years.push(maxYear);\r\n  return years;\r\n}\r\n\r\nexport function isGraduateModule(module: { moduleCode: ModuleCode }): boolean {\r\n  return Boolean(/[A-Z]+(5|6)\\d{3}/i.test(module.moduleCode));\r\n}\r\n","import { flatMap } from 'lodash';\r\n\r\n/**\r\n * Mixes the delimiter into the array between each element\r\n *\r\n * @param {T[]} array\r\n * @param {U} delimiter\r\n * @returns {Array<T|U>}\r\n */\r\nexport function intersperse<T, U>(array: T[], delimiter: U): (T | U)[] {\r\n  return flatMap(array, (item): (T | U)[] => [item, delimiter]).slice(0, -1);\r\n}\r\n\r\nexport function takeUntil<T>(array: T[], max: number, predicate: (t: T) => boolean): T[] {\r\n  const filtered = [];\r\n\r\n  for (let i = 0; i < array.length && filtered.length < max; i++) {\r\n    if (predicate(array[i])) filtered.push(array[i]);\r\n  }\r\n\r\n  return filtered;\r\n}\r\n\r\nexport function firstNonNull<T>(producers: (() => T | null)[]): T | null {\r\n  for (let i = 0; i < producers.length; i++) {\r\n    const result = producers[i]();\r\n    if (result != null) return result;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function deltas(numbers: readonly number[]): number[] {\r\n  const result: number[] = [];\r\n  let previous = numbers[0];\r\n  if (typeof previous !== 'number') return result;\r\n\r\n  numbers.slice(1).forEach((element) => {\r\n    result.push(element - previous);\r\n    previous = element;\r\n  });\r\n\r\n  return result;\r\n}\r\n","import { AcadWeekInfo } from 'nusmoderator';\r\nimport {\r\n  castArray,\r\n  difference,\r\n  each,\r\n  first,\r\n  flatMapDeep,\r\n  groupBy,\r\n  invert,\r\n  isEmpty,\r\n  isEqual,\r\n  last,\r\n  map,\r\n  mapValues,\r\n  partition,\r\n  pick,\r\n  range,\r\n  sample,\r\n  values,\r\n} from 'lodash';\r\nimport { addDays, min as minDate, parseISO } from 'date-fns';\r\nimport qs from 'query-string';\r\n\r\nimport {\r\n  ClassNo,\r\n  consumeWeeks,\r\n  LessonType,\r\n  Module,\r\n  ModuleCode,\r\n  NumericWeeks,\r\n  RawLesson,\r\n  Semester,\r\n} from 'types/modules';\r\n\r\nimport {\r\n  ColoredLesson,\r\n  HoverLesson,\r\n  Lesson,\r\n  ModuleLessonConfig,\r\n  SemTimetableConfig,\r\n  SemTimetableConfigWithLessons,\r\n  SemTimetableMultiConfig,\r\n  TimetableArrangement,\r\n  TimetableDayArrangement,\r\n  TimetableDayFormat,\r\n} from 'types/timetables';\r\n\r\nimport { ModuleCodeMap, ModulesMap } from 'types/reducers';\r\nimport { ExamClashes } from 'types/views';\r\n\r\nimport { getTimeAsDate } from './timify';\r\nimport { getModuleTimetable, getExamDate, getExamDuration } from './modules';\r\nimport { deltas } from './array';\r\n\r\ntype lessonTypeAbbrev = { [lessonType: string]: string };\r\nexport const LESSON_TYPE_ABBREV: lessonTypeAbbrev = {\r\n  'Design Lecture': 'DLEC',\r\n  Laboratory: 'LAB',\r\n  Lecture: 'LEC',\r\n  'Packaged Lecture': 'PLEC',\r\n  'Packaged Tutorial': 'PTUT',\r\n  Recitation: 'REC',\r\n  'Sectional Teaching': 'SEC',\r\n  'Seminar-Style Module Class': 'SEM',\r\n  Tutorial: 'TUT',\r\n  'Tutorial Type 2': 'TUT2',\r\n  'Tutorial Type 3': 'TUT3',\r\n  Workshop: 'WS',\r\n};\r\n\r\n// Reverse lookup map of LESSON_TYPE_ABBREV\r\nexport const LESSON_ABBREV_TYPE: { [key: string]: LessonType } = invert(LESSON_TYPE_ABBREV);\r\n\r\n// Used for module config serialization - these must be query string safe\r\n// See: https://stackoverflow.com/a/31300627\r\nexport const LESSON_TYPE_SEP = ':';\r\nexport const LESSON_SEP = ',';\r\n\r\nconst EMPTY_OBJECT = {};\r\n\r\nexport function isValidSemester(semester: Semester): boolean {\r\n  return semester >= 1 && semester <= 4;\r\n}\r\n\r\n//  Returns a random configuration of a module's timetable lessons.\r\n//  Used when a module is first added.\r\n//  TODO: Suggest a configuration that does not clash with itself.\r\n//  {\r\n//    [lessonType: string]: ClassNo,\r\n//  }\r\nexport function randomModuleLessonConfig(lessons: readonly RawLesson[]): ModuleLessonConfig {\r\n  const lessonByGroups: { [lessonType: string]: readonly RawLesson[] } = groupBy(\r\n    lessons,\r\n    (lesson) => lesson.lessonType,\r\n  );\r\n\r\n  const lessonByGroupsByClassNo: {\r\n    [lessonType: string]: { [classNo: string]: readonly RawLesson[] };\r\n  } = mapValues(lessonByGroups, (lessonsOfSamelessonType: readonly RawLesson[]) =>\r\n    groupBy(lessonsOfSamelessonType, (lesson) => lesson.classNo),\r\n  );\r\n\r\n  return mapValues(\r\n    lessonByGroupsByClassNo,\r\n    (group: { [classNo: string]: readonly RawLesson[] }) =>\r\n      (first(sample(group)) as RawLesson).classNo,\r\n  );\r\n}\r\n\r\n\r\n// Return matching lessons for given module ClassNo and LessonType\r\nexport function lessonsFromClassNo(classNoArray: ClassNo[], lessonType: LessonType, module: Module, lessons: readonly RawLesson[]) {\r\n  const newLessons = lessons.filter(\r\n    (lesson: RawLesson): boolean =>\r\n      lesson.lessonType === lessonType && classNoArray.includes(lesson.classNo),\r\n  );\r\n\r\n  return newLessons.map(\r\n    (lesson: RawLesson): Lesson => ({\r\n      ...lesson,\r\n      moduleCode: module.moduleCode,\r\n      title: module.title,\r\n    }),\r\n  );\r\n}\r\n\r\nexport function hydrateSemTimetableWithMultiLessons(\r\n  semTimetableConfig: SemTimetableConfig,\r\n  semTimetableMultiConfig: SemTimetableMultiConfig,\r\n  modules: ModulesMap,\r\n  semester: Semester,\r\n): SemTimetableConfigWithLessons {\r\n  return mapValues(\r\n    semTimetableConfig,\r\n    (moduleLessonConfig: ModuleLessonConfig, moduleCode: ModuleCode) => {\r\n      const module: Module = modules[moduleCode];\r\n      if (!module) return EMPTY_OBJECT;\r\n      const lessons = getModuleTimetable(module, semester);\r\n\r\n      return mapValues(moduleLessonConfig,\r\n        (classNo: ClassNo, lessonType: LessonType) => {\r\n          // Fetch from selectedLessons if module was selected, otherwise fetch from default timetable\r\n          const multiClassNo = semTimetableMultiConfig[moduleCode]?.[lessonType] || [];\r\n          const classNoArray = multiClassNo.length === 0 ? [classNo] : multiClassNo;\r\n          return lessonsFromClassNo(classNoArray, lessonType, module, lessons);\r\n        }\r\n      )\r\n    },\r\n  );\r\n}\r\n\r\n\r\n// Replaces ClassNo in SemTimetableConfig with Array<Lesson>\r\nexport function hydrateSemTimetableWithLessons(\r\n  semTimetableConfig: SemTimetableConfig,\r\n  modules: ModulesMap,\r\n  semester: Semester,\r\n): SemTimetableConfigWithLessons {\r\n  return mapValues(\r\n    semTimetableConfig,\r\n    (moduleLessonConfig: ModuleLessonConfig, moduleCode: ModuleCode) => {\r\n      const module: Module = modules[moduleCode];\r\n      if (!module) return EMPTY_OBJECT;\r\n\r\n      // TODO: Split this part into a smaller function: hydrateModuleConfigWithLessons.\r\n      return mapValues(moduleLessonConfig, (classNo: ClassNo, lessonType: LessonType) => {\r\n        const lessons = getModuleTimetable(module, semester);\r\n        const newLessons = lessons.filter(\r\n          (lesson: RawLesson): boolean =>\r\n            lesson.lessonType === lessonType && lesson.classNo === classNo,\r\n        );\r\n\r\n        const timetableLessons: Lesson[] = newLessons.map(\r\n          (lesson: RawLesson): Lesson => ({\r\n            ...lesson,\r\n            moduleCode,\r\n            title: module.title,\r\n          }),\r\n        );\r\n        return timetableLessons;\r\n      });\r\n    },\r\n  );\r\n}\r\n\r\n//  Filters a flat array of lessons and returns the lessons corresponding to lessonType.\r\nexport function lessonsForLessonType<T extends RawLesson>(\r\n  lessons: readonly T[],\r\n  lessonType: LessonType,\r\n): readonly T[] {\r\n  return lessons.filter((lesson) => lesson.lessonType === lessonType);\r\n}\r\n\r\n//  Converts from timetable config format to flat array of lessons.\r\n//  {\r\n//    [moduleCode: string]: {\r\n//      [lessonType: string]: [Lesson, Lesson, ...],\r\n//      [lessonType: string]: [Lesson, ...],\r\n//    }\r\n//  }\r\nexport function timetableLessonsArray(timetable: SemTimetableConfigWithLessons): Lesson[] {\r\n  return flatMapDeep(timetable, values);\r\n}\r\n\r\n//  Groups flat array of lessons by day.\r\n//  {\r\n//    Monday: [Lesson, Lesson, ...],\r\n//    Tuesday: [Lesson, ...],\r\n//  }\r\nexport function groupLessonsByDay(lessons: ColoredLesson[]): TimetableDayFormat {\r\n  return groupBy(lessons, (lesson) => lesson.day);\r\n}\r\n\r\n//  Determines if two lessons overlap:\r\nexport function doLessonsOverlap(lesson1: Lesson, lesson2: Lesson): boolean {\r\n  return (\r\n    lesson1.day === lesson2.day &&\r\n    lesson1.startTime < lesson2.endTime &&\r\n    lesson2.startTime < lesson1.endTime\r\n  );\r\n}\r\n\r\n//  Converts a flat array of lessons *for ONE day* into rows of lessons within that day row.\r\n//  Result invariants:\r\n//  - Each lesson will not overlap with each other.\r\n//  [\r\n//    [Lesson, Lesson, ...],\r\n//    [Lesson, ...],\r\n//  ]\r\nexport function arrangeLessonsWithinDay(lessons: ColoredLesson[]): TimetableDayArrangement {\r\n  const rows: TimetableDayArrangement = [[]];\r\n  if (isEmpty(lessons)) {\r\n    return rows;\r\n  }\r\n  const sortedLessons = lessons.sort((a, b) => {\r\n    const timeDiff = a.startTime.localeCompare(b.startTime);\r\n    return timeDiff !== 0 ? timeDiff : a.classNo.localeCompare(b.classNo);\r\n  });\r\n  sortedLessons.forEach((lesson: ColoredLesson) => {\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const rowLessons: ColoredLesson[] = rows[i];\r\n      const previousLesson = last(rowLessons);\r\n      if (!previousLesson || !doLessonsOverlap(previousLesson, lesson)) {\r\n        // Lesson does not overlap with any Lesson in the row. Add it to row.\r\n        rowLessons.push(lesson);\r\n        return;\r\n      }\r\n    }\r\n    // No existing rows are available to fit this lesson in. Append a new row.\r\n    rows.push([lesson]);\r\n  });\r\n\r\n  return rows;\r\n}\r\n\r\n//  Accepts a flat array of lessons and groups them by day and rows with each day\r\n//  for rendering on the timetable.\r\n//  Clashes in Array<Lesson> will go onto the next row within that day.\r\n//  {\r\n//    Monday: [\r\n//      [Lesson, Lesson, ...],\r\n//    ],\r\n//    Tuesday: [\r\n//      [Lesson, Lesson, Lesson, ...],\r\n//      [Lesson, Lesson, ...],\r\n//      [Lesson, ...],\r\n//    ],\r\n//    ...\r\n//  }\r\nexport function arrangeLessonsForWeek(lessons: ColoredLesson[]): TimetableArrangement {\r\n  const dayLessons = groupLessonsByDay(lessons);\r\n  return mapValues(dayLessons, (dayLesson: ColoredLesson[]) => arrangeLessonsWithinDay(dayLesson));\r\n}\r\n\r\n// Determines if a Lesson on the timetable can be modifiable / dragged around.\r\n// Condition: There are multiple ClassNo for all the Array<Lesson> in a lessonType.\r\nexport function areOtherClassesAvailable(\r\n  lessons: readonly RawLesson[],\r\n  lessonType: LessonType,\r\n): boolean {\r\n  const lessonTypeGroups = groupBy<RawLesson>(lessons, (lesson) => lesson.lessonType);\r\n  if (!lessonTypeGroups[lessonType]) {\r\n    // No such lessonType.\r\n    return false;\r\n  }\r\n  return Object.keys(groupBy(lessonTypeGroups[lessonType], (lesson) => lesson.classNo)).length > 1;\r\n}\r\n\r\n// Creates a key using only the exam date string (without time)\r\nexport function getExamDateOnly(module: Module, semester: Semester): string | undefined {\r\n  const examDateTime = getExamDate(module, semester);\r\n  return examDateTime?.slice(0, 10);\r\n}\r\n\r\n// Returns the start time of the exam as an epoch time (number). Throws an error if the module\r\n// does not have an exam date.\r\nexport function getValidExamStartTimeAsEpoch(module: Module, semester: Semester): number {\r\n  const startTimeString = getExamDate(module, semester);\r\n  if (startTimeString === null) {\r\n    throw new Error('Courses tested for clashes must have exam dates and durations!');\r\n  }\r\n  return new Date(startTimeString).getTime();\r\n}\r\n\r\n// Returns the end time of the exam as an epoch time (number). Throws an error if the module\r\n// does not have an exam date or duration.\r\nexport function getValidExamEndTimeAsEpoch(module: Module, semester: Semester): number {\r\n  const duration = getExamDuration(module, semester);\r\n  if (duration === null) {\r\n    throw new Error('Courses tested for clashes must have exam dates and durations!');\r\n  }\r\n  const startEpoch = getValidExamStartTimeAsEpoch(module, semester);\r\n  return startEpoch + duration * 60 * 1000;\r\n}\r\n\r\n// Find all exam clashes between modules in semester\r\n// Returns object associating exam dates with the modules clashing on those dates\r\nexport function findExamClashes(modules: Module[], semester: Semester): ExamClashes {\r\n  // Filter away modules without exam dates or exam durations\r\n  const filteredModules = modules.filter(\r\n    (module) =>\r\n      getExamDate(module, semester) !== null && getExamDuration(module, semester) !== null,\r\n  );\r\n\r\n  const groupedModules = groupBy(filteredModules, (module) => getExamDateOnly(module, semester));\r\n\r\n  const clashes: ExamClashes = {};\r\n\r\n  Object.values(groupedModules).forEach((sameDayMods) => {\r\n    // Sort sameDayMods by exam start time\r\n    sameDayMods.sort((a, b) => {\r\n      const aStartEpoch = getValidExamStartTimeAsEpoch(a, semester);\r\n      const bStartEpoch = getValidExamStartTimeAsEpoch(b, semester);\r\n\r\n      // Use end time as secondary key\r\n      const aEndEpoch = getValidExamEndTimeAsEpoch(a, semester);\r\n      const bEndEpoch = getValidExamEndTimeAsEpoch(b, semester);\r\n\r\n      if (aStartEpoch === bStartEpoch) {\r\n        return aEndEpoch - bEndEpoch;\r\n      }\r\n\r\n      return aStartEpoch - bStartEpoch;\r\n    });\r\n\r\n    // Initialize an empty list to hold the groups of overlapping intervals\r\n    // Each group will itself be a list of intervals\r\n    const overlappingGroups: Module[][] = [];\r\n\r\n    let currentOverlapEnd = 0;\r\n    let currentOverlappingMods: Module[] = [];\r\n\r\n    sameDayMods.forEach((mod, modIndex) => {\r\n      if (modIndex > 0 && getValidExamStartTimeAsEpoch(mod, semester) < currentOverlapEnd) {\r\n        currentOverlappingMods.push(mod);\r\n      } else {\r\n        // The current course does not overlap with the current group, so we reset\r\n        // the current group and start a new one\r\n        if (currentOverlappingMods.length > 1) {\r\n          // If the current group has more than one module, we add it to the list of clashes\r\n          overlappingGroups.push(currentOverlappingMods);\r\n        }\r\n        currentOverlapEnd = getValidExamEndTimeAsEpoch(mod, semester);\r\n        currentOverlappingMods = [mod];\r\n      }\r\n    });\r\n\r\n    // Add the last group to the list of clashes if applicable\r\n    if (currentOverlappingMods.length > 1) {\r\n      overlappingGroups.push(currentOverlappingMods);\r\n    }\r\n\r\n    overlappingGroups.forEach((group) => {\r\n      // Displayed clashing date and time, which is the start time of the last module in the group\r\n      const clashingDateTime = getExamDate(group[group.length - 1], semester);\r\n\r\n      if (clashingDateTime === null) {\r\n        throw new Error('Courses tested for clashes must have exam dates and durations!');\r\n      }\r\n\r\n      // Populate the clashes object to be returned\r\n      group.forEach((mod) => {\r\n        if (!clashes[clashingDateTime]) {\r\n          clashes[clashingDateTime] = [mod];\r\n        } else {\r\n          clashes[clashingDateTime].push(mod);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return clashes;\r\n}\r\n\r\nexport function isLessonAvailable(\r\n  lesson: Lesson,\r\n  date: Date,\r\n  weekInfo: Readonly<AcadWeekInfo>,\r\n): boolean {\r\n  return consumeWeeks(\r\n    lesson.weeks,\r\n    (weeks) => weeks.includes(weekInfo.num as number),\r\n    (weekRange) => {\r\n      const end = minDate([parseISO(weekRange.end), date]);\r\n      for (let current = parseISO(weekRange.start); current <= end; current = addDays(current, 7)) {\r\n        if (isEqual(current, date)) return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n  );\r\n}\r\n\r\nexport function isLessonOngoing(lesson: Lesson, currentTime: number): boolean {\r\n  return (\r\n    parseInt(lesson.startTime, 10) <= currentTime && currentTime < parseInt(lesson.endTime, 10)\r\n  );\r\n}\r\n\r\nexport function getStartTimeAsDate(lesson: Lesson, date: Date = new Date()): Date {\r\n  return getTimeAsDate(lesson.startTime, date);\r\n}\r\n\r\nexport function getEndTimeAsDate(lesson: Lesson, date: Date = new Date()): Date {\r\n  return getTimeAsDate(lesson.endTime, date);\r\n}\r\n\r\n/**\r\n * Validates the modules in a timetable. It removes all modules which do not exist in\r\n * the provided module code map from the timetable and returns that as the first item\r\n * in the tuple, and the module code of all removed modules as the second item.\r\n *\r\n * @param timetable\r\n * @param moduleCodes\r\n * @returns {[SemTimetableConfig, ModuleCode[]]}\r\n */\r\nexport function validateTimetableModules(\r\n  timetable: SemTimetableConfig,\r\n  moduleCodes: ModuleCodeMap,\r\n): [SemTimetableConfig, ModuleCode[]] {\r\n  const [valid, invalid] = partition(\r\n    Object.keys(timetable),\r\n    (moduleCode: ModuleCode) => moduleCodes[moduleCode],\r\n  );\r\n  return [pick(timetable, valid), invalid];\r\n}\r\n\r\n/**\r\n * Validates the lesson config for a specific module. It replaces all lessons\r\n * which invalid class number with the first available class numbers, and\r\n * removes lessons that are no longer valid\r\n * @param semester\r\n * @param lessonConfig\r\n * @param module\r\n */\r\nexport function validateModuleLessons(\r\n  semester: Semester,\r\n  lessonConfig: ModuleLessonConfig,\r\n  module: Module,\r\n): [ModuleLessonConfig, LessonType[]] {\r\n  const validatedLessonConfig: ModuleLessonConfig = {};\r\n  const updatedLessonTypes: string[] = [];\r\n\r\n  const validLessons = getModuleTimetable(module, semester);\r\n  const lessonsByType = groupBy(validLessons, (lesson) => lesson.lessonType);\r\n\r\n  each(lessonsByType, (lessons: RawLesson[], lessonType: LessonType) => {\r\n    const classNo = lessonConfig[lessonType];\r\n\r\n    // Check that the lesson exists and is valid. If it is not, insert a random\r\n    // valid lesson. This covers both\r\n    //\r\n    // - lesson type is not in the original timetable (ie. a new lesson type was introduced)\r\n    //   in which case classNo is undefined and thus would not match\r\n    // - classNo is not valid anymore (ie. the class was removed)\r\n    //\r\n    // If a lesson type is removed, then it simply won't be copied over\r\n    if (!lessons.some((lesson) => lesson.classNo === classNo)) {\r\n      validatedLessonConfig[lessonType] = lessons[0].classNo;\r\n      updatedLessonTypes.push(lessonType);\r\n    } else {\r\n      validatedLessonConfig[lessonType] = classNo;\r\n    }\r\n  });\r\n\r\n  // Add all of the removed lesson types to the array of updated lesson types\r\n  updatedLessonTypes.push(...difference(Object.keys(lessonConfig), Object.keys(lessonsByType)));\r\n  return [validatedLessonConfig, updatedLessonTypes];\r\n}\r\n\r\n// Get information for all modules present in a semester timetable config\r\nexport function getSemesterModules(\r\n  timetable: { [moduleCode: string]: unknown },\r\n  modules: ModulesMap,\r\n): Module[] {\r\n  return values(pick(modules, Object.keys(timetable)));\r\n}\r\n\r\nfunction serializeModuleConfig(config: ModuleLessonConfig): string {\r\n  // eg. { Lecture: 1, Laboratory: 2 } => LEC=1,LAB=2\r\n  return map(config, (classNo, lessonType) =>\r\n    [LESSON_TYPE_ABBREV[lessonType], encodeURIComponent(classNo)].join(LESSON_TYPE_SEP),\r\n  ).join(LESSON_SEP);\r\n}\r\n\r\nfunction parseModuleConfig(serialized: string | string[] | null): ModuleLessonConfig {\r\n  const config: ModuleLessonConfig = {};\r\n  if (!serialized) return config;\r\n\r\n  castArray(serialized).forEach((serializedModule) => {\r\n    serializedModule.split(LESSON_SEP).forEach((lesson) => {\r\n      const [lessonTypeAbbr, classNo] = lesson.split(LESSON_TYPE_SEP);\r\n      const lessonType = LESSON_ABBREV_TYPE[lessonTypeAbbr];\r\n      // Ignore unparsable/invalid keys\r\n      if (!lessonType) return;\r\n      config[lessonType] = classNo;\r\n    });\r\n  });\r\n\r\n  return config;\r\n}\r\n\r\n/**\r\n * Formats numeric week number array into something human readable\r\n *\r\n * - 1           => Week 1\r\n * - 1,2         => Weeks 1,2\r\n * - 1,2,3       => Weeks 1-3\r\n * - 1,2,3,5,6,7 => Weeks 1-3, 5-7\r\n */\r\nexport function formatNumericWeeks(unprocessedWeeks: NumericWeeks): string | null {\r\n  // Ensure list of weeks are unique\r\n  const weeks = unprocessedWeeks.filter(\r\n    (value, index) => unprocessedWeeks.indexOf(value) === index,\r\n  );\r\n\r\n  if (weeks.length === 13) return null;\r\n  if (weeks.length === 1) return `Week ${weeks[0]}`;\r\n\r\n  // Check for odd / even weeks. There are more odd weeks then even weeks, so we have to split\r\n  // the length check.\r\n  if (deltas(weeks).every((d) => d === 2)) {\r\n    if (weeks[0] % 2 === 0 && weeks.length >= 6) return 'Even Weeks';\r\n    if (weeks[0] % 2 === 1 && weeks.length >= 7) return 'Odd Weeks';\r\n  }\r\n\r\n  // Merge consecutive\r\n  const processed: (number | string)[] = [];\r\n  let start = weeks[0];\r\n  let end = start;\r\n\r\n  const mergeConsecutive = () => {\r\n    if (end - start > 2) {\r\n      processed.push(`${start}-${end}`);\r\n    } else {\r\n      processed.push(...range(start, end + 1));\r\n    }\r\n  };\r\n\r\n  weeks.slice(1).forEach((next) => {\r\n    if (next - end <= 1) {\r\n      // Consecutive week number - keep going\r\n      end = next;\r\n    } else {\r\n      // Break = push the current chunk into processed\r\n      mergeConsecutive();\r\n      start = next;\r\n      end = start;\r\n    }\r\n  });\r\n\r\n  mergeConsecutive();\r\n\r\n  return `Weeks ${processed.join(', ')}`;\r\n}\r\n\r\n// Converts a timetable config to query string\r\n// eg:\r\n// {\r\n//   CS2104: { Lecture: '1', Tutorial: '2' },\r\n//   CS2107: { Lecture: '1', Tutorial: '8' },\r\n// }\r\n// => CS2104=LEC:1,Tut:2&CS2107=LEC:1,Tut:8\r\nexport function serializeTimetable(timetable: SemTimetableConfig): string {\r\n  // We are using query string safe characters, so this encoding is unnecessary\r\n  return qs.stringify(mapValues(timetable, serializeModuleConfig), { encode: false });\r\n}\r\n\r\nexport function deserializeTimetable(serialized: string): SemTimetableConfig {\r\n  const params = qs.parse(serialized);\r\n  return mapValues(params, parseModuleConfig);\r\n}\r\n\r\nexport function deserializeHidden(serialized: string): ModuleCode[] {\r\n  const params = qs.parse(serialized);\r\n  if (!params.hidden) return [];\r\n  // If user manually enters multiple hidden query keys, use latest one\r\n  const hidden = Array.isArray(params.hidden) ? last(params.hidden) : params.hidden;\r\n  return (hidden as string).split(',');\r\n}\r\n\r\nexport function isSameTimetableConfig(t1: SemTimetableConfig, t2: SemTimetableConfig): boolean {\r\n  return isEqual(t1, t2);\r\n}\r\n\r\nexport function isSameLesson(l1: Lesson, l2: Lesson) {\r\n  return (\r\n    l1.lessonType === l2.lessonType &&\r\n    l1.classNo === l2.classNo &&\r\n    l1.moduleCode === l2.moduleCode &&\r\n    l1.startTime === l2.startTime &&\r\n    l1.endTime === l2.endTime &&\r\n    l1.day === l2.day &&\r\n    isEqual(l1.weeks, l2.weeks)\r\n  );\r\n}\r\n\r\nexport function getHoverLesson(lesson: Lesson): HoverLesson {\r\n  return {\r\n    classNo: lesson.classNo,\r\n    moduleCode: lesson.moduleCode,\r\n    lessonType: lesson.lessonType,\r\n  };\r\n}\r\n\r\n/**\r\n * Obtain a semi-unique key for a lesson\r\n */\r\nexport function getLessonIdentifier(lesson: Lesson): string {\r\n  return `${lesson.moduleCode}-${LESSON_TYPE_ABBREV[lesson.lessonType]}-${lesson.classNo}`;\r\n}\r\n","import { each, flatMap } from 'lodash';\r\n\r\nimport type { ColorIndex, Lesson, ModuleLessonConfig, SemTimetableConfig } from 'types/timetables';\r\nimport type { Dispatch, GetState } from 'types/redux';\r\nimport type { ColorMapping } from 'types/reducers';\r\nimport type { ClassNo, LessonType, Module, ModuleCode, Semester } from 'types/modules';\r\n\r\nimport { fetchModule } from 'actions/moduleBank';\r\nimport { openNotification } from 'actions/app';\r\nimport { getModuleCondensed } from 'selectors/moduleBank';\r\nimport {\r\n  randomModuleLessonConfig,\r\n  validateModuleLessons,\r\n  validateTimetableModules,\r\n} from 'utils/timetables';\r\nimport { getModuleTimetable } from 'utils/modules';\r\n\r\n// Actions that should not be used directly outside of thunks\r\nexport const SET_TIMETABLE = 'SET_TIMETABLE' as const;\r\nexport const ADD_MODULE = 'ADD_MODULE' as const;\r\nexport const SET_HIDDEN_IMPORTED = 'SET_HIDDEN_IMPORTED' as const;\r\nexport const HIDDEN_IMPORTED_SEM = 'HIDDEN_IMPORTED_SEM' as const;\r\nexport const Internal = {\r\n  setTimetable(\r\n    semester: Semester,\r\n    timetable: SemTimetableConfig | undefined,\r\n    colors?: ColorMapping,\r\n    hiddenModules?: ModuleCode[],\r\n  ) {\r\n    return {\r\n      type: SET_TIMETABLE,\r\n      payload: { semester, timetable, colors, hiddenModules },\r\n    };\r\n  },\r\n\r\n  addModule(semester: Semester, moduleCode: ModuleCode, moduleLessonConfig: ModuleLessonConfig) {\r\n    return {\r\n      type: ADD_MODULE,\r\n      payload: {\r\n        semester,\r\n        moduleCode,\r\n        moduleLessonConfig,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nexport function addModule(semester: Semester, moduleCode: ModuleCode) {\r\n  return (dispatch: Dispatch, getState: GetState) =>\r\n    dispatch(fetchModule(moduleCode)).then(() => {\r\n      const module: Module = getState().moduleBank.modules[moduleCode];\r\n\r\n      if (!module) {\r\n        dispatch(\r\n          openNotification(`Cannot load ${moduleCode}`, {\r\n            action: {\r\n              text: 'Retry',\r\n              handler: () => {\r\n                dispatch(addModule(semester, moduleCode));\r\n              },\r\n            },\r\n          }),\r\n        );\r\n\r\n        return;\r\n      }\r\n\r\n      const lessons = getModuleTimetable(module, semester);\r\n      const moduleLessonConfig = randomModuleLessonConfig(lessons);\r\n\r\n      dispatch(Internal.addModule(semester, moduleCode, moduleLessonConfig));\r\n    });\r\n}\r\n\r\nexport const REMOVE_MODULE = 'REMOVE_MODULE' as const;\r\nexport function removeModule(semester: Semester, moduleCode: ModuleCode) {\r\n  return {\r\n    type: REMOVE_MODULE,\r\n    payload: {\r\n      semester,\r\n      moduleCode,\r\n    },\r\n  };\r\n}\r\n\r\nexport const RESET_TIMETABLE = 'RESET_TIMETABLE' as const;\r\nexport function resetTimetable(semester: Semester) {\r\n  return {\r\n    type: RESET_TIMETABLE,\r\n    payload: {\r\n      semester,\r\n    },\r\n  };\r\n}\r\n\r\nexport const MODIFY_LESSON = 'MODIFY_LESSON' as const;\r\nexport function modifyLesson(activeLesson: Lesson) {\r\n  return {\r\n    type: MODIFY_LESSON,\r\n    payload: {\r\n      activeLesson,\r\n    },\r\n  };\r\n}\r\n\r\n// Enter edit mode to select and deselect lessons with the same moduleCode and lessonType\r\nexport const EDIT_LESSON = 'EDIT_LESSON' as const;\r\nexport function editLesson(lesson: Lesson) {\r\n  return {\r\n    type: EDIT_LESSON,\r\n    payload: {\r\n      lesson\r\n    },\r\n  };\r\n}\r\n\r\nexport const CANCEL_EDIT_LESSON = 'CANCEL_EDIT_LESSON' as const;\r\nexport function cancelEditLesson() {\r\n  return {\r\n    type: CANCEL_EDIT_LESSON,\r\n    payload: null,\r\n  };\r\n}\r\n\r\n// Select or deselect lessons when in edit mode\r\nexport const TOGGLE_SELECT_LESSON = 'TOGGLE_SELECT_LESSON' as const;\r\nexport function toggleSelectLesson(semester: Semester, lesson: Lesson) {\r\n  return {\r\n    type: TOGGLE_SELECT_LESSON,\r\n    payload: {\r\n      semester,\r\n      lesson,\r\n    }\r\n  };\r\n}\r\n\r\nexport const CHANGE_LESSON = 'CHANGE_LESSON' as const;\r\nexport function setLesson(\r\n  semester: Semester,\r\n  moduleCode: ModuleCode,\r\n  lessonType: LessonType,\r\n  classNo: ClassNo,\r\n) {\r\n  return {\r\n    type: CHANGE_LESSON,\r\n    payload: {\r\n      semester,\r\n      moduleCode,\r\n      lessonType,\r\n      classNo,\r\n    },\r\n  };\r\n}\r\n\r\nexport function changeLesson(semester: Semester, lesson: Lesson) {\r\n  return setLesson(semester, lesson.moduleCode, lesson.lessonType, lesson.classNo);\r\n}\r\n\r\nexport const SET_LESSON_CONFIG = 'SET_LESSON_CONFIG' as const;\r\nexport function setLessonConfig(\r\n  semester: Semester,\r\n  moduleCode: ModuleCode,\r\n  lessonConfig: ModuleLessonConfig,\r\n) {\r\n  return {\r\n    type: SET_LESSON_CONFIG,\r\n    payload: {\r\n      semester,\r\n      moduleCode,\r\n      lessonConfig,\r\n    },\r\n  };\r\n}\r\n\r\nexport const CANCEL_MODIFY_LESSON = 'CANCEL_MODIFY_LESSON' as const;\r\nexport function cancelModifyLesson() {\r\n  return {\r\n    type: CANCEL_MODIFY_LESSON,\r\n    payload: null,\r\n  };\r\n}\r\n\r\nexport function setTimetable(\r\n  semester: Semester,\r\n  timetable?: SemTimetableConfig,\r\n  colors?: ColorMapping,\r\n) {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    let validatedTimetable = timetable;\r\n    if (timetable) {\r\n      [validatedTimetable] = validateTimetableModules(timetable, getState().moduleBank.moduleCodes);\r\n    }\r\n\r\n    return dispatch(\r\n      Internal.setTimetable(\r\n        semester,\r\n        validatedTimetable,\r\n        colors,\r\n        getState().timetables.hidden[HIDDEN_IMPORTED_SEM] || [],\r\n      ),\r\n    );\r\n  };\r\n}\r\n\r\nexport function validateTimetable(semester: Semester) {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    const { timetables, moduleBank } = getState();\r\n\r\n    // Extract the timetable and the modules for the semester\r\n    const timetable = timetables.lessons[semester];\r\n    if (!timetable) return;\r\n\r\n    // Check that all lessons for each module are valid. If they are not, we update it\r\n    // such that they are\r\n    each(timetable, (lessonConfig: ModuleLessonConfig, moduleCode: ModuleCode) => {\r\n      const module = moduleBank.modules[moduleCode];\r\n      if (!module) return;\r\n\r\n      const [validatedLessonConfig, changedLessonTypes] = validateModuleLessons(\r\n        semester,\r\n        lessonConfig,\r\n        module,\r\n      );\r\n\r\n      if (changedLessonTypes.length) {\r\n        dispatch(setLessonConfig(semester, moduleCode, validatedLessonConfig));\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function fetchTimetableModules(timetables: SemTimetableConfig[]) {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    const moduleCodes = new Set(flatMap(timetables, Object.keys));\r\n    const validateModule = getModuleCondensed(getState());\r\n\r\n    return Promise.all(\r\n      Array.from(moduleCodes)\r\n        .filter(validateModule)\r\n        .map((moduleCode) => dispatch(fetchModule(moduleCode))),\r\n    );\r\n  };\r\n}\r\n\r\nexport function setHiddenModulesFromImport(hiddenModules: ModuleCode[]) {\r\n  return (dispatch: Dispatch) => dispatch(setHiddenImported(hiddenModules));\r\n}\r\n\r\nexport function setHiddenImported(hiddenModules: ModuleCode[]) {\r\n  return {\r\n    type: SET_HIDDEN_IMPORTED,\r\n    payload: { semester: HIDDEN_IMPORTED_SEM, hiddenModules },\r\n  };\r\n}\r\n\r\nexport const SELECT_MODULE_COLOR = 'SELECT_MODULE_COLOR' as const;\r\nexport function selectModuleColor(\r\n  semester: Semester,\r\n  moduleCode: ModuleCode,\r\n  colorIndex: ColorIndex,\r\n) {\r\n  return {\r\n    type: SELECT_MODULE_COLOR,\r\n    payload: {\r\n      semester,\r\n      moduleCode,\r\n      colorIndex,\r\n    },\r\n  };\r\n}\r\n\r\nexport const HIDE_LESSON_IN_TIMETABLE = 'HIDE_LESSON_IN_TIMETABLE' as const;\r\nexport function hideLessonInTimetable(semester: Semester, moduleCode: ModuleCode) {\r\n  return {\r\n    type: HIDE_LESSON_IN_TIMETABLE,\r\n    payload: { moduleCode, semester },\r\n  };\r\n}\r\n\r\nexport const SHOW_LESSON_IN_TIMETABLE = 'SHOW_LESSON_IN_TIMETABLE' as const;\r\nexport function showLessonInTimetable(semester: Semester, moduleCode: ModuleCode) {\r\n  return {\r\n    type: SHOW_LESSON_IN_TIMETABLE,\r\n    payload: { moduleCode, semester },\r\n  };\r\n}\r\n","import { Reducer } from 'redux';\r\nimport { PersistConfig, Persistor } from 'redux-persist/lib/types';\r\nimport { persistReducer as basePersistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { Actions } from 'types/actions';\r\n\r\n// Re-export type for easier consumption in other parts of the project\r\nexport { PersistConfig, Persistor };\r\n\r\n/**\r\n * Wrapper function around persistReducer from Redux Persist.\r\n */\r\nexport default function persistReducer<S>(\r\n  key: string,\r\n  reducer: Reducer<S, Actions>,\r\n  options: Pick<\r\n    PersistConfig<S>,\r\n    Exclude<keyof PersistConfig<S>, keyof { key: string; storage: Record<string, unknown> }>\r\n  > = {},\r\n) {\r\n  return basePersistReducer<S, Actions>(\r\n    {\r\n      key,\r\n      storage,\r\n      debug: NUSMODS_ENV === 'development',\r\n      ...options,\r\n    },\r\n    reducer,\r\n  ) as unknown as Reducer<S, Actions>; // We'll pretend the persist keys don't exist - the base reducers shouldn't access them anyway\r\n}\r\n","import { Requests, FAILURE, REQUEST, SUCCESS } from 'types/reducers';\r\nimport { API_REQUEST } from 'actions/requests';\r\n\r\n/**\r\n * Flux Standard Action: https://github.com/acdlite/flux-standard-action\r\n * @deprecated Use Actions from types/actions instead\r\n */\r\ntype FSA = {\r\n  type: string;\r\n  payload: any; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  meta?: any; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  error?: boolean;\r\n};\r\n\r\nexport default function requests(state: Requests = {}, action: FSA): Requests {\r\n  const { meta } = action;\r\n\r\n  // requestStatus is a field specially designed and owned by api request actions\r\n  if (!meta || !meta.requestStatus || !meta[API_REQUEST]) {\r\n    return state;\r\n  }\r\n\r\n  const key = meta[API_REQUEST];\r\n\r\n  switch (meta.requestStatus) {\r\n    case REQUEST:\r\n      return {\r\n        ...state,\r\n        [key]: {\r\n          status: REQUEST,\r\n        },\r\n      };\r\n\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        [key]: {\r\n          status: SUCCESS,\r\n        },\r\n      };\r\n\r\n    case FAILURE:\r\n      return {\r\n        ...state,\r\n        [key]: {\r\n          status: FAILURE,\r\n          error: action.payload,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import qs from 'query-string';\r\nimport { setTime } from 'utils/timify';\r\n\r\n// Debug helper - allows developers to force some hard to reproduce\r\n// conditions to trigger via query params\r\n\r\nfunction getParams() {\r\n  return qs.parse(window.location.search);\r\n}\r\n\r\n// Force the 'new version available' refresh prompt to appear\r\nexport function forceRefreshPrompt() {\r\n  return getParams().refresh === '1';\r\n}\r\n\r\n// Overriding the Elasticsearch host URL from config, used for testing with a local ES server\r\nexport function forceElasticsearchHost() {\r\n  return getParams().eshost;\r\n}\r\n\r\n// Force the current date/time to some value for components that use the\r\n// global timer HOC\r\nexport function forceTimer() {\r\n  let dateString = getParams().date;\r\n  if (!dateString) return null;\r\n  if (Array.isArray(dateString)) [dateString] = dateString;\r\n\r\n  const date = new Date(dateString);\r\n  if (Number.isNaN(date.getTime())) return null;\r\n\r\n  // Add current time if not specified\r\n  if (date.getUTCHours() === 0 && date.getMinutes() === 0 && date.getSeconds() === 0) {\r\n    return setTime(date, new Date());\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nexport function allowBusStopEditing() {\r\n  return getParams().edit === '1';\r\n}\r\n\r\nexport function preferRepoVenues() {\r\n  return getParams().localVenue === '1';\r\n}\r\n","import { isEmpty, sortBy, values, isEqual } from 'lodash';\r\nimport { differenceInCalendarDays } from 'date-fns';\r\n\r\nimport { ModRegNotificationSettings, ModRegRoundKey } from 'types/reducers';\r\nimport { RegPeriodView } from 'types/views';\r\nimport { notNull } from 'types/utils';\r\nimport config, { RegPeriod, RegPeriodType } from 'config';\r\nimport { forceTimer } from 'utils/debug';\r\n\r\nconst NO_NOTIFICATIONS: RegPeriodView[] = [];\r\n\r\nconst NOTIFICATIONS_BEFORE_DAYS = 3;\r\n\r\nexport function getModRegRoundKey({ type, name }: RegPeriod): ModRegRoundKey {\r\n  return { type, name };\r\n}\r\n\r\nexport function isRoundDismissed(key: ModRegRoundKey, dismissed: ModRegRoundKey[]) {\r\n  return Boolean(dismissed.find((dismissedRound) => isEqual(dismissedRound, key)));\r\n}\r\n\r\nexport function getRounds(\r\n  { enabled, dismissed, scheduleType }: ModRegNotificationSettings,\r\n  schedule = config.modRegSchedule,\r\n): RegPeriodView[] {\r\n  if (!enabled) return NO_NOTIFICATIONS;\r\n  const now = forceTimer() || new Date();\r\n\r\n  // Find the nearest round of each type\r\n  const nextRoundByType: { [type in RegPeriodType]?: RegPeriodView } = {};\r\n  schedule[scheduleType].forEach((period) => {\r\n    // Don't include rounds that have ended\r\n    if (period.endDate < now) return;\r\n\r\n    // Use the current round if it is earlier than the existing one\r\n    const previousPeriod = nextRoundByType[period.type];\r\n    if (!previousPeriod || previousPeriod.startDate > period.startDate) {\r\n      const roundKey = getModRegRoundKey(period);\r\n      nextRoundByType[period.type] = {\r\n        ...period,\r\n        dismissed: isRoundDismissed(roundKey, dismissed),\r\n      };\r\n    }\r\n  });\r\n\r\n  if (isEmpty(nextRoundByType)) return NO_NOTIFICATIONS;\r\n\r\n  // Sort and return all rounds within 3 days of today\r\n  const nextRounds = sortBy(values(nextRoundByType).filter(notNull), (period) => period.startDate);\r\n  return nextRounds.filter(\r\n    (round) => differenceInCalendarDays(round.startDate, now) < NOTIFICATIONS_BEFORE_DAYS,\r\n  );\r\n}\r\n","import { Faculty, Semester } from 'types/modules';\r\nimport { Mode } from 'types/settings';\r\nimport { ModuleTableOrder } from 'types/reducers';\r\n\r\nimport { RegPeriod, ScheduleType } from 'config';\r\nimport { getModRegRoundKey } from 'selectors/modreg';\r\n\r\nexport const SELECT_SEMESTER = 'SELECT_SEMESTER' as const;\r\nexport function selectSemester(semester: Semester) {\r\n  return {\r\n    type: SELECT_SEMESTER,\r\n    payload: semester,\r\n  };\r\n}\r\n\r\nexport const SELECT_NEW_STUDENT = 'SELECT_NEW_STUDENT' as const;\r\nexport function selectNewStudent(newStudent: boolean) {\r\n  return {\r\n    type: SELECT_NEW_STUDENT,\r\n    payload: newStudent,\r\n  };\r\n}\r\n\r\nexport const SELECT_FACULTY = 'SELECT_FACULTY' as const;\r\nexport function selectFaculty(faculty: Faculty) {\r\n  return {\r\n    type: SELECT_FACULTY,\r\n    payload: faculty,\r\n  };\r\n}\r\n\r\nexport const SELECT_MODE = 'SELECT_MODE' as const;\r\nexport function selectMode(mode: Mode) {\r\n  return {\r\n    type: SELECT_MODE,\r\n    payload: mode,\r\n  };\r\n}\r\n\r\nexport const TOGGLE_MODE = 'TOGGLE_MODE' as const;\r\nexport function toggleMode() {\r\n  return {\r\n    type: TOGGLE_MODE,\r\n    payload: null,\r\n  };\r\n}\r\n\r\nexport const DISMISS_MODREG_NOTIFICATION = 'DISMISS_MODREG_NOTIFICATION' as const;\r\nexport function dismissModregNotification(round: RegPeriod) {\r\n  return {\r\n    type: DISMISS_MODREG_NOTIFICATION,\r\n    payload: { round: getModRegRoundKey(round) },\r\n  };\r\n}\r\n\r\nexport const ENABLE_MODREG_NOTIFICATION = 'ENABLE_MODREG_NOTIFICATION' as const;\r\nexport function enableModRegNotification(round: RegPeriod) {\r\n  return {\r\n    type: ENABLE_MODREG_NOTIFICATION,\r\n    payload: { round: getModRegRoundKey(round) },\r\n  };\r\n}\r\n\r\nexport const TOGGLE_MODREG_NOTIFICATION_GLOBALLY = 'TOGGLE_MODREG_NOTIFICATION_GLOBALLY' as const;\r\nexport function toggleModRegNotificationGlobally(enabled: boolean) {\r\n  return {\r\n    type: TOGGLE_MODREG_NOTIFICATION_GLOBALLY,\r\n    payload: { enabled },\r\n  };\r\n}\r\n\r\nexport const SET_MODREG_SCHEDULE_TYPE = 'SET_MODREG_SCHEDULE_TYPE' as const;\r\nexport function setModRegScheduleType(scheduleType: ScheduleType) {\r\n  return {\r\n    type: SET_MODREG_SCHEDULE_TYPE,\r\n    payload: scheduleType,\r\n  };\r\n}\r\n\r\nexport const SET_MODULE_TABLE_SORT = 'SET_MODULE_TABLE_SORT' as const;\r\nexport function setModuleTableOrder(sort: ModuleTableOrder) {\r\n  return {\r\n    type: SET_MODULE_TABLE_SORT,\r\n    payload: sort,\r\n  };\r\n}\r\n\r\nexport const TOGGLE_BETA_TESTING_STATUS = 'TOGGLE_BETA_TESTING_STATUS' as const;\r\nexport function toggleBetaTesting() {\r\n  return {\r\n    type: TOGGLE_BETA_TESTING_STATUS,\r\n    payload: null,\r\n  };\r\n}\r\n\r\nexport const SET_LOAD_DISQUS_MANUALLY = 'SET_DISQUS_MANUAL_LOAD' as const;\r\nexport function setLoadDisqusManually(status: boolean) {\r\n  return {\r\n    type: SET_LOAD_DISQUS_MANUALLY,\r\n    payload: status,\r\n  };\r\n}\r\n","import { AppState } from 'types/reducers';\r\nimport { Actions } from 'types/actions';\r\nimport config from 'config';\r\n\r\nimport { forceRefreshPrompt } from 'utils/debug';\r\nimport { MODIFY_LESSON, EDIT_LESSON, TOGGLE_SELECT_LESSON, CHANGE_LESSON, CANCEL_MODIFY_LESSON, CANCEL_EDIT_LESSON } from 'actions/timetables';\r\nimport { SELECT_SEMESTER } from 'actions/settings';\r\nimport {\r\n  OPEN_NOTIFICATION,\r\n  POP_NOTIFICATION,\r\n  PROMPT_REFRESH,\r\n  SET_ONLINE_STATUS,\r\n  TOGGLE_FEEDBACK_MODAL,\r\n} from 'actions/app';\r\nimport { areLessonsSelected } from 'utils/modules';\r\n\r\nconst defaultAppState = (): AppState => ({\r\n  // Default to the current semester from config.\r\n  activeSemester: config.semester,\r\n  // The lesson being modified on the timetable.\r\n  activeLesson: null,\r\n  editingLesson: null,\r\n  selectedLessons: {},\r\n  isOnline: navigator.onLine,\r\n  isFeedbackModalOpen: false,\r\n  promptRefresh: forceRefreshPrompt(),\r\n  notifications: [],\r\n});\r\n\r\n// This reducer is for storing state pertaining to the UI.\r\nfunction app(state: AppState = defaultAppState(), action: Actions): AppState {\r\n  switch (action.type) {\r\n    case SELECT_SEMESTER:\r\n      return {\r\n        ...state,\r\n        activeSemester: action.payload,\r\n      };\r\n    case TOGGLE_SELECT_LESSON:\r\n      {\r\n        const lesson = action.payload.lesson;\r\n        const moduleCode = lesson.moduleCode;\r\n        const lessonType = lesson.lessonType;\r\n        const classNo = lesson.classNo;\r\n\r\n        // Module might not yet exist in selectedLessons, use empty array\r\n        const oldLessonType = state.selectedLessons[moduleCode]?.[lessonType] || [];\r\n        // Select or deselect lesson by adding or removing it from array\r\n        const newLessonType = areLessonsSelected(action.payload.lesson, state.selectedLessons) ?\r\n          oldLessonType.filter(e => e !== classNo) :\r\n          [...oldLessonType, classNo];\r\n        // Prevent deselecting every lesson\r\n        if (newLessonType.length === 0) return state;\r\n        return {\r\n          ...state,\r\n          selectedLessons: {\r\n            ...state.selectedLessons,\r\n            [moduleCode]: {\r\n              ...state.selectedLessons[moduleCode],\r\n              [lessonType]: newLessonType\r\n            }\r\n          }\r\n        };\r\n      }\r\n    case EDIT_LESSON:\r\n      {\r\n        const lesson = action.payload.lesson;\r\n        const moduleCode = lesson.moduleCode;\r\n        const lessonType = lesson.lessonType;\r\n        const classNo = lesson.classNo;\r\n        const oldLT = state.selectedLessons[moduleCode]?.[lessonType] || [];\r\n        const newLT = oldLT.length === 0 ? [classNo] : oldLT;\r\n        return {\r\n          ...state,\r\n          editingLesson: {\r\n            moduleCode: moduleCode,\r\n            lessonType: lessonType,\r\n          },\r\n          selectedLessons: {\r\n            ...state.selectedLessons,\r\n            [moduleCode]: {\r\n              ...state.selectedLessons[moduleCode],\r\n              [lessonType]: newLT,\r\n            }\r\n          }\r\n        };\r\n      }\r\n    case CANCEL_EDIT_LESSON:\r\n      return {\r\n        ...state,\r\n        editingLesson: null,\r\n      };\r\n    case MODIFY_LESSON:\r\n      return {\r\n        ...state,\r\n        activeLesson: action.payload.activeLesson,\r\n      };\r\n    case CANCEL_MODIFY_LESSON:\r\n    case CHANGE_LESSON:\r\n      return {\r\n        ...state,\r\n        activeLesson: null,\r\n      };\r\n    case SET_ONLINE_STATUS:\r\n      return {\r\n        ...state,\r\n        isOnline: action.payload.isOnline,\r\n      };\r\n    case TOGGLE_FEEDBACK_MODAL:\r\n      return {\r\n        ...state,\r\n        isFeedbackModalOpen: !state.isFeedbackModalOpen,\r\n      };\r\n\r\n    case PROMPT_REFRESH:\r\n      return {\r\n        ...state,\r\n        promptRefresh: true,\r\n      };\r\n    case OPEN_NOTIFICATION: {\r\n      if (state.notifications.length) {\r\n        // If the ONLY notification in the queue can be discarded, we replace\r\n        // it with the current one\r\n        if (state.notifications.length === 1 && state.notifications[0].overwritable) {\r\n          return {\r\n            ...state,\r\n            notifications: [action.payload],\r\n          };\r\n        }\r\n\r\n        // Since the displayed item cannot give way, we\r\n        // discard the new item if possible\r\n        if (action.payload.overwritable) {\r\n          return state;\r\n        }\r\n\r\n        // Since both can't be discarded, priority notification\r\n        // gets displayed immediately\r\n        if (action.payload.priority) {\r\n          return {\r\n            ...state,\r\n            notifications: [action.payload, ...state.notifications],\r\n          };\r\n        }\r\n      }\r\n\r\n      // Fallback to queuing the next item up\r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, action.payload],\r\n      };\r\n    }\r\n    case POP_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.slice(1),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default app;\r\n","import type { Middleware } from 'redux';\r\nimport type { AxiosRequestConfig, AxiosError } from 'axios';\r\nimport axios from 'axios';\r\n\r\nimport type { State } from 'types/state';\r\nimport type { Dispatch } from 'types/redux';\r\nimport { FAILURE, REQUEST, SUCCESS } from 'types/reducers';\r\nimport { API_REQUEST, RequestsDispatchExt } from 'actions/requests';\r\n\r\nexport type ActionType<Action extends string, Type extends string> = Action & { __type: Type };\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype DefaultMeta = {};\r\n\r\nexport type RequestAction<Type extends string, Meta = DefaultMeta> = {\r\n  type: ActionType<Type, typeof REQUEST>;\r\n  payload: AxiosRequestConfig;\r\n  meta?: Meta;\r\n};\r\n\r\nexport type SuccessAction<Type extends string, Response, Meta = DefaultMeta> = {\r\n  type: ActionType<Type, typeof SUCCESS>;\r\n  payload: Response;\r\n  meta?: Meta & {\r\n    requestStatus: typeof SUCCESS;\r\n    responseHeaders: { [header: string]: string };\r\n  };\r\n};\r\n\r\nexport type FailureAction<Type extends string, Meta = DefaultMeta> = {\r\n  type: ActionType<Type, typeof FAILURE>;\r\n  payload: Error;\r\n  meta?: Meta & {\r\n    requestStatus: typeof FAILURE;\r\n  };\r\n};\r\n\r\nexport type RequestActions<Type extends string, Response, Meta = DefaultMeta> =\r\n  | RequestAction<Type, Meta>\r\n  | SuccessAction<Type, Response, Meta>\r\n  | FailureAction<Type, Meta>;\r\n\r\nfunction makeRequest(request: AxiosRequestConfig) {\r\n  return axios.request({\r\n    ...request,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport function SUCCESS_KEY<Type extends string>(key: Type): ActionType<Type, typeof SUCCESS> {\r\n  return (key + SUCCESS) as ActionType<Type, typeof SUCCESS>;\r\n}\r\n\r\nexport function FAILURE_KEY<Type extends string>(key: Type): ActionType<Type, typeof FAILURE> {\r\n  return (key + FAILURE) as ActionType<Type, typeof FAILURE>;\r\n}\r\n\r\nconst requestMiddleware: Middleware<RequestsDispatchExt, State, Dispatch> =\r\n  () => (next) => (action) => {\r\n    if (!action.meta || !action.meta[API_REQUEST]) {\r\n      // Non-api request action\r\n      return next(action);\r\n    }\r\n\r\n    // type     is the base action type that will trigger\r\n    // payload  is the request body to be processed\r\n    const { type, payload, meta } = action;\r\n\r\n    // Propagate the start of the request\r\n    next({\r\n      type: type + REQUEST,\r\n      payload,\r\n      meta: {\r\n        ...meta,\r\n        requestStatus: REQUEST,\r\n      },\r\n    });\r\n\r\n    // Propagate the response of the request.\r\n    return makeRequest(payload).then(\r\n      (response) => {\r\n        next({\r\n          type: SUCCESS_KEY(type),\r\n          payload: response.data,\r\n          meta: {\r\n            ...meta,\r\n            requestStatus: SUCCESS,\r\n            request: payload,\r\n            responseHeaders: response.headers,\r\n          },\r\n        });\r\n\r\n        return response.data;\r\n      },\r\n      (error: AxiosError) => {\r\n        next({\r\n          type: FAILURE_KEY(type),\r\n          payload: error,\r\n          meta: {\r\n            ...meta,\r\n            requestStatus: FAILURE,\r\n            request: payload,\r\n          },\r\n        });\r\n\r\n        throw error;\r\n      },\r\n    );\r\n  };\r\n\r\nexport default requestMiddleware;\r\n","import produce, { Draft } from 'immer';\r\nimport { keyBy, omit, size, zipObject } from 'lodash';\r\n\r\nimport { createMigrate, REHYDRATE } from 'redux-persist';\r\nimport type { Actions } from 'types/actions';\r\nimport type { Module } from 'types/modules';\r\nimport type { ModuleBank, ModuleList } from 'types/reducers';\r\n\r\nimport {\r\n  FETCH_ARCHIVE_MODULE,\r\n  FETCH_MODULE,\r\n  FETCH_MODULE_LIST,\r\n  REMOVE_LRU_MODULE,\r\n  UPDATE_MODULE_TIMESTAMP,\r\n  SET_EXPORTED_DATA,\r\n} from 'actions/constants';\r\nimport { SUCCESS_KEY } from 'middlewares/requests-middleware';\r\n\r\nconst defaultModuleBankState: ModuleBank = {\r\n  moduleList: [], // List of basic modules data (module code, name, semester)\r\n  modules: {}, // Object of Module code -> Module details\r\n  moduleCodes: {},\r\n  moduleArchive: {},\r\n  apiLastUpdatedTimestamp: null,\r\n};\r\n\r\nfunction precomputeFromModuleList(moduleList: ModuleList) {\r\n  // Cache a mapping of all module codes to module data for fast module data lookup\r\n  const moduleCodes = zipObject(\r\n    moduleList.map((module) => module.moduleCode),\r\n    moduleList,\r\n  );\r\n\r\n  return { moduleCodes };\r\n}\r\n\r\nfunction moduleBank(state: ModuleBank = defaultModuleBankState, action: Actions): ModuleBank {\r\n  switch (action.type) {\r\n    case SUCCESS_KEY(FETCH_MODULE_LIST):\r\n      return {\r\n        ...state,\r\n        ...precomputeFromModuleList(action.payload),\r\n        moduleList: action.payload,\r\n        apiLastUpdatedTimestamp: action.meta?.responseHeaders['last-modified'] || null,\r\n      };\r\n\r\n    case SUCCESS_KEY(FETCH_MODULE):\r\n      return {\r\n        ...state,\r\n        modules: {\r\n          ...state.modules,\r\n          [action.payload.moduleCode]: { ...action.payload, timestamp: Date.now() },\r\n        },\r\n      };\r\n\r\n    case UPDATE_MODULE_TIMESTAMP:\r\n      return {\r\n        ...state,\r\n        modules: {\r\n          ...state.modules,\r\n          [action.payload]: {\r\n            ...state.modules[action.payload],\r\n            timestamp: Date.now(),\r\n          },\r\n        },\r\n      };\r\n\r\n    case REMOVE_LRU_MODULE: {\r\n      const trimmedModules = omit(state.modules, action.payload);\r\n      return {\r\n        ...state,\r\n        modules: trimmedModules,\r\n      };\r\n    }\r\n\r\n    case SUCCESS_KEY(FETCH_ARCHIVE_MODULE): {\r\n      const { meta } = action;\r\n      if (!meta) {\r\n        return state;\r\n      }\r\n\r\n      // Type hack to get this to work with the assignment below\r\n      const module = { ...action.payload, timestamp: Date.now() } as Draft<Module>;\r\n      return produce(state, (draft) => {\r\n        if (!draft.moduleArchive[module.moduleCode]) {\r\n          draft.moduleArchive[module.moduleCode] = {};\r\n        }\r\n\r\n        draft.moduleArchive[module.moduleCode][meta.academicYear] = module;\r\n      });\r\n    }\r\n\r\n    case SET_EXPORTED_DATA:\r\n      return {\r\n        ...state,\r\n        modules: keyBy(action.payload.modules, (module: Module) => module.moduleCode),\r\n      };\r\n\r\n    case REHYDRATE:\r\n      if (!size(state.moduleCodes) && state.moduleList) {\r\n        return {\r\n          ...state,\r\n          ...precomputeFromModuleList(state.moduleList),\r\n        };\r\n      }\r\n\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default moduleBank;\r\n\r\nexport const persistConfig = {\r\n  version: 1,\r\n  throttle: 1000,\r\n  whitelist: ['modules', 'moduleList'],\r\n  migrate: createMigrate({\r\n    // Clear out modules - after switching to API v2 we need to flush all of the\r\n    // old module data\r\n    1: (state) => ({\r\n      ...state,\r\n      modules: {},\r\n      moduleList: [],\r\n      // FIXME: Remove the next line when _persist is optional again.\r\n      // Cause: https://github.com/rt2zz/redux-persist/pull/919\r\n      // Issue: https://github.com/rt2zz/redux-persist/pull/1170\r\n      // eslint-disable-next-line no-underscore-dangle, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-non-null-asserted-optional-chain\r\n      _persist: state?._persist!,\r\n    }),\r\n  }),\r\n};\r\n","import { FETCH_VENUE_LIST } from 'actions/venueBank';\r\nimport { VenueBank } from 'types/reducers';\r\nimport { Actions } from 'types/actions';\r\nimport { SUCCESS_KEY } from '../middlewares/requests-middleware';\r\n\r\nconst defaultModuleBankState: VenueBank = {\r\n  venueList: [], // List of venue strings\r\n};\r\n\r\nfunction venueBank(state: VenueBank = defaultModuleBankState, action: Actions): VenueBank {\r\n  switch (action.type) {\r\n    case SUCCESS_KEY(FETCH_VENUE_LIST):\r\n      return {\r\n        ...state,\r\n        venueList: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default venueBank;\r\n\r\nexport const persistConfig = {\r\n  throttle: 1000,\r\n};\r\n","import { range, sample, without } from 'lodash';\r\n\r\nimport { ColorIndex, SemTimetableConfig } from 'types/timetables';\r\nimport { ColorMapping } from 'types/reducers';\r\nimport { ModuleCode } from 'types/modules';\r\n\r\nexport const NUM_DIFFERENT_COLORS = 8;\r\n\r\nfunction generateInitialColors(): ColorIndex[] {\r\n  return range(NUM_DIFFERENT_COLORS);\r\n}\r\n\r\n// Returns a new index that is not present in the current color index.\r\n// If there are more than NUM_DIFFERENT_COLORS modules already present,\r\n// will try to balance the color distribution if randomize === true.\r\nexport function getNewColor(currentColors: ColorIndex[], randomize = true): ColorIndex {\r\n  let availableColors = generateInitialColors();\r\n  currentColors.forEach((index: ColorIndex) => {\r\n    availableColors = without(availableColors, index);\r\n    if (availableColors.length === 0) {\r\n      availableColors = generateInitialColors();\r\n    }\r\n  });\r\n\r\n  if (randomize) {\r\n    return sample(availableColors) ?? availableColors[0];\r\n  }\r\n\r\n  return availableColors[0];\r\n}\r\n\r\n// Color lessons by a certain property of every lesson\r\n// e.g. clbk([...], 'lessonType') colors lessons by their type\r\nexport function colorLessonsByKey<T>(\r\n  lessons: T[],\r\n  key: keyof T,\r\n): (T & { colorIndex: ColorIndex })[] {\r\n  const colorMap = new Map();\r\n\r\n  return lessons.map((lesson) => {\r\n    let colorIndex = colorMap.get(lesson[key]);\r\n    if (!colorMap.has(lesson[key])) {\r\n      colorIndex = getNewColor(Array.from(colorMap.values()), false);\r\n      colorMap.set(lesson[key], colorIndex);\r\n    }\r\n\r\n    return { ...lesson, colorIndex };\r\n  });\r\n}\r\n\r\n// Fill up missing color slots given a timetable deterministically. This is useful\r\n// when importing timetables since imported modules do not have any colors defined\r\n// in the store\r\nexport function fillColorMapping(\r\n  timetable: SemTimetableConfig,\r\n  original: ColorMapping,\r\n): ColorMapping {\r\n  const colorMap: ColorMapping = {};\r\n  const colorsUsed: ColorIndex[] = [];\r\n  const withoutColors: ModuleCode[] = [];\r\n\r\n  // Collect a list of all colors used and all modules without colors\r\n  Object.keys(timetable).forEach((moduleCode) => {\r\n    if (moduleCode in original) {\r\n      colorMap[moduleCode] = original[moduleCode];\r\n      colorsUsed.push(Number(original[moduleCode]));\r\n    } else {\r\n      withoutColors.push(moduleCode);\r\n    }\r\n  });\r\n\r\n  // Assign the modules without colors\r\n  withoutColors.forEach((moduleCode) => {\r\n    const color = getNewColor(colorsUsed, false);\r\n    colorMap[moduleCode] = color;\r\n    colorsUsed.push(color);\r\n  });\r\n\r\n  return colorMap;\r\n}\r\n","import { get, omit, values } from 'lodash';\r\nimport produce from 'immer';\r\nimport { createMigrate } from 'redux-persist';\r\n\r\nimport { PersistConfig } from 'storage/persistReducer';\r\nimport { ModuleCode } from 'types/modules';\r\nimport { ModuleLessonConfig, SemTimetableConfig } from 'types/timetables';\r\nimport { ColorMapping, TimetablesState } from 'types/reducers';\r\n\r\nimport config from 'config';\r\nimport {\r\n  ADD_MODULE,\r\n  CHANGE_LESSON,\r\n  HIDDEN_IMPORTED_SEM,\r\n  HIDE_LESSON_IN_TIMETABLE,\r\n  REMOVE_MODULE,\r\n  RESET_TIMETABLE,\r\n  SELECT_MODULE_COLOR,\r\n  SET_HIDDEN_IMPORTED,\r\n  SET_LESSON_CONFIG,\r\n  SET_TIMETABLE,\r\n  SHOW_LESSON_IN_TIMETABLE,\r\n} from 'actions/timetables';\r\nimport { getNewColor } from 'utils/colors';\r\nimport { SET_EXPORTED_DATA } from 'actions/constants';\r\nimport { Actions } from '../types/actions';\r\n\r\nexport const persistConfig = {\r\n  /* eslint-disable no-useless-computed-key */\r\n  migrate: createMigrate({\r\n    [1]: (state) => ({\r\n      ...state,\r\n      archive: {},\r\n      // FIXME: Remove the next line when _persist is optional again.\r\n      // Cause: https://github.com/rt2zz/redux-persist/pull/919\r\n      // Issue: https://github.com/rt2zz/redux-persist/pull/1170\r\n      // eslint-disable-next-line no-underscore-dangle, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-non-null-asserted-optional-chain\r\n      _persist: state?._persist!,\r\n    }),\r\n  }),\r\n  /* eslint-enable */\r\n  version: 1,\r\n\r\n  // Our own state reconciler archives old timetables if the acad year is different,\r\n  // otherwise use the persisted timetable state\r\n  stateReconciler: (\r\n    inbound: TimetablesState,\r\n    original: TimetablesState,\r\n    _reduced: TimetablesState,\r\n    { debug }: PersistConfig<TimetablesState>,\r\n  ): TimetablesState => {\r\n    if (inbound.academicYear === original.academicYear) {\r\n      return inbound;\r\n    }\r\n\r\n    if (debug) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        'New academic year detected - resetting timetable and adding timetable to archive',\r\n      );\r\n    }\r\n\r\n    return {\r\n      ...original,\r\n      archive: {\r\n        ...inbound.archive,\r\n        [inbound.academicYear]: inbound.lessons,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\n// Map of lessonType to ClassNo.\r\nconst defaultModuleLessonConfig: ModuleLessonConfig = {};\r\n\r\nfunction moduleLessonConfig(\r\n  state: ModuleLessonConfig = defaultModuleLessonConfig,\r\n  action: Actions,\r\n): ModuleLessonConfig {\r\n  if (!action.payload) return state;\r\n\r\n  switch (action.type) {\r\n    case CHANGE_LESSON: {\r\n      const { classNo, lessonType } = action.payload;\r\n      if (!(classNo && lessonType)) return state;\r\n      return {\r\n        ...state,\r\n        [lessonType]: classNo,\r\n      };\r\n    }\r\n    case SET_LESSON_CONFIG:\r\n      return action.payload.lessonConfig;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Map of ModuleCode to module lesson config.\r\nconst DEFAULT_SEM_TIMETABLE_CONFIG: SemTimetableConfig = {};\r\nfunction semTimetable(\r\n  state: SemTimetableConfig = DEFAULT_SEM_TIMETABLE_CONFIG,\r\n  action: Actions,\r\n): SemTimetableConfig {\r\n  const moduleCode = get(action, 'payload.moduleCode');\r\n  if (!moduleCode) return state;\r\n\r\n  switch (action.type) {\r\n    case ADD_MODULE:\r\n      return {\r\n        ...state,\r\n        [moduleCode]: action.payload.moduleLessonConfig,\r\n      };\r\n    case REMOVE_MODULE:\r\n      return omit(state, [moduleCode]);\r\n    case CHANGE_LESSON:\r\n    case SET_LESSON_CONFIG:\r\n      return {\r\n        ...state,\r\n        [moduleCode]: moduleLessonConfig(state[moduleCode], action),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Map of semester to color mapping\r\nconst DEFAULT_SEM_COLOR_MAP = {};\r\nfunction semColors(state: ColorMapping = DEFAULT_SEM_COLOR_MAP, action: Actions): ColorMapping {\r\n  const moduleCode = get(action, 'payload.moduleCode');\r\n  if (!moduleCode) return state;\r\n\r\n  switch (action.type) {\r\n    case ADD_MODULE:\r\n      return {\r\n        ...state,\r\n        [moduleCode]: getNewColor(values(state)),\r\n      };\r\n\r\n    case REMOVE_MODULE:\r\n      return omit(state, moduleCode);\r\n\r\n    case SELECT_MODULE_COLOR:\r\n      return {\r\n        ...state,\r\n        [moduleCode]: action.payload.colorIndex,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Map of semester to list of hidden modules\r\nconst DEFAULT_HIDDEN_STATE: ModuleCode[] = [];\r\nfunction semHiddenModules(state = DEFAULT_HIDDEN_STATE, action: Actions) {\r\n  if (!action.payload) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case HIDE_LESSON_IN_TIMETABLE:\r\n      return [action.payload.moduleCode, ...state];\r\n    case SHOW_LESSON_IN_TIMETABLE:\r\n    case REMOVE_MODULE:\r\n      return state.filter((c) => c !== action.payload.moduleCode);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const defaultTimetableState: TimetablesState = {\r\n  lessons: {},\r\n  colors: {},\r\n  hidden: {},\r\n  academicYear: config.academicYear,\r\n  archive: {},\r\n};\r\n\r\nfunction timetables(\r\n  state: TimetablesState = defaultTimetableState,\r\n  action: Actions,\r\n): TimetablesState {\r\n  // All normal timetable actions should specify their semester\r\n  if (!action.payload) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case SET_TIMETABLE: {\r\n      const { semester, timetable, colors, hiddenModules } = action.payload;\r\n\r\n      return produce(state, (draft) => {\r\n        draft.lessons[semester] = timetable || DEFAULT_SEM_TIMETABLE_CONFIG;\r\n        draft.colors[semester] = colors || {};\r\n        draft.hidden[semester] = hiddenModules || [];\r\n\r\n        // Remove the old hidden imported modules\r\n        delete draft.hidden[HIDDEN_IMPORTED_SEM];\r\n      });\r\n    }\r\n\r\n    case RESET_TIMETABLE: {\r\n      const { semester } = action.payload;\r\n\r\n      return produce(state, (draft) => {\r\n        draft.lessons[semester] = DEFAULT_SEM_TIMETABLE_CONFIG;\r\n        draft.colors[semester] = DEFAULT_SEM_COLOR_MAP;\r\n        draft.hidden[semester] = DEFAULT_HIDDEN_STATE;\r\n      });\r\n    }\r\n\r\n    case ADD_MODULE:\r\n    case REMOVE_MODULE:\r\n    case SELECT_MODULE_COLOR:\r\n    case CHANGE_LESSON:\r\n    case SET_LESSON_CONFIG:\r\n    case HIDE_LESSON_IN_TIMETABLE:\r\n    case SHOW_LESSON_IN_TIMETABLE: {\r\n      const { semester } = action.payload;\r\n\r\n      return produce(state, (draft) => {\r\n        draft.lessons[semester] = semTimetable(draft.lessons[semester], action);\r\n        draft.colors[semester] = semColors(state.colors[semester], action);\r\n        draft.hidden[semester] = semHiddenModules(state.hidden[semester], action);\r\n      });\r\n    }\r\n\r\n    case SET_EXPORTED_DATA: {\r\n      const { semester, timetable, colors, hidden } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        lessons: { [semester]: timetable },\r\n        colors: { [semester]: colors },\r\n        hidden: { [semester]: hidden },\r\n      };\r\n    }\r\n\r\n    case SET_HIDDEN_IMPORTED: {\r\n      const { semester, hiddenModules } = action.payload;\r\n      return produce(state, (draft) => {\r\n        draft.hidden[semester] = hiddenModules;\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default timetables;\r\n","export const SELECT_THEME = 'SELECT_THEME' as const;\r\nexport function selectTheme(theme: string) {\r\n  return {\r\n    type: SELECT_THEME,\r\n    payload: theme,\r\n  };\r\n}\r\n\r\nexport const CYCLE_THEME = 'CYCLE_THEME' as const;\r\nexport function cycleTheme(offset: number) {\r\n  return {\r\n    type: CYCLE_THEME,\r\n    payload: offset,\r\n  };\r\n}\r\n\r\nexport const TOGGLE_TIMETABLE_ORIENTATION = 'TOGGLE_TIMETABLE_ORIENTATION' as const;\r\nexport function toggleTimetableOrientation() {\r\n  return {\r\n    type: TOGGLE_TIMETABLE_ORIENTATION,\r\n    payload: null,\r\n  };\r\n}\r\n\r\nexport const TOGGLE_TITLE_DISPLAY = 'TOGGLE_TITLE_DISPLAY' as const;\r\nexport function toggleTitleDisplay() {\r\n  return {\r\n    type: TOGGLE_TITLE_DISPLAY,\r\n    payload: null,\r\n  };\r\n}\r\n","import * as Sentry from '@sentry/browser';\r\nimport { each, size } from 'lodash';\r\n\r\nexport function captureException(error: Error, extra: { [key: string]: unknown } = {}) {\r\n  Sentry.withScope((scope) => {\r\n    each(extra, (_data, key) => {\r\n      scope.setExtra(key, extra[key]);\r\n    });\r\n\r\n    Sentry.captureException(error);\r\n\r\n    console.error(error); // eslint-disable-line no-console\r\n    if (size(extra) > 0) console.error(extra); // eslint-disable-line no-console\r\n  });\r\n}\r\n\r\n/**\r\n * Higher order function that returns a error handler useful when injecting\r\n * scripts using <script> tags\r\n */\r\nexport function getScriptErrorHandler(scriptName: string) {\r\n  return (error: unknown) => {\r\n    if (error instanceof Error) {\r\n      captureException(error);\r\n    } else {\r\n      captureException(new Error(`Error instantiating ${scriptName}`), {\r\n        error,\r\n      });\r\n    }\r\n  };\r\n}\r\n","// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { History } from 'history';\r\nimport { each } from 'lodash';\r\n\r\nimport { Tracker } from 'types/vendor/piwik';\r\nimport insertScript from 'utils/insertScript';\r\nimport { getScriptErrorHandler } from 'utils/error';\r\n\r\n// Custom dimension keys mapped to their human readable names\r\n// Go to the Settings > Website > Custom Dimensions on https://analytics.nusmods.com\r\n// to set up additional custom dimensions\r\nexport const DIMENSIONS = {\r\n  theme: 1,\r\n  beta: 2,\r\n};\r\n\r\ntype TrackerAction = (tracker: Tracker) => void;\r\n\r\nconst queuedTasks: TrackerAction[] = [];\r\nlet matomo: Tracker | undefined;\r\nlet initialDimensions = false;\r\nlet initialViewTracked = false;\r\n\r\n// This function is called by both initializeMamoto and setCustomDimensions\r\n// so that the initial page view is only tracked if both the tracker and the\r\n// store is ready\r\nfunction trackInitialPageView() {\r\n  const tracker = matomo;\r\n  if (initialViewTracked || !initialDimensions || !tracker) return;\r\n\r\n  // Run all queued tasks then track initial page view\r\n  queuedTasks.forEach((action) => action(tracker));\r\n  tracker.trackPageView();\r\n\r\n  initialViewTracked = true;\r\n}\r\n\r\n// Code mostly adopted from https://github.com/AmazingDreams/vue-matomo\r\nexport function initializeMamoto() {\r\n  const siteId = '1';\r\n  const host = 'https://analytics.nusmods.com';\r\n  const scriptSrc = `${host}/piwik.js`;\r\n\r\n  insertScript(scriptSrc, { defer: true, async: true })\r\n    .then(() => {\r\n      matomo = window.Piwik.getTracker(`${host}/piwik.php`, siteId);\r\n      trackInitialPageView();\r\n    })\r\n    .catch(getScriptErrorHandler('Mamoto'));\r\n}\r\n\r\nexport function withTracker(action: TrackerAction) {\r\n  if (matomo) {\r\n    action(matomo);\r\n  } else {\r\n    queuedTasks.push(action);\r\n  }\r\n}\r\n\r\nexport function setCustomDimensions(dimensions: { [id: number]: string }) {\r\n  // Set custom dimensions\r\n  each(dimensions, (value, id) => {\r\n    withTracker((tracker) => tracker.setCustomDimension(+id, value));\r\n  });\r\n\r\n  initialDimensions = true;\r\n  trackInitialPageView();\r\n}\r\n\r\nexport function trackPageView(history: History) {\r\n  history.listen((_location, action) => {\r\n    if (action === 'PUSH') {\r\n      // Wait a bit for the page title to update\r\n      setTimeout(() => {\r\n        withTracker((tracker) => tracker.trackPageView(document.title));\r\n      }, 100);\r\n    }\r\n  });\r\n}\r\n","import { HORIZONTAL, ThemeState, VERTICAL } from 'types/reducers';\r\nimport { Theme } from 'types/settings';\r\nimport { Actions } from 'types/actions';\r\n\r\nimport { SET_EXPORTED_DATA } from 'actions/constants';\r\nimport {\r\n  CYCLE_THEME,\r\n  SELECT_THEME,\r\n  TOGGLE_TIMETABLE_ORIENTATION,\r\n  TOGGLE_TITLE_DISPLAY,\r\n} from 'actions/theme';\r\nimport themes from 'data/themes.json';\r\nimport { DIMENSIONS, withTracker } from 'bootstrapping/matomo';\r\n\r\nexport const defaultThemeState: ThemeState = {\r\n  // Available themes are defined in `themes.scss`\r\n  id: 'eighties',\r\n  timetableOrientation: HORIZONTAL,\r\n  showTitle: false,\r\n};\r\nexport const themeIds = themes.map((obj: Theme) => obj.id);\r\n\r\nfunction theme(state: ThemeState = defaultThemeState, action: Actions): ThemeState {\r\n  function setTheme(newTheme: string): ThemeState {\r\n    // Update theme analytics info\r\n    withTracker((tracker) => tracker.setCustomDimension(DIMENSIONS.theme, newTheme));\r\n\r\n    return {\r\n      ...state,\r\n      id: newTheme,\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case SELECT_THEME:\r\n      return setTheme(action.payload);\r\n\r\n    case CYCLE_THEME: {\r\n      const newThemeIndex =\r\n        (themeIds.indexOf(state.id) + themeIds.length + action.payload) % themeIds.length;\r\n\r\n      return setTheme(themeIds[newThemeIndex]);\r\n    }\r\n    case TOGGLE_TIMETABLE_ORIENTATION:\r\n      return {\r\n        ...state,\r\n        timetableOrientation: state.timetableOrientation === VERTICAL ? HORIZONTAL : VERTICAL,\r\n      };\r\n\r\n    case SET_EXPORTED_DATA:\r\n      return action.payload.theme;\r\n\r\n    case TOGGLE_TITLE_DISPLAY:\r\n      return {\r\n        ...state,\r\n        showTitle: !state.showTitle,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default theme;\r\n","export type ThemeId = string;\r\n\r\nexport type Theme = {\r\n  readonly id: ThemeId;\r\n  readonly name: string;\r\n};\r\n\r\nexport type Mode = 'LIGHT' | 'DARK';\r\nexport const LIGHT_MODE: Mode = 'LIGHT';\r\nexport const DARK_MODE: Mode = 'DARK';\r\n","import { isEqual } from 'lodash';\r\nimport produce from 'immer';\r\nimport { REHYDRATE, createMigrate } from 'redux-persist';\r\n\r\nimport { SettingsState } from 'types/reducers';\r\nimport { Actions } from 'types/actions';\r\n\r\nimport {\r\n  DISMISS_MODREG_NOTIFICATION,\r\n  ENABLE_MODREG_NOTIFICATION,\r\n  SELECT_FACULTY,\r\n  SELECT_MODE,\r\n  SELECT_NEW_STUDENT,\r\n  SET_LOAD_DISQUS_MANUALLY,\r\n  SET_MODULE_TABLE_SORT,\r\n  TOGGLE_BETA_TESTING_STATUS,\r\n  TOGGLE_MODREG_NOTIFICATION_GLOBALLY,\r\n  TOGGLE_MODE,\r\n  SET_MODREG_SCHEDULE_TYPE,\r\n} from 'actions/settings';\r\nimport { SET_EXPORTED_DATA } from 'actions/constants';\r\nimport { DIMENSIONS, withTracker } from 'bootstrapping/matomo';\r\nimport { DARK_MODE, LIGHT_MODE } from 'types/settings';\r\nimport config from 'config';\r\nimport { isRoundDismissed } from 'selectors/modreg';\r\n\r\nexport const defaultModRegNotificationState = {\r\n  semesterKey: config.getSemesterKey(),\r\n  dismissed: [],\r\n  enabled: true,\r\n  scheduleType: 'Undergraduate' as const,\r\n};\r\n\r\nconst defaultSettingsState: SettingsState = {\r\n  newStudent: false,\r\n  faculty: '',\r\n  mode: LIGHT_MODE,\r\n  hiddenInTimetable: [],\r\n  modRegNotification: defaultModRegNotificationState,\r\n  moduleTableOrder: 'exam',\r\n  beta: false,\r\n  loadDisqusManually: false,\r\n};\r\n\r\nfunction settings(state: SettingsState = defaultSettingsState, action: Actions): SettingsState {\r\n  switch (action.type) {\r\n    case SELECT_NEW_STUDENT:\r\n      return {\r\n        ...state,\r\n        newStudent: action.payload,\r\n      };\r\n    case SELECT_FACULTY:\r\n      return {\r\n        ...state,\r\n        faculty: action.payload,\r\n      };\r\n    case SELECT_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload,\r\n      };\r\n    case TOGGLE_MODE:\r\n      return {\r\n        ...state,\r\n        mode: state.mode === LIGHT_MODE ? DARK_MODE : LIGHT_MODE,\r\n      };\r\n\r\n    case TOGGLE_MODREG_NOTIFICATION_GLOBALLY:\r\n      return produce(state, (draft) => {\r\n        draft.modRegNotification.enabled = action.payload.enabled;\r\n      });\r\n\r\n    case DISMISS_MODREG_NOTIFICATION:\r\n      return produce(state, (draft) => {\r\n        if (!isRoundDismissed(action.payload.round, draft.modRegNotification.dismissed)) {\r\n          draft.modRegNotification.dismissed.push(action.payload.round);\r\n        }\r\n      });\r\n\r\n    case ENABLE_MODREG_NOTIFICATION:\r\n      return produce(state, (draft) => {\r\n        draft.modRegNotification.dismissed = draft.modRegNotification.dismissed.filter(\r\n          (key) => !isEqual(key, action.payload.round),\r\n        );\r\n      });\r\n\r\n    case SET_MODREG_SCHEDULE_TYPE:\r\n      return produce(state, (draft) => {\r\n        draft.modRegNotification.scheduleType = action.payload;\r\n      });\r\n\r\n    case SET_EXPORTED_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload.settings,\r\n      };\r\n\r\n    case SET_MODULE_TABLE_SORT:\r\n      return {\r\n        ...state,\r\n        moduleTableOrder: action.payload,\r\n      };\r\n\r\n    case TOGGLE_BETA_TESTING_STATUS: {\r\n      const newStatus = !state.beta;\r\n      withTracker((tracker) => tracker.setCustomDimension(DIMENSIONS.beta, newStatus));\r\n\r\n      return {\r\n        ...state,\r\n        beta: newStatus,\r\n      };\r\n    }\r\n\r\n    case SET_LOAD_DISQUS_MANUALLY:\r\n      return {\r\n        ...state,\r\n        loadDisqusManually: action.payload,\r\n      };\r\n\r\n    case REHYDRATE: {\r\n      let nextState = state;\r\n\r\n      // Rehydrating from store - check that the key is the same, and if not,\r\n      // reset to default state since the old dismissed notification settings is stale\r\n      if (nextState.modRegNotification.semesterKey !== config.getSemesterKey()) {\r\n        nextState = produce(nextState, (draft) => {\r\n          draft.modRegNotification.semesterKey = config.getSemesterKey();\r\n          draft.modRegNotification.dismissed = [];\r\n        });\r\n      }\r\n      return nextState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default settings;\r\n\r\nexport const persistConfig = {\r\n  version: 1,\r\n  migrate: createMigrate({\r\n    // any is used because migration typing is hard\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    1: ({ corsNotification, ...state }: any) => ({\r\n      // Rename corsNotification to modRegNotification and set the default modRegScheduleType\r\n      modRegNotification: defaultSettingsState.modRegNotification,\r\n      ...state,\r\n    }),\r\n  }),\r\n};\r\n","import { PlaceholderMap } from 'types/planner';\r\n\r\nconst placeholders: PlaceholderMap = {\r\n  ge: {\r\n    id: 'ge',\r\n    name: 'Any GE module',\r\n    filter: (module) => !!module.moduleCode.match(/^GE[HQRST]/i),\r\n  },\r\n  get: {\r\n    id: 'get',\r\n    name: 'Any GET',\r\n    filter: (module) => module.moduleCode.startsWith('GET'),\r\n  },\r\n  ges: {\r\n    id: 'ges',\r\n    name: 'Any GES',\r\n    filter: (module) => module.moduleCode.startsWith('GES'),\r\n  },\r\n  ger: {\r\n    id: 'ger',\r\n    name: 'Any GER',\r\n    filter: (module) => module.moduleCode.startsWith('GER'),\r\n  },\r\n  geq: {\r\n    id: 'geq',\r\n    name: 'Any GEQ',\r\n    filter: (module) => module.moduleCode.startsWith('GEQ'),\r\n  },\r\n  geh: {\r\n    id: 'geh',\r\n    name: 'Any GEH',\r\n    filter: (module) => module.moduleCode.startsWith('GEH'),\r\n  },\r\n};\r\n\r\nexport default placeholders;\r\n","import { PlaceholderMap } from 'types/planner';\r\n\r\nconst placeholders: PlaceholderMap = {\r\n  csScience: {\r\n    id: 'csScience',\r\n    name: 'Science requirement',\r\n    modules: new Set([\r\n      'CM1121',\r\n      'CM1131',\r\n      'CM1417',\r\n      'LSM1102',\r\n      'LSM1105',\r\n      'LSM1106',\r\n      'LSM1301',\r\n      'LSM1302',\r\n      'PC1141',\r\n      'PC1142',\r\n      'PC1143',\r\n      'PC1144',\r\n      'PC1221',\r\n      'PC1222',\r\n      'PC1432',\r\n      'MA2213',\r\n      'MA2214',\r\n      'CM1101',\r\n      'CM1111',\r\n      'CM1161',\r\n      'CM1191',\r\n      'CM1401',\r\n      'CM1402',\r\n      'CM1501',\r\n      'CM1502',\r\n      'LSM1303',\r\n      'LSM1306',\r\n      'PC1421',\r\n      'PC1431',\r\n      'PC1433',\r\n      'MA1104',\r\n      'MA2104',\r\n      'MA1104',\r\n      'MA2104',\r\n      'MA2101',\r\n      'MA2108',\r\n      'MA2501',\r\n      'ST2132',\r\n      'ST2137',\r\n    ]),\r\n  },\r\n};\r\n\r\nexport default placeholders;\r\n","import general from './general';\r\nimport cs from './cs';\r\n\r\nexport default {\r\n  ...general,\r\n  ...cs,\r\n};\r\n\r\nexport const placeholderGroups = {\r\n  general,\r\n  cs,\r\n};\r\n","import produce from 'immer';\r\nimport { each, max, min, pull } from 'lodash';\r\nimport { createMigrate, PersistedState } from 'redux-persist';\r\n\r\nimport { PlannerState } from 'types/reducers';\r\nimport { Actions } from 'types/actions';\r\nimport { Semester } from 'types/modules';\r\n\r\nimport {\r\n  ADD_CUSTOM_PLANNER_DATA,\r\n  ADD_PLANNER_MODULE,\r\n  MOVE_PLANNER_MODULE,\r\n  REMOVE_PLANNER_MODULE,\r\n  SET_PLACEHOLDER_MODULE,\r\n  SET_PLANNER_IBLOCS,\r\n  SET_PLANNER_MAX_YEAR,\r\n  SET_PLANNER_MIN_YEAR,\r\n  SET_IGNORE_PREREQUISITES_CHECK,\r\n} from 'actions/planner';\r\nimport { filterModuleForSemester } from 'selectors/planner';\r\nimport config from 'config';\r\n\r\nconst defaultPlannerState: PlannerState = {\r\n  minYear: config.academicYear,\r\n  maxYear: config.academicYear,\r\n  iblocs: false,\r\n  ignorePrereqCheck: false,\r\n\r\n  modules: {},\r\n  custom: {},\r\n};\r\n\r\n/**\r\n * Derive the next ID in PlannerState.modules by incrementing from the last\r\n * existing ID\r\n */\r\nexport function nextId(modules: PlannerState['modules']): string {\r\n  const ids = Object.keys(modules).map(Number);\r\n  if (ids.length === 0) return '0';\r\n  return String(Math.max(...ids) + 1);\r\n}\r\n\r\n/**\r\n * Get a list of IDs in a specific year and semester, optionally excluding the\r\n * given ID\r\n */\r\nfunction getSemesterIds(\r\n  modules: PlannerState['modules'],\r\n  year: string,\r\n  semester: Semester,\r\n  exclude?: string,\r\n): string[] {\r\n  const ids = filterModuleForSemester(modules, year, semester).map((module) => module.id);\r\n  if (exclude) return pull(ids, exclude);\r\n  return ids;\r\n}\r\n\r\nexport default function planner(\r\n  state: PlannerState = defaultPlannerState,\r\n  action: Actions,\r\n): PlannerState {\r\n  switch (action.type) {\r\n    case SET_PLANNER_MIN_YEAR:\r\n      return {\r\n        ...state,\r\n        minYear: action.payload,\r\n        maxYear: max([action.payload, state.maxYear]) as string,\r\n      };\r\n\r\n    case SET_PLANNER_MAX_YEAR:\r\n      return {\r\n        ...state,\r\n        maxYear: action.payload,\r\n        minYear: min([action.payload, state.minYear]) as string,\r\n      };\r\n\r\n    case SET_PLANNER_IBLOCS:\r\n      return { ...state, iblocs: action.payload };\r\n\r\n    case SET_IGNORE_PREREQUISITES_CHECK:\r\n      return { ...state, ignorePrereqCheck: action.payload };\r\n\r\n    case ADD_PLANNER_MODULE: {\r\n      const { payload } = action;\r\n      const { year, semester } = payload;\r\n\r\n      const id = nextId(state.modules);\r\n      const index = getSemesterIds(state.modules, year, semester).length;\r\n      const props =\r\n        payload.type === 'placeholder'\r\n          ? { placeholderId: payload.placeholderId }\r\n          : { moduleCode: payload.moduleCode };\r\n\r\n      return produce(state, (draft) => {\r\n        draft.modules[id] = {\r\n          id,\r\n          year,\r\n          semester,\r\n          index,\r\n          ...props,\r\n        };\r\n      });\r\n    }\r\n\r\n    case MOVE_PLANNER_MODULE: {\r\n      const { id, year, semester, index } = action.payload;\r\n\r\n      // Insert the module into its new location and update the location of\r\n      // all other modules on the list. We exclude the moved module because otherwise\r\n      // a duplicate will be inserted\r\n      const newModuleOrder = getSemesterIds(state.modules, year, semester, id);\r\n      newModuleOrder.splice(index, 0, id);\r\n\r\n      // If the module is moved from another year / semester, then we also need\r\n      // to update the index of the old module list\r\n      let oldModuleOrder: string[] = [];\r\n      const { year: oldYear, semester: oldSemester } = state.modules[id];\r\n      if (oldYear !== year || oldSemester !== semester) {\r\n        oldModuleOrder = getSemesterIds(state.modules, oldYear, oldSemester, id);\r\n      }\r\n\r\n      // Update the index of all affected modules\r\n      return produce(state, (draft) => {\r\n        draft.modules[id].year = year;\r\n        draft.modules[id].semester = semester;\r\n\r\n        newModuleOrder.forEach((newId, order) => {\r\n          draft.modules[newId].index = order;\r\n        });\r\n\r\n        oldModuleOrder.forEach((oldId, order) => {\r\n          draft.modules[oldId].index = order;\r\n        });\r\n      });\r\n    }\r\n\r\n    case REMOVE_PLANNER_MODULE:\r\n      return produce(state, (draft) => {\r\n        delete draft.modules[action.payload.id];\r\n      });\r\n\r\n    case ADD_CUSTOM_PLANNER_DATA:\r\n      return produce(state, (draft) => {\r\n        draft.custom[action.payload.moduleCode] = action.payload.data;\r\n      });\r\n\r\n    case SET_PLACEHOLDER_MODULE:\r\n      return produce(state, (draft) => {\r\n        draft.modules[action.payload.id].moduleCode = action.payload.moduleCode;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Migration from state V0 -> V1\r\ntype PlannerStateV0 = Omit<PlannerState, 'modules'> & {\r\n  modules: { [moduleCode: string]: [string, Semester, number] };\r\n};\r\nexport function migrateV0toV1(\r\n  oldState: PlannerStateV0 & PersistedState,\r\n): PlannerState & PersistedState {\r\n  // Map the old module time mapping of module code to module time tuple\r\n  // to the new mapping of id to module time object\r\n  let id = 0;\r\n\r\n  const newModules: PlannerState['modules'] = {};\r\n\r\n  each(oldState.modules, ([year, semester, index], moduleCode) => {\r\n    newModules[id] = {\r\n      id: String(id),\r\n      year,\r\n      semester,\r\n      index,\r\n      moduleCode,\r\n    };\r\n\r\n    id += 1;\r\n  });\r\n\r\n  return {\r\n    ...oldState,\r\n    // Map old ModuleTime type to new PlannerTime shape\r\n    modules: newModules,\r\n  };\r\n}\r\n\r\nexport const persistConfig = {\r\n  version: 1,\r\n  migrate: createMigrate({\r\n    // The typings for this seems really weird\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    1: migrateV0toV1 as any,\r\n  }),\r\n};\r\n","import { flatMap, get, sortBy, values } from 'lodash';\r\nimport { ModuleCode, Semester, Semesters } from 'types/modules';\r\nimport {\r\n  PlannerState,\r\n  ModulesMap,\r\n  ModuleCodeMap,\r\n  CustomModuleData,\r\n  PlannerTime,\r\n} from 'types/reducers';\r\nimport config from 'config';\r\nimport { getYearsBetween, subtractAcadYear } from 'utils/modules';\r\nimport {\r\n  checkPrerequisite,\r\n  EXEMPTION_SEMESTER,\r\n  EXEMPTION_YEAR,\r\n  IBLOCS_SEMESTER,\r\n  PLAN_TO_TAKE_SEMESTER,\r\n  PLAN_TO_TAKE_YEAR,\r\n} from 'utils/planner';\r\nimport { findExamClashes } from 'utils/timetables';\r\nimport { Conflict, PlannerModuleInfo, PlannerModulesWithInfo } from 'types/planner';\r\nimport placeholders from 'utils/placeholders';\r\nimport { notNull } from 'types/utils';\r\nimport { State } from 'types/state';\r\nimport { ExamClashes } from 'types/views';\r\n\r\n/**\r\n * Get a list of modules planned for a specific semester in an acad year\r\n * in the order specified by the index\r\n */\r\nexport function filterModuleForSemester(\r\n  modules: PlannerState['modules'],\r\n  year: string,\r\n  semester: Semester,\r\n) {\r\n  const moduleTimes = values(modules).filter(\r\n    (module) => module.year === year && module.semester === semester,\r\n  );\r\n  return sortBy(moduleTimes, (module) => module.index);\r\n}\r\n\r\n/**\r\n * Conflict checkers - checks if a module has some issue that requires displaying\r\n * the yellow triangle in the UI.\r\n *\r\n * All conflict checks below are higher order functions returning\r\n * a (ModuleCode) => Conflict | null which can be passed into the last parameter\r\n * of mapModuleInfo\r\n */\r\n\r\n/**\r\n * Checks if a module has unfulfilled prereqs\r\n */\r\nconst prereqConflict =\r\n  (modulesMap: ModulesMap, modulesTaken: Set<ModuleCode>) =>\r\n  (moduleCode: ModuleCode): Conflict | null => {\r\n    const prereqs = get(modulesMap, [moduleCode, 'prereqTree']);\r\n    if (!prereqs) return null;\r\n\r\n    const unfulfilledPrereqs = checkPrerequisite(modulesTaken, prereqs);\r\n    if (!unfulfilledPrereqs || !unfulfilledPrereqs.length) return null;\r\n\r\n    return { type: 'prereq', unfulfilledPrereqs };\r\n  };\r\n\r\n/**\r\n * Checks if a module exists in our data\r\n */\r\nconst noInfoConflict =\r\n  (moduleCodeMap: ModuleCodeMap, customData: CustomModuleData) =>\r\n  (moduleCode: ModuleCode): Conflict | null =>\r\n    moduleCodeMap[moduleCode] || customData[moduleCode] ? null : { type: 'noInfo' };\r\n\r\n/**\r\n * Checks if modules are added to semesters in which they are not available\r\n */\r\nconst semesterConflict =\r\n  (moduleCodeMap: ModuleCodeMap, semester: Semester) =>\r\n  (moduleCode: ModuleCode): Conflict | null => {\r\n    const moduleCondensed = moduleCodeMap[moduleCode];\r\n    if (!moduleCondensed) return null;\r\n    if (!moduleCondensed.semesters.includes(semester)) {\r\n      return { type: 'semester', semestersOffered: moduleCondensed.semesters };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n/**\r\n * Checks if there are exam clashes. The clashes come from the caller since the exam clash function\r\n * calculates clashes for all modules in one semester, so it would be wasteful to rerun the exam\r\n * clash function for every call to this function.\r\n */\r\nconst examConflict =\r\n  (clashes: ExamClashes) =>\r\n  (moduleCode: ModuleCode): Conflict | null => {\r\n    const clash = values(clashes).find((modules) =>\r\n      Boolean(modules.find((module) => module.moduleCode === moduleCode)),\r\n    );\r\n\r\n    if (clash) {\r\n      return { type: 'exam', conflictModules: clash.map((module) => module.moduleCode) };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\nfunction mapModuleToInfo(\r\n  module: PlannerTime,\r\n  modulesMap: ModulesMap,\r\n  customModules: CustomModuleData,\r\n  conflictChecks: ((moduleCode: ModuleCode) => Conflict | null)[],\r\n): PlannerModuleInfo {\r\n  const { id, moduleCode, placeholderId } = module;\r\n  const moduleInfo: PlannerModuleInfo = {\r\n    id,\r\n    moduleCode,\r\n    conflict: null,\r\n  };\r\n\r\n  if (placeholderId) {\r\n    moduleInfo.placeholder = placeholders[placeholderId];\r\n    moduleInfo.customInfo = {\r\n      moduleCredit: 4,\r\n    };\r\n  }\r\n\r\n  if (moduleCode) {\r\n    // Only continue checking until the first conflict is found\r\n    let index = 0;\r\n    while (!moduleInfo.conflict && index < conflictChecks.length) {\r\n      moduleInfo.conflict = conflictChecks[index](moduleCode);\r\n      index += 1;\r\n    }\r\n\r\n    // Insert customInfo and moduleInfo\r\n    moduleInfo.moduleInfo = modulesMap[moduleCode];\r\n    moduleInfo.customInfo = customModules[moduleCode];\r\n  }\r\n\r\n  return moduleInfo;\r\n}\r\n\r\nexport function getPrereqModuleCode(moduleCode: ModuleCode): ModuleCode[] {\r\n  const moduleCodes = [moduleCode];\r\n\r\n  // Also try to match the non-variant version (without the suffix alphabets)\r\n  // of the module code\r\n  const match = /([A-Z]+\\d+)[A-Z]+$/gi.exec(moduleCode);\r\n  if (match) moduleCodes.push(match[1]);\r\n\r\n  return moduleCodes;\r\n}\r\n\r\n/**\r\n * Maps modules from sources outside the normal timetable,\r\n * such as exemptions, \"plan to take\" and iBLOCs modules\r\n */\r\nexport function mapNonTimetableModules(\r\n  state: State,\r\n  year: string,\r\n  semester: Semester,\r\n): PlannerModuleInfo[] {\r\n  const { planner, moduleBank } = state;\r\n  const conflictChecks = [noInfoConflict(moduleBank.moduleCodes, planner.custom)];\r\n\r\n  return filterModuleForSemester(planner.modules, year, semester).map((moduleCode) =>\r\n    mapModuleToInfo(moduleCode, moduleBank.modules, planner.custom, conflictChecks),\r\n  );\r\n}\r\n\r\nexport const getIBLOCs = (state: State): PlannerModuleInfo[] => {\r\n  if (!state.planner.iblocs) return [];\r\n  const iblocsYear = subtractAcadYear(state.planner.minYear);\r\n  return mapNonTimetableModules(state, iblocsYear, IBLOCS_SEMESTER);\r\n};\r\n\r\nexport const getExemptions = (state: State): PlannerModuleInfo[] =>\r\n  mapNonTimetableModules(state, EXEMPTION_YEAR, EXEMPTION_SEMESTER);\r\n\r\nexport const getPlanToTake = (state: State): PlannerModuleInfo[] =>\r\n  mapNonTimetableModules(state, PLAN_TO_TAKE_YEAR, PLAN_TO_TAKE_SEMESTER);\r\n\r\n/**\r\n * Convert PlannerState into PlannerModulesWithInfo form which is more easily\r\n * consumed by the UI\r\n */\r\nexport function getAcadYearModules(state: State): PlannerModulesWithInfo {\r\n  const { planner, moduleBank } = state;\r\n  const years = getYearsBetween(planner.minYear, planner.maxYear);\r\n  const exemptions = [\r\n    // Normal exemptions\r\n    ...getExemptions(state),\r\n    // iBLOCs modules, if there are any, since they are also not included in acad year modules\r\n    ...getIBLOCs(state),\r\n  ];\r\n  const modulesTaken = new Set<ModuleCode>(\r\n    flatMap(exemptions, (module) =>\r\n      module.moduleCode ? getPrereqModuleCode(module.moduleCode) : [],\r\n    ),\r\n  );\r\n\r\n  // Same type as PlannerModulesWithInfo, but writable so we can build it here\r\n  const modules: { [year: string]: { [semester: string]: PlannerModuleInfo[] } } = {};\r\n  years.forEach((year) => {\r\n    modules[year] = {};\r\n\r\n    Semesters.forEach((semester) => {\r\n      const moduleTimes = filterModuleForSemester(planner.modules, year, semester);\r\n\r\n      // Only check for exam clashes for modules in the current year\r\n      let clashes = {};\r\n      if (year === config.academicYear) {\r\n        const semesterModules = moduleTimes\r\n          .map((moduleTime) => moduleTime.moduleCode)\r\n          .filter(notNull)\r\n          .map((moduleCode) => moduleBank.modules[moduleCode])\r\n          .filter(notNull);\r\n\r\n        clashes = findExamClashes(semesterModules, semester);\r\n      }\r\n\r\n      const conflictChecks = [\r\n        noInfoConflict(moduleBank.moduleCodes, planner.custom),\r\n        semesterConflict(moduleBank.moduleCodes, semester),\r\n        examConflict(clashes),\r\n      ];\r\n\r\n      if (!planner.ignorePrereqCheck) {\r\n        conflictChecks.push(prereqConflict(moduleBank.modules, modulesTaken));\r\n      }\r\n\r\n      modules[year][semester] = moduleTimes.map((moduleCode) =>\r\n        mapModuleToInfo(moduleCode, moduleBank.modules, planner.custom, conflictChecks),\r\n      );\r\n\r\n      // Add taken modules to set of modules taken for prerequisite calculation\r\n      moduleTimes.forEach((moduleTime) => {\r\n        if (!moduleTime.moduleCode) return;\r\n        getPrereqModuleCode(moduleTime.moduleCode).forEach((prereq) => modulesTaken.add(prereq));\r\n      });\r\n    });\r\n  });\r\n\r\n  return modules;\r\n}\r\n","import { REMOVE_MODULE, SET_TIMETABLE } from 'actions/timetables';\r\n\r\nimport persistReducer from 'storage/persistReducer';\r\nimport { State } from 'types/state';\r\nimport { Actions } from 'types/actions';\r\n\r\n// Non-persisted reducers\r\nimport requests from './requests';\r\nimport app from './app';\r\nimport createUndoReducer from './undoHistory';\r\n\r\n// Persisted reducers\r\nimport moduleBankReducer, { persistConfig as moduleBankPersistConfig } from './moduleBank';\r\nimport venueBankReducer, { persistConfig as venueBankPersistConfig } from './venueBank';\r\nimport timetablesReducer, { persistConfig as timetablesPersistConfig } from './timetables';\r\nimport themeReducer from './theme';\r\nimport settingsReducer, { persistConfig as settingsPersistConfig } from './settings';\r\nimport plannerReducer, { persistConfig as plannerPersistConfig } from './planner';\r\n\r\n// Persist reducers\r\nconst moduleBank = persistReducer('moduleBank', moduleBankReducer, moduleBankPersistConfig);\r\nconst venueBank = persistReducer('venueBank', venueBankReducer, venueBankPersistConfig);\r\nconst timetables = persistReducer('timetables', timetablesReducer, timetablesPersistConfig);\r\nconst theme = persistReducer('theme', themeReducer);\r\nconst settings = persistReducer('settings', settingsReducer, settingsPersistConfig);\r\nconst planner = persistReducer('planner', plannerReducer, plannerPersistConfig);\r\n\r\n// State default is delegated to its child reducers.\r\nconst defaultState = {} as unknown as State;\r\nconst undoReducer = createUndoReducer<State>({\r\n  limit: 1,\r\n  actionsToWatch: [REMOVE_MODULE, SET_TIMETABLE],\r\n  storedKeyPaths: ['timetables', 'theme.colors'],\r\n});\r\n\r\nexport default function reducers(state: State = defaultState, action: Actions): State {\r\n  // Update every reducer except the undo reducer\r\n  const newState: State = {\r\n    moduleBank: moduleBank(state.moduleBank, action),\r\n    venueBank: venueBank(state.venueBank, action),\r\n    requests: requests(state.requests, action),\r\n    timetables: timetables(state.timetables, action),\r\n    app: app(state.app, action),\r\n    theme: theme(state.theme, action),\r\n    settings: settings(state.settings, action),\r\n    planner: planner(state.planner, action),\r\n    undoHistory: state.undoHistory,\r\n  };\r\n  return undoReducer(state, newState, action);\r\n}\r\n","import { requestAction } from 'actions/requests';\r\nimport NUSModsApi from 'apis/nusmods';\r\nimport config from 'config';\r\nimport type { RequestActions } from 'middlewares/requests-middleware';\r\nimport type { VenueList } from 'types/venues';\r\n\r\nexport const FETCH_VENUE_LIST = 'FETCH_VENUE_LIST';\r\nexport function fetchVenueList() {\r\n  return requestAction(FETCH_VENUE_LIST, {\r\n    url: NUSModsApi.venueListUrl(config.semester),\r\n  });\r\n}\r\n\r\nexport type VenueActions = RequestActions<typeof FETCH_VENUE_LIST, VenueList>;\r\n","import { ModuleCode, Semester } from 'types/modules';\r\nimport { AddModuleData } from 'types/planner';\r\nimport { CustomModule } from 'types/reducers';\r\n\r\nexport const SET_PLANNER_MIN_YEAR = 'SET_PLANNER_MIN_YEAR' as const;\r\nexport function setPlannerMinYear(year: string) {\r\n  return {\r\n    type: SET_PLANNER_MIN_YEAR,\r\n    payload: year,\r\n  };\r\n}\r\n\r\nexport const SET_PLANNER_MAX_YEAR = 'SET_PLANNER_MAX_YEAR' as const;\r\nexport function setPlannerMaxYear(year: string) {\r\n  return {\r\n    type: SET_PLANNER_MAX_YEAR,\r\n    payload: year,\r\n  };\r\n}\r\n\r\nexport const SET_PLANNER_IBLOCS = 'SET_PLANNER_IBLOCS' as const;\r\nexport function setPlannerIBLOCs(iblocs: boolean) {\r\n  return {\r\n    type: SET_PLANNER_IBLOCS,\r\n    payload: iblocs,\r\n  };\r\n}\r\n\r\nexport const SET_IGNORE_PREREQUISITES_CHECK = 'SET_IGNORE_PREREQUISITES_CHECK' as const;\r\nexport function setIgnorePrerequisitesCheck(prereqsCheck: boolean) {\r\n  return {\r\n    type: SET_IGNORE_PREREQUISITES_CHECK,\r\n    payload: prereqsCheck,\r\n  };\r\n}\r\n\r\nexport const ADD_PLANNER_MODULE = 'ADD_PLANNER_MODULE' as const;\r\nexport function addPlannerModule(year: string, semester: Semester, module: AddModuleData) {\r\n  return {\r\n    type: ADD_PLANNER_MODULE,\r\n    payload: {\r\n      year,\r\n      semester,\r\n      ...module,\r\n    },\r\n  };\r\n}\r\n\r\nexport const MOVE_PLANNER_MODULE = 'MOVE_PLANNER_MODULE' as const;\r\nexport function movePlannerModule(id: string, year: string, semester: Semester, index: number) {\r\n  return {\r\n    type: MOVE_PLANNER_MODULE,\r\n    payload: {\r\n      id,\r\n      year,\r\n      semester,\r\n      index,\r\n    },\r\n  };\r\n}\r\n\r\nexport const REMOVE_PLANNER_MODULE = 'REMOVE_PLANNER_MODULE' as const;\r\nexport function removePlannerModule(id: string) {\r\n  return {\r\n    type: REMOVE_PLANNER_MODULE,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nexport const SET_PLACEHOLDER_MODULE = 'SET_PLACEHOLDER_MODULE' as const;\r\nexport function setPlaceholderModule(id: string, moduleCode: ModuleCode) {\r\n  return {\r\n    type: SET_PLACEHOLDER_MODULE,\r\n    payload: {\r\n      id,\r\n      moduleCode,\r\n    },\r\n  };\r\n}\r\n\r\nexport const ADD_CUSTOM_PLANNER_DATA = 'ADD_CUSTOM_PLANNER_DATA' as const;\r\nexport function addCustomModule(moduleCode: ModuleCode, data: CustomModule) {\r\n  return {\r\n    type: ADD_CUSTOM_PLANNER_DATA,\r\n    payload: { moduleCode, data },\r\n  };\r\n}\r\n","import { get, last, pick, set, takeRight } from 'lodash';\r\n\r\nimport { REDO, UNDO } from 'actions/constants';\r\nimport { UndoHistoryState } from 'types/reducers';\r\nimport { Actions } from 'types/actions';\r\n\r\nexport type UndoHistoryConfig = {\r\n  limit?: number;\r\n  actionsToWatch: string[];\r\n  storedKeyPaths: string[];\r\n};\r\n\r\n// Update undo history using the action and app states\r\n// Basically a reducer but not really, as it needs to know the previous state.\r\n// Passing state in even though state === presentAppState[config.reducerName] as the \"reducer\"\r\n// doesn't need to know that.\r\nexport function computeUndoStacks<T extends { undoHistory: UndoHistoryState<T> }>(\r\n  state: UndoHistoryState<T> = {\r\n    past: [],\r\n    present: undefined, // Don't pretend to know the present\r\n    future: [],\r\n  },\r\n  action: Actions,\r\n  previousAppState: Partial<T>,\r\n  presentAppState: Partial<T>,\r\n  config: UndoHistoryConfig,\r\n): UndoHistoryState<T> {\r\n  const { past, present, future } = state;\r\n\r\n  // If action is undo/redoable, store state\r\n  if (config.actionsToWatch.includes(action.type)) {\r\n    // Append actual present to past, and drop history past config.limit\r\n    // Limit only enforced here since undo/redo only shift the history around without adding new history\r\n    const appendedPast = [...past, pick(previousAppState, config.storedKeyPaths)];\r\n    const newPast = 'limit' in config ? takeRight(appendedPast, config.limit) : appendedPast;\r\n\r\n    return {\r\n      past: newPast,\r\n      present: pick(presentAppState, config.storedKeyPaths),\r\n      future: [],\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case UNDO: {\r\n      // Abort if no past, or present is unknown\r\n      if (past.length === 0 || !present) return state;\r\n      const previous = last(past);\r\n      const newPast = past.slice(0, past.length - 1);\r\n      return {\r\n        past: newPast,\r\n        present: previous,\r\n        future: [present, ...future],\r\n      };\r\n    }\r\n    case REDO: {\r\n      // Abort if no future, or present is unknown\r\n      if (future.length === 0 || !present) return state;\r\n      const next = future[0];\r\n      const newFuture = future.slice(1);\r\n      return {\r\n        past: [...past, present],\r\n        present: next,\r\n        future: newFuture,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n// Copy all keyPaths in present into a new copy of state\r\nexport function mergePresent<T extends Record<string, unknown>>(\r\n  state: T,\r\n  present: Record<string, unknown>,\r\n  keyPaths: string[],\r\n): T {\r\n  const newState = { ...state };\r\n  keyPaths.forEach((path) => {\r\n    const presentValue = get(present, path);\r\n    if (presentValue) set(newState, path, presentValue);\r\n  });\r\n  return newState;\r\n}\r\n\r\n// Given a config object, returns function which compute new state after\r\n// undoing/redoing/storing present as required by action.\r\nexport default function createUndoReducer<T extends { undoHistory: UndoHistoryState<T> }>(\r\n  config: UndoHistoryConfig,\r\n) {\r\n  return (previousState: T, presentState: T, action: Actions) => {\r\n    // Calculate un/redone history\r\n    const undoHistoryState = presentState.undoHistory;\r\n    const updatedHistory = computeUndoStacks(\r\n      undoHistoryState,\r\n      action,\r\n      previousState,\r\n      presentState,\r\n      config,\r\n    );\r\n    const updatedState = { ...presentState, undoHistory: updatedHistory };\r\n\r\n    // Applies undo and redo actions on overall app state\r\n    // Applies updatedHistory.present to state if action.type === {UNDO,REDO}\r\n    // Assumes updatedHistory.present is the final present state\r\n    if ((action.type === UNDO || action.type === REDO) && updatedHistory.present) {\r\n      return mergePresent(updatedState, updatedHistory.present, config.storedKeyPaths);\r\n    }\r\n    return updatedState;\r\n  };\r\n}\r\n","import { Middleware } from 'redux';\r\nimport { size } from 'lodash';\r\nimport * as Sentry from '@sentry/browser';\r\nimport produce from 'immer';\r\nimport { State } from 'types/state';\r\n\r\nconst stateTransformer = (state: State): Record<string, unknown> => ({\r\n  ...state,\r\n  moduleBank: {\r\n    moduleList: `${state.moduleBank.moduleList.length} modules`,\r\n    modules: `${size(state.moduleBank.modules)} modules`,\r\n  },\r\n  venueBank: `${state.venueBank.venueList.length} venues`,\r\n});\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nconst ravenMiddleware: Middleware<{}, State> = (store) => {\r\n  Sentry.configureScope((scope) => {\r\n    scope.addEventProcessor((event) =>\r\n      produce(event, (draft) => {\r\n        draft.extra = {\r\n          ...(draft.extra ?? {}),\r\n          'redux:state': stateTransformer(store.getState()),\r\n        };\r\n      }),\r\n    );\r\n  });\r\n\r\n  return (next) => (action) => {\r\n    Sentry.addBreadcrumb({\r\n      category: 'redux-action',\r\n      message: action.type,\r\n    });\r\n\r\n    return next(action);\r\n  };\r\n};\r\n\r\nexport default ravenMiddleware;\r\n","import { size } from 'lodash';\r\n\r\nlet usableLocalStorage: Storage;\r\n\r\n// Adapted from https://gist.github.com/juliocesar/926500\r\n// Exported for unit tests\r\nexport function createLocalStorageShim(): Storage {\r\n  const privData: Record<string, string> = {};\r\n\r\n  const storage = {\r\n    privData,\r\n\r\n    get length() {\r\n      return size(storage.privData);\r\n    },\r\n\r\n    key(index: number) {\r\n      return Object.keys(storage.privData)[index];\r\n    },\r\n\r\n    clear() {\r\n      storage.privData = {};\r\n    },\r\n\r\n    setItem(key: string, val: string) {\r\n      storage.privData[key] = val;\r\n    },\r\n\r\n    getItem(key: string) {\r\n      return storage.privData[key] || null;\r\n    },\r\n\r\n    removeItem: (key: string) => delete storage.privData[key],\r\n  };\r\n\r\n  return storage;\r\n}\r\n\r\nexport function canUseBrowserLocalStorage() {\r\n  try {\r\n    // Ensure that accessing localStorage doesn't throw\r\n    // Next line throws on Chrome with cookies disabled\r\n    const storage = window.localStorage;\r\n\r\n    // Ensure that localStorage isn't null\r\n    // Resolves https://sentry.io/share/issue/d65da46a7e19406aaee298fb89a635d6/\r\n    if (!storage) throw new Error();\r\n\r\n    // Ensure that if setItem throws, it's not because of private browsing\r\n    // If storage is empty AND setItem throws, we're probably in iOS <=10 private browsing\r\n    if (storage.length === 0) {\r\n      storage.setItem('____writetest', '1');\r\n      storage.removeItem('____writetest');\r\n    }\r\n\r\n    // Only return true AFTER we know it can be used\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Returns localStorage if it can be used, if not then it returns a shim\r\nexport default function getLocalStorage() {\r\n  // If we've performed all our checks before, just assume results will be the same\r\n  // Key assumption: writability of localStorage doesn't change while page is loaded\r\n  if (usableLocalStorage) return usableLocalStorage;\r\n\r\n  // Sets usableLocalStorage on the first execution\r\n  if (canUseBrowserLocalStorage()) {\r\n    usableLocalStorage = window.localStorage;\r\n  } else {\r\n    usableLocalStorage = createLocalStorageShim();\r\n  }\r\n\r\n  return usableLocalStorage;\r\n}\r\n","import { createStore, applyMiddleware, compose, PreloadedState } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport thunk from 'redux-thunk';\r\nimport { setAutoFreeze } from 'immer';\r\n\r\nimport rootReducer from 'reducers';\r\nimport requestsMiddleware from 'middlewares/requests-middleware';\r\nimport ravenMiddleware from 'middlewares/raven-middleware';\r\nimport getLocalStorage from 'storage/localStorage';\r\n\r\nimport type { GetState } from 'types/redux';\r\nimport type { State } from 'types/state';\r\nimport type { Actions } from 'types/actions';\r\n\r\n// For redux-devtools-extensions - see\r\n// https://github.com/zalmoxisus/redux-devtools-extension\r\nconst composeEnhancers: typeof compose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// immer uses Object.freeze on returned state objects, which is incompatible with\r\n// redux-persist. See https://github.com/rt2zz/redux-persist/issues/747\r\nsetAutoFreeze(false);\r\n\r\nexport default function configureStore(defaultState?: State) {\r\n  // Clear legacy reduxState deprecated by https://github.com/nusmodifications/nusmods/pull/669\r\n  // to reduce the amount of data NUSMods is using\r\n  getLocalStorage().removeItem('reduxState');\r\n\r\n  const middlewares = [ravenMiddleware, thunk, requestsMiddleware];\r\n\r\n  if (NUSMODS_ENV === 'development') {\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires, global-require, import/no-extraneous-dependencies\r\n    const { createLogger } = require('redux-logger');\r\n    const logger = createLogger({\r\n      level: 'info',\r\n      collapsed: true,\r\n      duration: true,\r\n      diff: true,\r\n      // Avoid diffing actions that insert a lot of stuff into the state to prevent console from lagging\r\n      diffPredicate: (_getState: GetState, action: Actions) =>\r\n        !action.type.startsWith('FETCH_MODULE_LIST') && !action.type.startsWith('persist/'),\r\n    });\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  const storeEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    // Redux typings does not seem to allow non-JSON serialized values in PreloadedState so this needs to be casted\r\n    defaultState as PreloadedState<State> | undefined,\r\n    composeEnhancers(storeEnhancer),\r\n  );\r\n\r\n  if (module.hot) {\r\n    // Enable webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers', () => store.replaceReducer(rootReducer));\r\n  }\r\n\r\n  const persistor = persistStore(store);\r\n  return { persistor, store };\r\n}\r\n","import NUSModerator, { AcadWeekInfo } from 'nusmoderator';\r\nimport { noBreak } from 'utils/react';\r\n\r\nexport const getWeekText = (acadWeekInfo: AcadWeekInfo) => {\r\n  const parts: string[] = [`AY20${acadWeekInfo.year}`];\r\n\r\n  // Check for null value (ie. during vacation)\r\n  if (acadWeekInfo.sem) {\r\n    parts.push(noBreak(acadWeekInfo.sem));\r\n  }\r\n\r\n  // Do not show the week number if there is only one week, e.g. recess\r\n  // Hide week if week type is 'Instructional'\r\n  const type = acadWeekInfo.type === 'Instructional' ? '' : `${acadWeekInfo.type} `;\r\n  const weekNumber = acadWeekInfo.num || '';\r\n  parts.push(noBreak(`${type}Week ${weekNumber}`));\r\n\r\n  return parts.join(', ').trim();\r\n};\r\n\r\n// Text computed in an IIFE because this only needs to be computed on page load.\r\nconst weekText = (() => {\r\n  const acadWeekInfo = NUSModerator.academicCalendar.getAcadWeekInfo(new Date());\r\n  return getWeekText(acadWeekInfo);\r\n})();\r\n\r\nexport default weekText;\r\n","import { each, kebabCase } from 'lodash';\r\nimport { ModuleTitle, Semester, ModuleCode } from 'types/modules';\r\nimport { Venue } from 'types/venues';\r\nimport { SemTimetableConfig } from 'types/timetables';\r\nimport { serializeTimetable } from 'utils/timetables';\r\nimport config from 'config';\r\n\r\n// IMPORTANT: Remember to update any route changes on the sitemap\r\n\r\n// Cache semester -> path and path -> semester mappings\r\nexport const fromSemester: { [semester: string]: string } = {};\r\nconst toSemester: { [key: string]: Semester } = {};\r\neach(config.shortSemesterNames, (name, semester) => {\r\n  const path = kebabCase(name);\r\n  fromSemester[semester] = path;\r\n  toSemester[path] = Number(semester);\r\n});\r\n\r\n// Semester -> Timetable path\r\nexport function timetablePage(semester: Semester): string {\r\n  return `/timetable/${fromSemester[semester]}`;\r\n}\r\n\r\nexport const TIMETABLE_SHARE = 'share';\r\nexport function timetableShare(\r\n  semester: Semester,\r\n  timetable: SemTimetableConfig,\r\n  hiddenModules: ModuleCode[],\r\n): string {\r\n  // Convert the list of hidden modules to a comma-separated string, if there are any\r\n  const serializedHidden = hiddenModules.length === 0 ? '' : `&hidden=${hiddenModules.join(',')}`;\r\n\r\n  return (\r\n    `${timetablePage(semester)}/${TIMETABLE_SHARE}` +\r\n    `?${serializeTimetable(timetable)}` +\r\n    `${serializedHidden}`\r\n  );\r\n}\r\n\r\n// Timetable path -> Semester\r\nexport function semesterForTimetablePage(semStr: string | null | undefined): Semester | null {\r\n  if (!semStr) return null;\r\n  return toSemester[semStr] || null;\r\n}\r\n\r\n// Module Code, Module Title -> Module page path\r\nexport function modulePage(moduleCode: ModuleCode, moduleTitle?: ModuleTitle | null): string {\r\n  return `/courses/${moduleCode}/${kebabCase(moduleTitle || '')}`;\r\n}\r\n\r\nexport function moduleArchive(\r\n  moduleCode: ModuleCode,\r\n  year: string,\r\n  moduleTitle: ModuleTitle = '',\r\n): string {\r\n  return `/archive/${moduleCode}/${year.replace('/', '-')}/${kebabCase(moduleTitle)}`;\r\n}\r\n\r\n// Venue -> Venue page path\r\nexport function venuePage(venue?: Venue | null | undefined): string {\r\n  if (!venue) return '/venues';\r\n  return `/venues/${encodeURIComponent(venue)}`;\r\n}\r\n\r\n// Creates an absolute URL from a relative path\r\nexport function absolutePath(path: string): string {\r\n  return `${window.location.protocol}//${window.location.host}${path}`;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"gURvGsUi\",\"link\":\"knj4FDiz\",\"linkActive\":\"rkkVa1Hf\",\"title\":\"ZqApi785\",\"hiddenOnMobile\":\"bhUAuhkK\",\"divider\":\"eAbACa8v bhUAuhkK\",\"updateDot\":\"_xP5hL7Z\"};","import type { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport {\r\n  BookOpen,\r\n  Calendar,\r\n  Clock,\r\n  Heart,\r\n  Map,\r\n  Settings,\r\n  Star,\r\n  Target,\r\n  Trello,\r\n} from 'react-feather';\r\n\r\nimport { showCPExTab } from 'featureFlags';\r\nimport ExternalLink from 'views/components/ExternalLink';\r\nimport { timetablePage } from 'views/routes/paths';\r\nimport type { State } from 'types/state';\r\n\r\nimport styles from './Navtabs.scss';\r\n\r\nexport const NAVTAB_HEIGHT = 48;\r\n\r\nconst Navtabs: FC = () => {\r\n  const activeSemester = useSelector(({ app }: State) => app.activeSemester);\r\n  const beta = useSelector(({ settings }: State) => settings.beta);\r\n\r\n  const tabProps = {\r\n    className: styles.link,\r\n    activeClassName: styles.linkActive,\r\n  };\r\n\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink {...tabProps} to={timetablePage(activeSemester)}>\r\n        <Calendar />\r\n        <span className={styles.title}>Timetable</span>\r\n      </NavLink>\r\n      {showCPExTab && (\r\n        <NavLink {...tabProps} to=\"/cpex\">\r\n          <Target />\r\n          <span className={styles.title}>CPEx</span>\r\n        </NavLink>\r\n      )}\r\n      {beta && (\r\n        <NavLink\r\n          {...tabProps}\r\n          className={classnames(tabProps.className, styles.hiddenOnMobile)}\r\n          to=\"/planner\"\r\n        >\r\n          <Trello />\r\n          <span className={styles.title}>Planner</span>\r\n        </NavLink>\r\n      )}\r\n      <div className={styles.divider} />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navtabs;\r\n","/* eslint-disable import/prefer-default-export */\r\n\r\n/**\r\n * See:\r\n * - https://github.com/nusmodifications/nusmods/issues/2057\r\n * - https://github.com/nusmodifications/nusmods/pull/3212\r\n */\r\nexport const enableShortUrl = false;\r\n\r\n/** Enable Course Planning Exercise */\r\nexport const enableCPEx = false;\r\n\r\nexport const showCPExTab = false;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nimport { NotificationData } from 'types/reducers';\r\nimport { popNotification } from 'actions/app';\r\nimport { State as StoreState } from 'types/state';\r\nimport styles from './Notification.scss';\r\n\r\ntype Props = {\r\n  notifications: NotificationData[];\r\n  popNotification: () => void;\r\n};\r\n\r\ntype State = {\r\n  isOpen: boolean;\r\n  shownNotification: NotificationData | undefined;\r\n  actionClicked: boolean;\r\n};\r\n\r\nconst ACTIVE_CLASSNAME = 'mdc-snackbar--active';\r\nconst DEFAULT_TIMEOUT = 2750;\r\nconst TRANSITION_DURATION = 250;\r\n\r\n/**\r\n * Notification has a relatively complicated state system since its State is deliberately\r\n * out of step with the Redux store to ensure the transitions work properly. It is\r\n * implemented as a state machine with four states -\r\n *\r\n * - Closed\r\n *  - Wait for new notification to go to Opening\r\n * - Opening\r\n *  - Set isOpen to true to trigger transition\r\n *  - Go to Closing if new notification arrives\r\n * - Opened\r\n *  - Start timer at the end of which go to Closing\r\n *  - Go to Closing if new notification arrives\r\n *  - Go to Closing if action is pressed\r\n * - Closing\r\n *  - Set isOpen to false to trigger transition\r\n *\r\n * shownNotification is used to ensure the text and content of the snackbar do not\r\n * change when the active notification changes\r\n *\r\n * Notice we do not transition immediately from Opening or Opened to Closed\r\n * because we want the animation to play out to draw the user's attention to\r\n * the new notification.\r\n */\r\nexport class NotificationComponent extends React.Component<Props, State> {\r\n  openTimeoutId?: number;\r\n\r\n  closeTimeoutId?: number;\r\n\r\n  element = React.createRef<HTMLDivElement>();\r\n\r\n  transitioning = false;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shownNotification: props.notifications[0],\r\n      isOpen: !!props.notifications.length,\r\n      actionClicked: false,\r\n    };\r\n  }\r\n\r\n  override shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n    return (\r\n      nextProps.notifications[0] !== this.state.shownNotification ||\r\n      nextState.isOpen !== this.state.isOpen\r\n    );\r\n  }\r\n\r\n  override componentDidUpdate() {\r\n    const { notifications } = this.props;\r\n    const { shownNotification, isOpen, actionClicked } = this.state;\r\n\r\n    if (notifications[0] !== shownNotification) {\r\n      // Active notification has changed\r\n      if (isOpen) {\r\n        const discarded = !shownNotification || !notifications.includes(shownNotification);\r\n        if (shownNotification && shownNotification.willClose) {\r\n          shownNotification.willClose(discarded, actionClicked);\r\n        }\r\n        this.closeSnackbar();\r\n      } else if (!this.transitioning) {\r\n        this.openSnackbar();\r\n      }\r\n    }\r\n  }\r\n\r\n  onTransitionEnd = (evt: React.TransitionEvent<HTMLDivElement>) => {\r\n    if (evt.target !== this.element.current) return;\r\n\r\n    // the event ran, so the failsafe can be cancelled\r\n    clearTimeout(this.closeTimeoutId);\r\n\r\n    this.transitioning = false;\r\n\r\n    if (this.state.isOpen && this.state.shownNotification) {\r\n      // This is at the end of the opening transition, so we set a timer and\r\n      // close the notification when the timer is up\r\n      const timeout = this.state.shownNotification.timeout || DEFAULT_TIMEOUT;\r\n      clearTimeout(this.openTimeoutId); // Defensive\r\n      this.openTimeoutId = window.setTimeout(() => this.props.popNotification(), timeout);\r\n    } else if (this.props.notifications.length) {\r\n      // End of closing transition - if there are more notifications, let's show them\r\n      this.openSnackbar();\r\n    }\r\n  };\r\n\r\n  openSnackbar = () => {\r\n    this.transitioning = true;\r\n    this.setState({\r\n      isOpen: true,\r\n      shownNotification: this.props.notifications[0],\r\n      actionClicked: false,\r\n    });\r\n  };\r\n\r\n  clearTransition = () => {\r\n    this.transitioning = false;\r\n  };\r\n\r\n  closeSnackbar = () => {\r\n    this.transitioning = true;\r\n    this.setState({ isOpen: false });\r\n    // onTransitionEnd can be cancelled, causing transitioning to never\r\n    // turn false and notifications to stop showing up, so we set a timer\r\n    // and turn transitioning false when the timer is up\r\n    clearTimeout(this.closeTimeoutId); // Defensive\r\n    this.closeTimeoutId = window.setTimeout(() => this.clearTransition(), TRANSITION_DURATION);\r\n  };\r\n\r\n  renderNotificationContent() {\r\n    const { shownNotification } = this.state;\r\n    if (!shownNotification) return null;\r\n\r\n    const { message, action } = shownNotification;\r\n    return (\r\n      <>\r\n        <div className=\"mdc-snackbar__text\">{message}</div>\r\n        {action && (\r\n          <div className=\"mdc-snackbar__action-wrapper\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"mdc-snackbar__action-button\"\r\n              onClick={() => {\r\n                this.setState({ actionClicked: true });\r\n                const { handler } = action;\r\n                // Don't auto-close if handler returns false\r\n                if (handler && handler() === false) return;\r\n                this.props.popNotification();\r\n              }}\r\n            >\r\n              {action.text}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  override render() {\r\n    const { shownNotification, isOpen } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={classnames('mdc-snackbar', styles.snackbar, {\r\n          [ACTIVE_CLASSNAME]: isOpen,\r\n        })}\r\n        aria-live=\"assertive\"\r\n        aria-atomic=\"true\"\r\n        aria-hidden={!!shownNotification}\r\n        onTransitionEnd={this.onTransitionEnd}\r\n        ref={this.element}\r\n      >\r\n        {this.renderNotificationContent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state: StoreState) => ({\r\n    notifications: state.app.notifications,\r\n  }),\r\n  { popNotification },\r\n)(NotificationComponent);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"snackbar\":\"Y_6WG865\"};","import * as React from 'react';\r\nimport { captureException } from 'utils/error';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  captureError: boolean;\r\n  errorPage: (error: Error) => React.ReactNode;\r\n};\r\n\r\ntype State = {\r\n  error: Error | null;\r\n};\r\n\r\nexport default class ErrorBoundary extends React.Component<Props, State> {\r\n  static defaultProps = {\r\n    captureError: true,\r\n    errorPage: () => null,\r\n  };\r\n\r\n  override state: State = {\r\n    error: null,\r\n  };\r\n\r\n  override componentDidCatch(error: Error, info: React.ErrorInfo) {\r\n    this.setState({ error });\r\n\r\n    if (this.props.captureError) {\r\n      captureException(error, { info });\r\n    }\r\n  }\r\n\r\n  override render() {\r\n    const { error } = this.state;\r\n\r\n    if (error) {\r\n      return this.props.errorPage(error);\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { FC, HTMLAttributes, memo, useState } from 'react';\r\nimport { sample } from 'lodash';\r\nimport { SpeechBubble, Mug, Browser, Ghost, KawaiiMood, KawaiiProps } from 'react-kawaii';\r\n\r\ntype Props = HTMLAttributes<HTMLDivElement> & KawaiiProps;\r\n\r\nconst icons = [SpeechBubble, Mug, Browser, Ghost];\r\nconst defaultMoods: KawaiiMood[] = ['ko', 'sad', 'shocked'];\r\n\r\nconst RandomKawaii: FC<Props> = ({ size, color = '#FF715D', mood, ...wrapperProps }) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n  const [Kawaii] = useState(() => sample(icons)!);\r\n  const [defaultMood] = useState(() => sample(defaultMoods));\r\n\r\n  return (\r\n    <div {...wrapperProps}>\r\n      <Kawaii size={size} color={color} mood={mood || defaultMood} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(RandomKawaii);\r\n","import * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport config from 'config';\r\n\r\ntype Props = {\r\n  children: string;\r\n  description?: string;\r\n};\r\n\r\nconst Title: React.FC<Props> = ({\r\n  children,\r\n  description = 'NUSMods is a timetable builder and knowledge platform, providing students with a better way to plan their school timetable and useful course-related information that are community-driven.',\r\n}) => (\r\n  // We use defer=false to allow Google Analytics autotrack to send the correct\r\n  // page title. See bootstrapping/google-analytics.js\r\n  <Helmet titleTemplate={`%s - ${config.brandName}`} defer={false}>\r\n    <title>{children}</title>\r\n    <meta property=\"description\" content={description} />\r\n    <meta property=\"og:title\" content={children} />\r\n    <meta property=\"og:description\" content={description} />\r\n  </Helmet>\r\n);\r\nexport default Title;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { State } from 'types/state';\r\n\r\ntype Props = {\r\n  children: React.ReactNode | ((isOnline: boolean) => React.ReactNode);\r\n\r\n  isOnline: boolean;\r\n  isLive: boolean;\r\n};\r\n\r\nexport class OnlineComponent extends React.Component<Props> {\r\n  static defaultProps = {\r\n    isLive: true,\r\n  };\r\n\r\n  override shouldComponentUpdate(nextProps: Props) {\r\n    // Do not rerender if the component is not live and the only thing\r\n    // that has changed is the online status\r\n    return nextProps.isLive || nextProps.children !== this.props.children;\r\n  }\r\n\r\n  override render() {\r\n    const { children, isOnline } = this.props;\r\n\r\n    if (typeof children === 'function') {\r\n      // Not technically safe, since some ReactNodes are also functions, but this is safe enough\r\n      return (children as (online: boolean) => React.ReactNode)(isOnline);\r\n    }\r\n    if (isOnline) return children;\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect((state: State) => ({\r\n  isOnline: state.app.isOnline,\r\n}))(OnlineComponent);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"VsVwOnEy page-container text-center\",\"header\":\"cd5EALYm\",\"expr\":\"X3ztNmpI text-primary\",\"link\":\"Awoo18LS\",\"heading\":\"UHaEUjDa\",\"buttons\":\"Fc1_QJvw\",\"bigCharacter\":\"BmIRZxAf\"};","import * as React from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\nimport classnames from 'classnames';\r\n\r\nimport RandomKawaii from 'views/components/RandomKawaii';\r\nimport Title from 'views/components/Title';\r\nimport Online from 'views/components/Online';\r\nimport styles from './ErrorPage.scss';\r\n\r\ntype Props = {\r\n  error?: string;\r\n  showReportDialog?: boolean;\r\n  showRefresh?: boolean;\r\n};\r\n\r\nconst ErrorPage: React.FC<Props> = ({ error, showReportDialog, showRefresh = true }) => {\r\n  const errorMessage = () => {\r\n    let message = 'something went wrong';\r\n    if (error) message = `${message} - ${error}`;\r\n    return message;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Title>Uh oh...</Title>\r\n\r\n      <div className={styles.header}>\r\n        <RandomKawaii size={100} />\r\n      </div>\r\n\r\n      <h1 className={classnames('h3', styles.header)}>\r\n        <span className={styles.expr}>Uh oh</span> {errorMessage()}\r\n      </h1>\r\n\r\n      {showReportDialog && (\r\n        <Online isLive={false}>\r\n          <p>\r\n            An error report has been made and we will look into this. We would really appreciate it\r\n            if you could{' '}\r\n            <button\r\n              type=\"button\"\r\n              className={classnames('btn btn-link', styles.link)}\r\n              onClick={() => Sentry.showReportDialog()}\r\n            >\r\n              tell us more about what happened\r\n            </button>{' '}\r\n            so we can better fix this.\r\n          </p>\r\n        </Online>\r\n      )}\r\n\r\n      {showRefresh && (\r\n        <Online>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => window.location.reload()}\r\n          >\r\n            Refresh\r\n          </button>\r\n        </Online>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ErrorPage);\r\n","import type { QueryObject } from 'json2mq';\r\n\r\n// NOTE: Keep in sync with Bootstrap's breakpoints.\r\n// Breakpoints at time of writing: https://getbootstrap.com/docs/4.5/layout/overview/\r\nconst breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n} as const;\r\ntype Breakpoint = keyof typeof breakpoints;\r\n\r\nfunction nextBreakpoint(size: Breakpoint): number | undefined {\r\n  const breakpointEntries = Object.entries(breakpoints);\r\n  const nextBreakpointIndex =\r\n    breakpointEntries.findIndex(([breakpoint]) => breakpoint === size) + 1;\r\n  return breakpointEntries[nextBreakpointIndex][1];\r\n}\r\n\r\nexport function breakpointDown(size: Breakpoint): QueryObject {\r\n  const nextSize = nextBreakpoint(size);\r\n  if (nextSize === undefined) return { all: true };\r\n  return { maxWidth: nextSize - 1 };\r\n}\r\n\r\nexport function breakpointUp(size: Breakpoint) {\r\n  return { minWidth: breakpoints[size] } satisfies QueryObject;\r\n}\r\n\r\nexport function touchScreenOnly() {\r\n  return { pointer: 'coarse' } satisfies QueryObject;\r\n}\r\n\r\nexport function supportsCSSVariables() {\r\n  // Safari does not support supports('--var', 'red')\r\n  return CSS.supports && CSS.supports('(--var: red)');\r\n}\r\n","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nconst SvgNusmodsLogo = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 600 90\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff5138\",\n    d: \"M561 36h2v1h4v1h3l1 1h2l1 1h1l1 1h1l1 1h1l1 1h1v1h1l1 1 1 1 1 1 1 1v1h1v1l1 1v1h1v3h1v6-1 5h-1v3l-1 1v2h-1v1h-1v1l-1 1v1h-1v1h-1v1h-1v1h-2v1h-1l-1 1h-1v1h-2l-1 1h-3l-1 1h-17l-1-1h-3v-1h-3l-1-1h-2v-1h-2v-1h-2l-1-1h-1v-1h-1l-1-1h-1l-1-1h-1v-1h-1v-1l-1-1v-6h1v-1l1-1 1-1h1v-1h5v1h2l1 1 1 1h1l1 1h1l1 1h1l1 1h2l1 1h3l1 1h13v-1h2v-1h2v-1h1v-2h1v-2h1v-2h-1v-2h-1v-1l-1-1-1-1h-1v-1h-2v-1h-2v-1h-2l-1-1h-3l-1-1h-3v-1h-4v-1h-3l-1-1h-2v-1h-2v-1h-2v-1h-2v-1h-1v-1h-1v-1h-1l-1-1v-1h-1v-1l-1-1-1-1v-2h-1v-3l-1-1v-6l1-1v-4l1-1v-2h1v-1l1-1v-1h1v-1l1-1 1-1h1V9h1V8h1l1-1h1l1-1h1l1-1h3l1-1h12-1 4l1 1h3l1 1h2l1 1h2v1h2l1 1h2v1h2v1h1v1h1v1l1 1v5l-1 1v1h-1v1h-1v1h-2v1h-4v-1h-2v-1h-2v-1h-2l-1-1h-2v-1h-4v-1h-11v1h-3v1h-1v1h-1v1h-1v8h1v1h1v1h1v1h2v1h3v1h4v1h2zm15 25zM483 6h3l1 1h3l1 1h2l1 1h1l2 1 1 1h1l1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1v1l1 1 1 2v1l1 1v2l1 1v2l1 1v4l1 2v8l-1 1v5l-1 1v2l-1 1v1l-1 2v1l-1 1-1 2v1l-1 1-1 1-1 1-1 1-1 1-1 1-1 1-1 1-1 1-1 1h-1l-1 1-1 1h-2l-1 1-1 1h-3l-1 1h-3l-2 1h-35v-1h-2v-1h-1v-1l-1-1V9h1V8h1V7h1l1-1h34zm-3 14h-21v48h23l1-1h3l1-1h2l1-1 1-1h1l1-1h1v-1l1-1 1-1 1-1 1-1v-1l1-1v-1l1-1v-2l1-1V37l-1-1v-2l-1-1v-1l-1-1v-1l-1-1v-1l-1-1h-1l-1-1v-1h-1l-1-1-1-1h-1l-1-1h-1l-1-1h-3l-1-1h-3zm-226-8h1V9h1V8h1V7h1V6h7v1h1l1 1v1h1l24 32 25-32 1-1V7h1l1-1h2V5h3v1h2v1h2v1l1 1v2h1v65h-1v2l-1 1v1h-1v1h-3v1h-3l-1-1h-2v-1h-1v-1l-1-1v-2h-1V34l-1 1-1 2v1l-1 1-1 1-1 1-1 1v1l-1 1-1 1-1 1-1 1-1 1v1h-1v1l-1 1-1 1v1h-1v1l-1 1-1 1v1h-1v1h-1v1h-1v1h-2v1h-4v-1h-2v-1h-1v-1h-1v-1l-17-22v42h-1v2h-1v1h-1v1h-2v1h-5v-1h-2v-1h-1v-1l-1-1v-2l-1-1V12zm39 49h-3v-1 1h4v-1 1h-1zM63 55V13a7 7 0 0 1 14 0v65l-2 2-4 2-4-1-2-1-41-48v43a7 7 0 0 1-14 0V13l1-3 2-3 3-1h1a7 7 0 0 1 3 0l3 3 40 46zm84-3V12c0-4 3-7 7-7s7 3 7 7v41c0 16-15 29-33 29S95 69 95 53V12c0-4 3-7 7-7s7 3 7 7v40c0 9 9 16 19 16 5 0 10-2 14-5 3-3 5-7 5-11 0 4 0 4 0 0zm62-16h2v1h4l1 1h2l1 1h2l1 1h1l1 1h1l1 1h1l1 1h1l1 1 1 1 1 1h1v1l1 1v1h1v1h1v2h1v3h1v6-1 5l-1 1v3h-1v2h-1v1h-1v1l-1 1v1h-1v1h-1v1h-1v1h-1l-1 1h-1v1h-2v1h-2l-1 1h-3l-1 1h-17l-1-1h-3v-1h-3l-1-1h-2v-1h-2v-1h-2l-1-1h-1v-1h-1l-1-1h-1v-1h-2v-1h-1v-2h-1v-6h1v-1h1v-1h1v-1h1l1-1h4v1h2l1 1h1v1h1l1 1h1l1 1h1l1 1h2l1 1h3l1 1h13v-1h2v-1h2v-1h1v-1l1-1v-2h1v-2h-1v-2l-1-1v-1h-1v-1h-2v-1h-1l-1-1h-1l-1-1h-2l-1-1h-3l-1-1h-3v-1h-4v-1h-3l-1-1h-2v-1h-2v-1h-2v-1h-2v-1h-1v-1h-1v-1h-1l-1-1v-1h-1v-1l-1-1-1-1v-2h-1v-4h-1v-6h1v-5h1v-2l1-1v-1l1-1v-1h1v-1l1-1 1-1h1V9h1V8h1l1-1h1l1-1h2V5h4V4h12-1 4l1 1h3l1 1h2l1 1h2v1h2l1 1h2v1h2v1h1v1h1v1l1 1v6h-1v1h-1v1h-1v1h-2v1h-4v-1h-2v-1h-2v-1h-2l-1-1h-2v-1h-4v-1h-11v1h-3v1h-1v1h-1v1h-1v8h1v1l1 1h1v1h2v1h3v1h3l1 1h2zm15 25zM388 1h2v1h2l1 1 29 17h2v1h1v1l1 1v1l1 1v40l-1 1v1l-1 1v1h-1v1h-2v1l-29 16-1 1h-2v1h-5v-1h-2v-1l-30-16v-1h-1l-1-1-1-1v-1h-1v-2h-1V25h1v-2h1v-1l1-1 1-1h1l30-17V2h2V1h3zm-2 17h-3v1l-16 8v1h-1v1h-1v1h-1v1h-1v3h-1v21h1v3h1v2h1v1h1l1 1 16 9h1v1h7v-1h2l15-9h1v-1h1v-1h1v-1l1-1v-2h1V34l-1-1v-2h-1v-1l-1-1h-1v-1h-1v-1l-15-8h-1v-1h-6z\"\n  })));\n};\nexport default SvgNusmodsLogo;","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport RandomKawaii from 'views/components/RandomKawaii';\r\nimport Title from 'views/components/Title';\r\nimport { breakpointUp } from 'utils/css';\r\n\r\nimport styles from './ErrorPage.scss';\r\n\r\ntype Props = {\r\n  retry?: () => void;\r\n  dataName?: string;\r\n};\r\n\r\nexport default class ApiError extends React.PureComponent<Props> {\r\n  override componentDidMount() {\r\n    if (!navigator.onLine) {\r\n      window.addEventListener('online', this.onlineListener);\r\n    }\r\n  }\r\n\r\n  override componentWillUnmount() {\r\n    window.removeEventListener('online', this.onlineListener);\r\n  }\r\n\r\n  onlineListener = () => {\r\n    if (this.props.retry && navigator.onLine) {\r\n      this.props.retry();\r\n    }\r\n  };\r\n\r\n  override render() {\r\n    const { retry, dataName } = this.props;\r\n    const message = dataName ? `We can't load the ${dataName}` : \"We can't connect to NUSMods\";\r\n\r\n    return (\r\n      <div>\r\n        <Title>Oh no...</Title>\r\n\r\n        <div className={styles.container}>\r\n          <div className={styles.header}>\r\n            <RandomKawaii size={100} />\r\n          </div>\r\n\r\n          <h1 className={classnames('h3', styles.header)}>\r\n            <span className={styles.expr}>Oh no...</span> {message}\r\n          </h1>\r\n\r\n          <p>This could be because your device is offline or NUSMods is down :(</p>\r\n          {/* TODO: Remove hacky message after we figure out what is wrong with Elastic Search. */}\r\n          {dataName === 'course information' && (\r\n            <>\r\n              <strong>Course search might be having issues at the moment. 😟</strong>\r\n              <p>\r\n                If it isn't working, please try the module search{' '}\r\n                {window.innerWidth < breakpointUp('md').minWidth && 'on a desktop browser '}on the\r\n                top right corner of the page instead.\r\n              </p>\r\n            </>\r\n          )}\r\n\r\n          {retry && (\r\n            <div>\r\n              <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={retry}>\r\n                Click to try again\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './LoadingSpinner.scss';\r\n\r\ntype Props = {\r\n  small?: boolean;\r\n  white?: boolean;\r\n  className?: string;\r\n};\r\n\r\nconst LoadingSpinner: React.FC<Props> = ({ small, white, className }) => (\r\n  <div\r\n    className={classnames(styles.loader, className, {\r\n      [styles.small]: small,\r\n      [styles.white]: white,\r\n    })}\r\n  >\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </div>\r\n);\r\n\r\nexport default LoadingSpinner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"VCmzq2sv\",\"small\":\"hjAvZ5AX\",\"white\":\"iDzlK7A6\"};","import { AnchorHTMLAttributes, forwardRef, ReactNode } from 'react';\r\n\r\ntype Props = AnchorHTMLAttributes<HTMLAnchorElement> & {\r\n  href: string;\r\n  children: ReactNode;\r\n};\r\n\r\n// Renders an anchor tag that safely opens href in a new tab or window.\r\n// See https://mathiasbynens.github.io/rel-noopener/\r\nconst ExternalLink = forwardRef<HTMLAnchorElement, Props>(({ children, ...otherProps }, ref) => (\r\n  <a target=\"_blank\" rel=\"noopener noreferrer\" ref={ref} {...otherProps}>\r\n    {children}\r\n  </a>\r\n));\r\n\r\nexport default ExternalLink;\r\n","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport { X as Close } from 'react-feather';\r\n\r\nimport styles from './CloseButton.scss';\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n  className?: string;\r\n  absolutePositioned?: boolean; // For use in modals where we don't want the CloseButton to affect the layout of other elements.\r\n};\r\n\r\nconst RawCloseButton: React.FC<Props> = ({ onClick, className }) => (\r\n  <button\r\n    className={classnames('close', className)}\r\n    type=\"button\"\r\n    onClick={onClick}\r\n    aria-label=\"Close\"\r\n  >\r\n    <Close />\r\n  </button>\r\n);\r\n\r\nconst CloseButton: React.FC<Props> = (props) => {\r\n  if (!props.absolutePositioned) return <RawCloseButton {...props} />;\r\n  return (\r\n    <div className={styles.closeContainer}>\r\n      <RawCloseButton {...props} className={classnames(props.className, styles.absCloseBtn)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CloseButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"closeContainer\":\"qJSB63e2\",\"absCloseBtn\":\"vOFcsaQO\"};","// extracted by mini-css-extract-plugin\nexport default {\"animated\":\"iodvUpc5\",\"modal\":\"GrqeEsiM scrollable-y\",\"fullscreen\":\"cNrmPq54\",\"overlay\":\"tlq7EWbq\"};","import { FC, useCallback, useLayoutEffect, useState } from 'react';\r\nimport ReactModal, { Props as ModalProps } from 'react-modal';\r\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\nimport classnames from 'classnames';\r\n\r\nimport styles from './Modal.scss';\r\n\r\ntype Props = ModalProps & {\r\n  isOpen: boolean;\r\n  overlayClassName?: string;\r\n  className?: string;\r\n  fullscreen?: boolean;\r\n  animate?: boolean;\r\n};\r\n\r\nconst Modal: FC<Props> = ({\r\n  isOpen,\r\n  overlayClassName,\r\n  className,\r\n  fullscreen = false,\r\n  animate,\r\n  children,\r\n  ...otherModalProps\r\n}) => {\r\n  // Because ReactModal's contentRef is only provided after all effects have\r\n  // executed, in order for `Modal` to react to the setting/unsetting of\r\n  // `contentRef`, `contentRef` needs to be stored in component state, even if\r\n  // this causes additional renders.\r\n  const [modalContent, setModalContent] = useState<HTMLDivElement | undefined>();\r\n  const contentRefCallback = useCallback((node) => setModalContent(node), []);\r\n\r\n  // Disable body scrolling if modal is open, but allow modal to scroll.\r\n  useLayoutEffect(() => {\r\n    if (!modalContent) {\r\n      return undefined;\r\n    }\r\n    if (isOpen) {\r\n      disableBodyScroll(modalContent);\r\n      return () => enableBodyScroll(modalContent);\r\n    }\r\n    enableBodyScroll(modalContent);\r\n    return undefined;\r\n  }, [isOpen, modalContent]);\r\n\r\n  return (\r\n    <ReactModal\r\n      overlayClassName={classnames(styles.overlay, overlayClassName)}\r\n      className={classnames(styles.modal, className, {\r\n        [styles.fullscreen]: fullscreen,\r\n        [styles.animated]: animate,\r\n      })}\r\n      closeTimeoutMS={animate ? 150 : 0}\r\n      isOpen={isOpen}\r\n      contentRef={contentRefCallback}\r\n      {...otherModalProps}\r\n    >\r\n      {children}\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"xGn0BqDO\",\"topIcon\":\"ZGcnLkvW\",\"links\":\"TyekiMIw\",\"messenger\":\"C06MPu_x\",\"github\":\"Jfsk3IR_\",\"email\":\"MoxDCYJ0\"};","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Heart, GitHub, Facebook, Mail } from 'react-feather';\r\n\r\nimport config from 'config';\r\nimport { toggleFeedback } from 'actions/app';\r\nimport { State } from 'types/state';\r\nimport ExternalLink from './ExternalLink';\r\nimport CloseButton from './CloseButton';\r\nimport Modal from './Modal';\r\nimport styles from './FeedbackModal.scss';\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n  toggleFeedback: () => void;\r\n};\r\n\r\nexport const FeedbackButtons: React.FC = () => (\r\n  <div>\r\n    <div className={styles.links}>\r\n      <ExternalLink className={styles.messenger} href={config.contact.messenger}>\r\n        <Facebook />\r\n        Messenger\r\n      </ExternalLink>\r\n      <ExternalLink className={styles.github} href={config.contact.githubRepo}>\r\n        <GitHub />\r\n        GitHub\r\n      </ExternalLink>\r\n      <ExternalLink className={styles.email} href={`mailto:${config.contact.email}`}>\r\n        <Mail />\r\n        Email\r\n      </ExternalLink>\r\n    </div>\r\n    <p className=\"text-muted\">\r\n      To email us privately, such as for security issues, please use{' '}\r\n      <ExternalLink href={`mailto:${config.contact.privateEmail}`}>\r\n        {config.contact.privateEmail}\r\n      </ExternalLink>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport const FeedbackModalComponent: React.FC<Props> = (props) => (\r\n  <Modal\r\n    isOpen={props.isOpen}\r\n    onRequestClose={props.toggleFeedback}\r\n    className={styles.modal}\r\n    animate\r\n  >\r\n    <CloseButton absolutePositioned onClick={props.toggleFeedback} />\r\n    <div className={styles.content}>\r\n      <Heart className={styles.topIcon} />\r\n      <h1>Let us know what you think!</h1>\r\n      <p>\r\n        Thank you for your time! You can talk to us on Messenger, file an issue on GitHub, or send\r\n        us an email.\r\n      </p>\r\n      <FeedbackButtons />\r\n    </div>\r\n  </Modal>\r\n);\r\n\r\nexport default connect(\r\n  (state: State) => ({\r\n    isOpen: state.app.isFeedbackModalOpen,\r\n  }),\r\n  { toggleFeedback },\r\n)(React.memo(FeedbackModalComponent));\r\n","import { ComponentMap as ComponentMapType } from 'types/views';\r\n\r\n// Singleton containing references to HTML elements from various parts of\r\n// the app. This is used by KeyboardShortcuts to focus or activate DOM elements\r\n// when shortcuts are activated.\r\n//\r\n// DO NOT store objects stored here in local variables, otherwise you will get\r\n// memory leaks\r\nconst ComponentMap: ComponentMapType = {\r\n  globalSearchInput: null,\r\n  downloadButton: null,\r\n};\r\n\r\nexport default ComponentMap;\r\n","import { memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useStore } from 'react-redux';\r\nimport Mousetrap from 'mousetrap';\r\nimport { groupBy, map } from 'lodash';\r\n\r\nimport { DARK_MODE } from 'types/settings';\r\nimport themes from 'data/themes.json';\r\nimport { cycleTheme, toggleTimetableOrientation } from 'actions/theme';\r\nimport { openNotification } from 'actions/app';\r\nimport { toggleMode } from 'actions/settings';\r\nimport { intersperse } from 'utils/array';\r\nimport ComponentMap from 'utils/ComponentMap';\r\nimport type { State } from 'types/state';\r\nimport Modal from './Modal';\r\nimport styles from './KeyboardShortcuts.scss';\r\n\r\ntype Section = 'Appearance' | 'Navigation' | 'Timetable';\r\nconst APPEARANCE: Section = 'Appearance';\r\nconst NAVIGATION: Section = 'Navigation';\r\nconst TIMETABLE: Section = 'Timetable';\r\n\r\ntype Shortcut = string | string[];\r\ntype KeyBinding = {\r\n  key: Shortcut;\r\n  section: Section;\r\n  description: string;\r\n};\r\n\r\nconst THEME_NOTIFICATION_TIMEOUT = 1000;\r\n\r\nconst KeyboardShortcuts: React.FC = () => {\r\n  const [helpShown, setHelpShown] = useState(false);\r\n  const closeModal = useCallback(() => setHelpShown(false), []);\r\n\r\n  const store = useStore<State>();\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  // NB: Because this is a ref, updates to `shortcuts` will not trigger a render.\r\n  const shortcuts = useRef<KeyBinding[]>([]);\r\n\r\n  useEffect(() => {\r\n    function bind(\r\n      key: Shortcut,\r\n      section: Section,\r\n      description: string,\r\n      action: (e: Event) => void,\r\n    ) {\r\n      shortcuts.current.push({ key, description, section });\r\n      Mousetrap.bind(key, action);\r\n    }\r\n\r\n    // Navigation\r\n    bind('y', NAVIGATION, 'Go to today', () => {\r\n      history.push('/today');\r\n    });\r\n\r\n    bind('t', NAVIGATION, 'Go to timetable', () => {\r\n      history.push('/timetable');\r\n    });\r\n\r\n    bind('m', NAVIGATION, 'Go to course finder', () => {\r\n      history.push('/courses');\r\n    });\r\n\r\n    bind('v', NAVIGATION, 'Go to venues page', () => {\r\n      history.push('/venues');\r\n    });\r\n\r\n    bind('s', NAVIGATION, 'Go to settings', () => {\r\n      history.push('/settings');\r\n    });\r\n\r\n    bind('/', NAVIGATION, 'Open global search', (e) => {\r\n      if (ComponentMap.globalSearchInput) {\r\n        ComponentMap.globalSearchInput.focus();\r\n\r\n        // Prevents the '/' character from being entered into the global search bar\r\n        e.preventDefault();\r\n      }\r\n    });\r\n\r\n    bind('?', NAVIGATION, 'Show this help', () => setHelpShown(!helpShown));\r\n\r\n    // Timetable shortcuts\r\n    bind('o', TIMETABLE, 'Switch timetable orientation', () => {\r\n      dispatch(toggleTimetableOrientation());\r\n    });\r\n\r\n    bind('d', TIMETABLE, 'Open download timetable menu', () => {\r\n      const button = ComponentMap.downloadButton;\r\n      if (button) {\r\n        button.focus();\r\n        button.click();\r\n      }\r\n    });\r\n\r\n    // Toggle night mode\r\n    bind('x', APPEARANCE, 'Toggle Night Mode', () => {\r\n      dispatch(toggleMode());\r\n\r\n      // We fetch the current mode from the redux store directly, instead of\r\n      // using useSelector, as useSelector will capture the old stale value\r\n      const { mode } = store.getState().settings;\r\n\r\n      dispatch(\r\n        openNotification(`Night mode ${mode === DARK_MODE ? 'on' : 'off'}`, {\r\n          overwritable: true,\r\n        }),\r\n      );\r\n    });\r\n\r\n    // Cycle through themes\r\n    function notifyThemeChange() {\r\n      // We fetch the current theme id from the redux store directly, instead of\r\n      // using useSelector, as useSelector will capture the old stale value\r\n      const themeId = store.getState().theme.id;\r\n      const theme = themes.find((t) => t.id === themeId);\r\n\r\n      if (theme) {\r\n        dispatch(\r\n          openNotification(`Theme switched to ${theme.name}`, {\r\n            timeout: THEME_NOTIFICATION_TIMEOUT,\r\n            overwritable: true,\r\n          }),\r\n        );\r\n      }\r\n    }\r\n\r\n    bind('z', APPEARANCE, 'Previous Theme', () => {\r\n      dispatch(cycleTheme(-1));\r\n      notifyThemeChange();\r\n    });\r\n\r\n    bind('c', APPEARANCE, 'Next Theme', () => {\r\n      dispatch(cycleTheme(1));\r\n      notifyThemeChange();\r\n    });\r\n\r\n    // ???\r\n    Mousetrap.bind('up up down down left right left right b a', () => {\r\n      history.push('/tetris');\r\n    });\r\n\r\n    return () => {\r\n      shortcuts.current.forEach(({ key }) => Mousetrap.unbind(key));\r\n      shortcuts.current = [];\r\n    };\r\n  }, [dispatch, helpShown, history, store]);\r\n\r\n  function renderShortcut(shortcut: Shortcut): React.ReactNode {\r\n    if (typeof shortcut === 'string') {\r\n      const capitalized = shortcut.replace(/\\b([a-z])/, (c) => c.toUpperCase());\r\n      return <kbd key={shortcut}>{capitalized}</kbd>;\r\n    }\r\n    return intersperse(shortcut.map(renderShortcut), ' or ');\r\n  }\r\n\r\n  const sections = groupBy(shortcuts.current, (shortcut) => shortcut.section);\r\n\r\n  return (\r\n    <Modal isOpen={helpShown} onRequestClose={closeModal} className={styles.modal} animate>\r\n      <h2>Keyboard shortcuts</h2>\r\n\r\n      <table className=\"table table-sm\">\r\n        {map(sections, (shortcutsInSection, heading) => (\r\n          <tbody key={heading}>\r\n            <tr>\r\n              <th aria-label=\"Key column\" />\r\n              <th>{heading}</th>\r\n            </tr>\r\n\r\n            {shortcutsInSection.map((shortcut) => (\r\n              <tr key={shortcut.description}>\r\n                <td className={styles.key}>{renderShortcut(shortcut.key)}</td>\r\n                <td>{shortcut.description}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        ))}\r\n      </table>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default memo(KeyboardShortcuts);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"WUh5EWuH\",\"key\":\"Ql2_3M5o\"};","import { FC, useCallback, useEffect, useState } from 'react';\r\n\r\nimport { Helmet } from 'react-helmet';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { each } from 'lodash';\r\nimport { DARK_MODE } from 'types/settings';\r\nimport type { Semester } from 'types/modules';\r\nimport type { SemTimetableConfig } from 'types/timetables';\r\n\r\nimport weekText from 'utils/weekText';\r\nimport { captureException } from 'utils/error';\r\nimport { openNotification } from 'actions/app';\r\nimport { fetchModuleList as fetchModuleListAction } from 'actions/moduleBank';\r\nimport {\r\n  fetchTimetableModules as fetchTimetableModulesAction,\r\n  validateTimetable,\r\n} from 'actions/timetables';\r\nimport Navtabs from 'views/layout/Navtabs';\r\nimport Notification from 'views/components/notfications/Notification';\r\nimport ErrorBoundary from 'views/errors/ErrorBoundary';\r\nimport ErrorPage from 'views/errors/ErrorPage';\r\nimport ApiError from 'views/errors/ApiError';\r\nimport { trackPageView } from 'bootstrapping/matomo';\r\nimport { isIOS } from 'bootstrapping/browser';\r\nimport Logo from 'img/nusmods-logo.svg';\r\nimport type { Dispatch } from 'types/redux';\r\nimport type { State } from 'types/state';\r\nimport type { Actions } from 'types/actions';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport FeedbackModal from './components/FeedbackModal';\r\nimport KeyboardShortcuts from './components/KeyboardShortcuts';\r\n\r\nimport styles from './AppShell.scss';\r\n\r\n/**\r\n * Fetch module list on mount.\r\n */\r\nfunction useFetchModuleListAndTimetableModules(): {\r\n  moduleListError: Error | null;\r\n  refetchModuleListAndTimetableModules: () => void;\r\n} {\r\n  const [moduleListError, setModuleListError] = useState<Error | null>(null);\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n  const store = useStore<State, Actions>();\r\n\r\n  const fetchModuleList = useCallback(\r\n    () =>\r\n      // TODO: This always re-fetch the entire modules list. Consider a better strategy for this\r\n      dispatch(fetchModuleListAction()).catch((error) => {\r\n        captureException(error);\r\n        setModuleListError(error);\r\n      }),\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchTimetableModules = useCallback(\r\n    function fetchTimetableModulesImpl(timetable: SemTimetableConfig, semester: Semester) {\r\n      dispatch(fetchTimetableModulesAction([timetable]))\r\n        .then(() => dispatch(validateTimetable(semester)))\r\n        .catch((error) => {\r\n          captureException(error);\r\n          dispatch(\r\n            openNotification('Data for some courses failed to load', {\r\n              action: {\r\n                text: 'Retry',\r\n                handler: () => fetchTimetableModulesImpl(timetable, semester),\r\n              },\r\n            }),\r\n          );\r\n        });\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchModuleListAndTimetableModules = useCallback(() => {\r\n    // Retrieve module list\r\n    const moduleListPromise = fetchModuleList();\r\n\r\n    // Fetch the module data of the existing modules in the timetable and ensure all\r\n    // lessons are filled\r\n    const timetables = store.getState().timetables.lessons;\r\n    each(timetables, (timetable, semesterString) => {\r\n      const semester = Number(semesterString);\r\n      moduleListPromise.then(() => {\r\n        // Wait for module list to be fetched before trying to fetch timetable modules\r\n        // TODO: There may be a more optimal way to do this\r\n        fetchTimetableModules(timetable, semester);\r\n      });\r\n    });\r\n  }, [fetchModuleList, fetchTimetableModules, store]);\r\n\r\n  useEffect(() => fetchModuleListAndTimetableModules(), [fetchModuleListAndTimetableModules]);\r\n\r\n  return {\r\n    moduleListError,\r\n    refetchModuleListAndTimetableModules: fetchModuleListAndTimetableModules,\r\n  };\r\n}\r\n\r\nconst AppShell: FC = ({ children }) => {\r\n  const { moduleListError, refetchModuleListAndTimetableModules } =\r\n    useFetchModuleListAndTimetableModules();\r\n\r\n  // Enable Matomo analytics\r\n  const history = useHistory();\r\n  useEffect(() => trackPageView(history), [history]);\r\n\r\n  const moduleList = useSelector((state: State) => state.moduleBank.moduleList);\r\n  const isModuleListReady = moduleList.length;\r\n\r\n  const mode = useSelector((state: State) => state.settings.mode);\r\n  const isDarkMode = mode === DARK_MODE;\r\n\r\n  const theme = useSelector((state: State) => state.theme.id);\r\n\r\n  if (!isModuleListReady && moduleListError) {\r\n    return <ApiError dataName=\"course information\" retry={refetchModuleListAndTimetableModules} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Helmet>\r\n        <body\r\n          className={classnames(`theme-${theme}`, {\r\n            'mode-dark': isDarkMode,\r\n            'mdc-theme--dark': isDarkMode,\r\n            'mobile-safari': isIOS,\r\n          })}\r\n        />\r\n      </Helmet>\r\n\r\n      <nav className={styles.navbar}>\r\n        <NavLink className={styles.brand} to=\"/\" title=\"Home\">\r\n          <Logo className={styles.brandLogo} title=\"NUSMods\" />\r\n        </NavLink>\r\n\r\n        <div className={styles.navRight}>\r\n\r\n          <div className={styles.weekText}>{weekText}</div>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"main-container\">\r\n        <Navtabs />\r\n\r\n        <main className=\"main-content\">\r\n          {isModuleListReady ? (\r\n            <ErrorBoundary errorPage={() => <ErrorPage showReportDialog />}>\r\n              {children}\r\n            </ErrorBoundary>\r\n          ) : (\r\n            <LoadingSpinner />\r\n          )}\r\n        </main>\r\n      </div>\r\n\r\n      <ErrorBoundary>\r\n        <FeedbackModal />\r\n      </ErrorBoundary>\r\n\r\n      <ErrorBoundary>\r\n        <Notification />\r\n      </ErrorBoundary>\r\n\r\n      <ErrorBoundary>\r\n        <KeyboardShortcuts />\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppShell;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"HK_Tb4hi\",\"brand\":\"ZSoZVxVj\",\"brandLogo\":\"F71ieSxf\",\"navRight\":\"a3Usb4ZH\",\"weekText\":\"ULA0n1ax\"};","import { createSelector } from 'reselect';\r\n\r\nimport type { ModuleCode, Semester } from 'types/modules';\r\nimport type { State } from 'types/state';\r\n\r\nimport { fetchArchiveRequest } from 'actions/constants';\r\nimport config from 'config';\r\nimport { isOngoing, isSuccess } from 'selectors/requests';\r\n\r\nexport function isArchiveLoading(state: State, moduleCode: ModuleCode) {\r\n  return config.archiveYears.some((year) =>\r\n    isOngoing(state, fetchArchiveRequest(moduleCode, year)),\r\n  );\r\n}\r\n\r\nexport function availableArchive(state: State, moduleCode: ModuleCode): string[] {\r\n  return config.archiveYears.filter((year) =>\r\n    isSuccess(state, fetchArchiveRequest(moduleCode, year)),\r\n  );\r\n}\r\n\r\nconst EMPTY_OBJECT = {};\r\n\r\n/**\r\n * Extract semester timetable lessons for a specific semester.\r\n */\r\nexport const getSemesterTimetableLessons = createSelector(\r\n  ({ timetables }: State) => timetables.lessons,\r\n  (lessons) => (semester: Semester | null) =>\r\n    semester === null ? EMPTY_OBJECT : lessons[semester] ?? EMPTY_OBJECT,\r\n);\r\n\r\n/**\r\n * Extract semester timetable colors for a specific semester.\r\n */\r\nexport const getSemesterTimetableColors = createSelector(\r\n  ({ timetables }: State) => timetables.colors,\r\n  (colors) => (semester: Semester | null) =>\r\n    semester === null ? EMPTY_OBJECT : colors[semester] ?? EMPTY_OBJECT,\r\n);\r\n","import { REDO, UNDO } from './constants';\r\n\r\nexport function undo() {\r\n  return { type: UNDO, payload: null };\r\n}\r\n\r\nexport function redo() {\r\n  return { type: REDO, payload: null };\r\n}\r\n","import { memo } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'react-feather';\r\n\r\nimport type { Semester } from 'types/modules';\r\nimport { isValidSemester } from 'utils/timetables';\r\nimport config from 'config';\r\n\r\nimport styles from './SemesterSwitcher.scss';\r\n\r\ntype Props = {\r\n  readOnly?: boolean;\r\n  semester: Semester;\r\n  onSelectSemester: (newSemester: Semester) => void;\r\n};\r\n\r\nconst SemesterSwitcher = memo<Props>(({ readOnly, semester, onSelectSemester }) => {\r\n  const switchSemester = (offset: number) => {\r\n    const newSemester: Semester = semester + offset;\r\n    if (!isValidSemester(newSemester)) {\r\n      return;\r\n    }\r\n    onSelectSemester(newSemester);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.semesterSwitcher}>\r\n      {!readOnly && (\r\n        <button\r\n          className=\"btn btn-link\"\r\n          type=\"button\"\r\n          aria-label=\"Previous Semester\"\r\n          onClick={() => {\r\n            switchSemester(-1);\r\n          }}\r\n          disabled={!isValidSemester(semester - 1)}\r\n        >\r\n          <ChevronLeft />\r\n        </button>\r\n      )}\r\n      <span className=\"sr-only\">Current semester:</span>\r\n      <span className={styles.semesterName}>{config.semesterNames[semester]}</span>\r\n      {!readOnly && (\r\n        <button\r\n          className=\"btn btn-link\"\r\n          type=\"button\"\r\n          aria-label=\"Next Semester\"\r\n          onClick={() => {\r\n            switchSemester(1);\r\n          }}\r\n          disabled={!isValidSemester(semester + 1)}\r\n        >\r\n          <ChevronRight />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SemesterSwitcher;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"semesterSwitcher\":\"kNQtumWf\",\"semesterName\":\"WC_quwzc\"};","import { sortBy } from 'lodash';\r\nimport { ModuleCode, ModuleTitle, SearchableModule } from 'types/modules';\r\n\r\nexport function tokenize(str: string): string[] {\r\n  return str.trim().split(/\\W+/g);\r\n}\r\n\r\n// Match only start of words, case insensitively\r\nexport function regexify(str: string): RegExp {\r\n  const terms = str.trim().replace(/\\W+/g, '\\\\W+');\r\n  return RegExp(`\\\\b${terms}`, 'i');\r\n}\r\n\r\nexport function createSearchPredicate(\r\n  searchTerm: string,\r\n): (searchableModule: SearchableModule) => boolean {\r\n  const searchRegexes = tokenize(searchTerm).map(regexify);\r\n\r\n  return function predicate(module: SearchableModule): boolean {\r\n    return searchRegexes.every((regex) => {\r\n      if (\r\n        regex.test(module.moduleCode) ||\r\n        regex.test(module.title) ||\r\n        regex.test(module.moduleCode.replace(/\\D+/, ''))\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      if (module.description) {\r\n        return regex.test(module.description);\r\n      }\r\n\r\n      return false;\r\n    });\r\n  };\r\n}\r\n\r\nexport function sortModules<\r\n  T extends { readonly moduleCode: ModuleCode; readonly title: ModuleTitle },\r\n>(searchTerm: string, modules: T[]): T[] {\r\n  const searchRegexes = tokenize(searchTerm).map(regexify);\r\n\r\n  return sortBy(modules, (module) => {\r\n    let sum = 0;\r\n    for (let i = 0; i < searchRegexes.length; i++) {\r\n      if (\r\n        searchRegexes[i].test(module.moduleCode) ||\r\n        searchRegexes[i].test(module.moduleCode.replace(/\\D+/, ''))\r\n      ) {\r\n        sum += 1;\r\n      } else if (searchRegexes[i].test(module.title)) {\r\n        sum += 2;\r\n      } else {\r\n        sum += 3;\r\n      }\r\n    }\r\n\r\n    return sum;\r\n  });\r\n}\r\n","/**\r\n * Recursively retry `fn` until success, `retries` has been reached, or\r\n * `shouldRetry` returns false.\r\n *\r\n * Implementation based on https://stackoverflow.com/a/30471209/5281021.\r\n */\r\nexport async function retry<T>(\r\n  retries: number,\r\n  fn: () => Promise<T>,\r\n  shouldRetry: (error: Error) => boolean = () => true,\r\n): Promise<T> {\r\n  try {\r\n    // Be sure to await before returning!\r\n    return await fn();\r\n  } catch (err) {\r\n    if (retries <= 0 || !shouldRetry(err)) {\r\n      throw err;\r\n    }\r\n    return retry(retries - 1, fn, shouldRetry);\r\n  }\r\n}\r\n","import { retry } from 'utils/promise';\r\n\r\n/**\r\n * Wrap an async import() so that it automatically retries in case of a chunk\r\n * load error and when the user is online\r\n */\r\nexport default function retryImport<T>(importFactory: () => Promise<T>, retries = 3) {\r\n  return retry(\r\n    retries,\r\n    importFactory,\r\n    (error) => error.message.includes('Loading chunk ') && window.navigator.onLine,\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport retryImport from 'utils/retryImport';\r\n\r\nimport { Props, TooltipGroupProps } from './Tooltip';\r\n\r\n// Can't use react-loadable for this since children and other props\r\n// are not passed down - https://github.com/jamiebuilds/react-loadable/pull/161\r\nlet AsyncTooltip: React.ComponentType<Props> | null = null;\r\nlet AsyncTooltipGroup: React.ComponentType<TooltipGroupProps> | null = null;\r\n\r\nconst useLoadTooltip = () => {\r\n  React.useEffect(() => {\r\n    if (!AsyncTooltip || !AsyncTooltipGroup) {\r\n      retryImport(() => import(/* webpackChunkName: \"tooltip\" */ './Tooltip')).then((module) => {\r\n        // Dirty but it works\r\n        AsyncTooltip = module.default;\r\n        AsyncTooltipGroup = module.TooltipGroup;\r\n      });\r\n    }\r\n  }, []);\r\n};\r\n\r\nconst Tooltip = React.memo<Props>(({ children, ...props }) => {\r\n  useLoadTooltip();\r\n\r\n  if (!AsyncTooltip) {\r\n    return children;\r\n  }\r\n\r\n  return <AsyncTooltip {...props}>{children}</AsyncTooltip>;\r\n});\r\nTooltip.displayName = 'Tooltip';\r\n\r\nconst TooltipGroup = React.memo<TooltipGroupProps>(({ children, ...props }) => {\r\n  useLoadTooltip();\r\n\r\n  if (!AsyncTooltipGroup) {\r\n    // cast needed because TooltipGroupProps types children as React.ReactElement which is not\r\n    // compatible with the return type of React.FC, React.ReactElement\r\n    return children as React.ReactElement;\r\n  }\r\n\r\n  return <AsyncTooltipGroup {...props}>{children}</AsyncTooltipGroup>;\r\n});\r\nTooltipGroup.displayName = 'TooltipGroup';\r\n\r\nexport default Tooltip;\r\nexport { TooltipGroup };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"R9ask6eg\",\"input\":\"EcsvLrtl form-control\",\"modal\":\"ZBxIFqk_\",\"selectList\":\"FU3m5iNl scrollable-y list-unstyled\",\"close\":\"aYnDFSZB\",\"tip\":\"f6QpJHwz\",\"item\":\"HoyttgZT\",\"option\":\"doCBshHU HoyttgZT\",\"optionSelected\":\"rieqYJqT\",\"optionDisabled\":\"mEuG7FKQ\",\"actionIcon\":\"YsrJN1Nd svg-small\",\"optionActions\":\"DUFOz_1C\"};","import { FC, useCallback, useState } from 'react';\r\nimport { omit } from 'lodash';\r\nimport Downshift, {\r\n  ChildrenFunction,\r\n  ControllerStateAndHelpers,\r\n  DownshiftState,\r\n  StateChangeOptions,\r\n} from 'downshift';\r\nimport classnames from 'classnames';\r\nimport { Trash } from 'react-feather';\r\n\r\nimport { ModuleSelectList } from 'types/reducers';\r\nimport { ModuleCode } from 'types/modules';\r\n\r\nimport { breakpointUp } from 'utils/css';\r\nimport useMediaQuery from 'views/hooks/useMediaQuery';\r\nimport Modal from 'views/components/Modal';\r\nimport CloseButton from 'views/components/CloseButton';\r\nimport elements from 'views/elements';\r\nimport Tooltip from 'views/components/Tooltip';\r\n\r\nimport styles from './ModulesSelect.scss';\r\n\r\ntype Props = {\r\n  moduleCount: number;\r\n  placeholder: string;\r\n  disabled?: boolean;\r\n\r\n  getFilteredModules: (string: string | null) => ModuleSelectList;\r\n  onChange: (moduleCode: ModuleCode) => void;\r\n  onRemoveModule: (moduleCode: ModuleCode) => void;\r\n};\r\n\r\nconst ModulesSelect: FC<Props> = ({\r\n  moduleCount,\r\n  placeholder,\r\n  disabled,\r\n  getFilteredModules,\r\n  onChange,\r\n  onRemoveModule,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const matchBreakpoint = useMediaQuery(breakpointUp('md'));\r\n\r\n  const openSelect = useCallback(() => setIsOpen(true), []);\r\n  const closeSelect = useCallback(() => setIsOpen(false), []);\r\n  const closeSelectAndEmptyInput = useCallback(() => {\r\n    closeSelect();\r\n    setInputValue('');\r\n  }, [closeSelect]);\r\n\r\n  const handleInputValueChange = useCallback(\r\n    (newInputValue: string, stateAndHelpers: ControllerStateAndHelpers<ModuleCode>) => {\r\n      // Don't clear input on item select\r\n      if (stateAndHelpers.selectedItem) return;\r\n\r\n      setInputValue(newInputValue);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const handleDownshiftChange = useCallback(\r\n    (selectedItem: ModuleCode | null) => selectedItem && onChange(selectedItem),\r\n    [onChange],\r\n  );\r\n\r\n  const stateReducer = useCallback(\r\n    (state: DownshiftState<ModuleCode>, changes: StateChangeOptions<ModuleCode>) => {\r\n      switch (changes.type) {\r\n        case Downshift.stateChangeTypes.blurInput:\r\n          if (state.inputValue) return {}; // remain open on iOS\r\n          closeSelectAndEmptyInput();\r\n\r\n          return changes;\r\n\r\n        case Downshift.stateChangeTypes.keyDownEnter:\r\n        case Downshift.stateChangeTypes.clickItem:\r\n          // Don't reset isOpen, inputValue and highlightedIndex when item is selected\r\n          return omit(changes, ['isOpen', 'inputValue', 'highlightedIndex']);\r\n\r\n        case Downshift.stateChangeTypes.mouseUp:\r\n          // TODO: Uncomment when we upgrade to Downshift v3\r\n          // case Downshift.stateChangeTypes.touchEnd:\r\n          // Retain input on blur\r\n          return omit(changes, 'inputValue');\r\n\r\n        default:\r\n          return changes;\r\n      }\r\n    },\r\n    [closeSelectAndEmptyInput],\r\n  );\r\n\r\n  // downshift attaches label for us; autofocus only applies to modal\r\n  /* eslint-disable jsx-a11y/label-has-for, jsx-a11y/no-autofocus */\r\n  const renderDropdown: ChildrenFunction<ModuleCode> = ({\r\n    getLabelProps,\r\n    getInputProps,\r\n    getItemProps,\r\n    getMenuProps,\r\n    highlightedIndex,\r\n  }) => {\r\n    const isModalOpen = !matchBreakpoint && isOpen;\r\n    const results = getFilteredModules(inputValue);\r\n    const showResults = isOpen && results.length > 0;\r\n    const showTip = isModalOpen && !results.length;\r\n    const showNoResultMessage = isOpen && inputValue && !results.length;\r\n    const removeBtnLabel = (moduleCode: ModuleCode) => `Remove ${moduleCode} from timetable`;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <label className=\"sr-only\" {...getLabelProps()}>\r\n          {placeholder}\r\n        </label>\r\n        <input\r\n          {...getInputProps({\r\n            className: classnames(styles.input, elements.addModuleInput),\r\n            autoFocus: isModalOpen,\r\n            disabled,\r\n            placeholder,\r\n            // no onBlur as that means people can't click menu items as\r\n            // input has lost focus, see 'onOuterClick' instead\r\n            onFocus: openSelect,\r\n          })}\r\n        />\r\n        {isModalOpen && <CloseButton className={styles.close} onClick={closeSelectAndEmptyInput} />}\r\n        {showResults && (\r\n          <ol className={styles.selectList} {...getMenuProps()}>\r\n            {results.map((module, index) => (\r\n              <li\r\n                {...getItemProps({\r\n                  index,\r\n                  key: module.moduleCode,\r\n                  item: module.moduleCode,\r\n                  disabled: module.isAdded || module.isAdding,\r\n                })}\r\n                className={classnames(styles.option, {\r\n                  [styles.optionDisabled]: module.isAdded || module.isAdding,\r\n                  [styles.optionSelected]: highlightedIndex === index,\r\n                })}\r\n              >\r\n                {/* Using interpolated string instead of JSX because of iOS Safari\r\n                    bug that drops the whitespace between the module code and title */}\r\n                {`${module.moduleCode} ${module.title}`}\r\n                {module.isAdded && (\r\n                  <div className={styles.optionActions}>\r\n                    <Tooltip content={removeBtnLabel(module.moduleCode)} touch=\"hold\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className={classnames('btn btn-svg btn-sm', styles.actionButton)}\r\n                        aria-label={removeBtnLabel(module.moduleCode)}\r\n                        onClick={() => {\r\n                          onRemoveModule(module.moduleCode);\r\n                        }}\r\n                      >\r\n                        <Trash className={styles.actionIcon} />{' '}\r\n                      </button>\r\n                    </Tooltip>\r\n                    <span className=\"badge badge-info\">Added</span>\r\n                  </div>\r\n                )}\r\n\r\n                {module.isAdding && (\r\n                  <div>\r\n                    <span className=\"badge badge-warning\">Adding...</span>\r\n                  </div>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        )}\r\n        {showTip && (\r\n          <div className={styles.tip}>\r\n            Try &quot;GER1000&quot; or &quot;Quantitative Reasoning&quot;. Searching{' '}\r\n            <strong>{moduleCount}</strong> modules.\r\n          </div>\r\n        )}\r\n        {showNoResultMessage && (\r\n          <div className={styles.tip}>\r\n            No courses found for{' '}\r\n            <strong>\r\n              &quot;\r\n              {inputValue}\r\n              &quot;\r\n            </strong>\r\n            .\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const downshiftComponent = (\r\n    <Downshift\r\n      isOpen={isOpen}\r\n      onOuterClick={closeSelect}\r\n      inputValue={inputValue}\r\n      onChange={handleDownshiftChange}\r\n      onInputValueChange={handleInputValueChange}\r\n      selectedItem={null}\r\n      stateReducer={stateReducer}\r\n      defaultHighlightedIndex={0}\r\n    >\r\n      {renderDropdown}\r\n    </Downshift>\r\n  );\r\n\r\n  if (matchBreakpoint) {\r\n    return downshiftComponent;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        className={classnames(styles.input, elements.addModuleInput)}\r\n        onClick={openSelect}\r\n        disabled={disabled}\r\n      >\r\n        {placeholder}\r\n      </button>\r\n      <Modal\r\n        isOpen={!disabled && isOpen}\r\n        onRequestClose={closeSelectAndEmptyInput}\r\n        className={styles.modal}\r\n        shouldCloseOnOverlayClick={false}\r\n        fullscreen\r\n      >\r\n        {downshiftComponent}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModulesSelect;\r\n","import { useMemo } from 'react';\r\nimport { Subscription, useSubscription } from 'use-subscription';\r\nimport json2mq from 'json2mq';\r\nimport type { MediaQuery } from 'types/views';\r\n\r\nexport function getMedia(mediaQuery: MediaQuery): string {\r\n  return typeof mediaQuery === 'string' ? mediaQuery : json2mq(mediaQuery);\r\n}\r\n\r\n/**\r\n * To be used together with utilities in css.ts.\r\n * @returns Whether `mediaQuery` is/are matched.\r\n */\r\nexport default function useMediaQuery(mediaQuery: MediaQuery) {\r\n  const media = useMemo(() => getMedia(mediaQuery), [mediaQuery]);\r\n\r\n  const subscription = useMemo<Subscription<boolean>>(\r\n    () => ({\r\n      getCurrentValue: () => window.matchMedia(media).matches,\r\n      subscribe(callback) {\r\n        const mediaQueryList = window.matchMedia(media);\r\n        if (mediaQueryList.addEventListener) {\r\n          mediaQueryList.addEventListener('change', callback);\r\n        } else {\r\n          // To support quirk on Safari versions prior to Safari 14\r\n          // See https://github.com/nusmodifications/nusmods/issues/3029\r\n          mediaQueryList.addListener(callback);\r\n        }\r\n        return () => {\r\n          if (mediaQueryList.removeEventListener) {\r\n            mediaQueryList.removeEventListener('change', callback);\r\n          } else {\r\n            mediaQueryList.removeListener(callback);\r\n          }\r\n        };\r\n      },\r\n    }),\r\n    [media],\r\n  );\r\n\r\n  // TODO: Replace with useMutableSource after we adopt React concurrent mode. See:\r\n  // Docs: https://github.com/reactjs/rfcs/blob/master/text/0147-use-mutable-source.md\r\n  // Example: https://github.com/facebook/react/blob/36df483/packages/react-devtools-scheduling-profiler/src/hooks.js\r\n  const matchedBreakpoint = useSubscription(subscription);\r\n\r\n  return matchedBreakpoint;\r\n}\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ModuleSelectList } from 'types/reducers';\r\nimport { ModuleCode, Semester } from 'types/modules';\r\nimport { SemTimetableConfig } from 'types/timetables';\r\n\r\nimport Online from 'views/components/Online';\r\nimport { popNotification } from 'actions/app';\r\nimport { getSemModuleSelectList } from 'selectors/moduleBank';\r\nimport { createSearchPredicate, sortModules } from 'utils/moduleSearch';\r\nimport { State as StoreState } from 'types/state';\r\nimport ModulesSelect from './ModulesSelect';\r\n\r\ntype OwnProps = {\r\n  timetable: SemTimetableConfig;\r\n  semester: Semester;\r\n};\r\n\r\ntype Props = OwnProps & {\r\n  moduleList: ModuleSelectList;\r\n  addModule: (semester: Semester, moduleCode: ModuleCode) => void;\r\n  removeModule: (moduleCode: ModuleCode) => void;\r\n  popNotification: () => void;\r\n};\r\n\r\nconst RESULTS_LIMIT = 500;\r\n\r\n/**\r\n * Container for modules select\r\n * Governs the module filtering logic and non-select related logic such as notification.\r\n */\r\nclass ModulesSelectContainer extends Component<Props> {\r\n  onChange = (moduleCode: ModuleCode) => {\r\n    this.props.popNotification();\r\n    this.props.addModule(this.props.semester, moduleCode);\r\n  };\r\n\r\n  getFilteredModules = (inputValue: string | null) => {\r\n    if (!inputValue) return [];\r\n    const predicate = createSearchPredicate(inputValue);\r\n    const results = this.props.moduleList.filter(predicate);\r\n    return sortModules(inputValue, results.slice(0, RESULTS_LIMIT));\r\n  };\r\n\r\n  override render() {\r\n    return (\r\n      <Online>\r\n        {(isOnline) => (\r\n          <ModulesSelect\r\n            getFilteredModules={this.getFilteredModules}\r\n            moduleCount={this.props.moduleList.length}\r\n            onChange={this.onChange}\r\n            placeholder={\r\n              isOnline ? 'Add course to timetable' : 'You need to be online to add courses'\r\n            }\r\n            disabled={!isOnline}\r\n            onRemoveModule={this.props.removeModule}\r\n          />\r\n        )}\r\n      </Online>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: StoreState, ownProps: OwnProps) {\r\n  const { semester, timetable } = ownProps;\r\n  const moduleList = getSemModuleSelectList(state, semester, timetable);\r\n\r\n  return {\r\n    semester,\r\n    moduleList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  popNotification,\r\n})(ModulesSelectContainer);\r\n","import { SUCCESS, FAILURE, REQUEST } from 'types/reducers';\r\nimport { State } from 'types/state';\r\n\r\nexport function isOngoing(state: State, key: string) {\r\n  return state.requests[key] && state.requests[key].status === REQUEST;\r\n}\r\n\r\nexport function isSuccess(state: State, key: string) {\r\n  return state.requests[key] && state.requests[key].status === SUCCESS;\r\n}\r\n\r\nexport function isFailure(state: State, key: string) {\r\n  return state.requests[key] && state.requests[key].status === FAILURE;\r\n}\r\n","import { isString } from 'lodash';\r\nimport { captureException } from 'utils/error';\r\nimport getLocalStorage from './localStorage';\r\n\r\n// Simple wrapper around localStorage to automagically parse and stringify payloads.\r\nfunction setItem(key: string, value: unknown) {\r\n  try {\r\n    getLocalStorage().setItem(key, isString(value) ? value : JSON.stringify(value));\r\n  } catch (e) {\r\n    // Calculate used size and attach it to the error report. This is diagnostics\r\n    // for https://sentry.io/nusmods/v3/issues/432778991/\r\n    const usedSpace: Record<string, number> = {};\r\n    try {\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const k = localStorage.key(i);\r\n        if (typeof k === 'string') {\r\n          const item = localStorage.getItem(k);\r\n          if (item) usedSpace[k] = Math.round(item.length / 1024);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Ignore error\r\n    }\r\n\r\n    captureException(e, { usedSpace });\r\n  }\r\n}\r\n\r\nfunction getItem(key: string): unknown {\r\n  let value;\r\n  try {\r\n    value = getLocalStorage().getItem(key);\r\n    if (value && value !== '') {\r\n      return JSON.parse(value);\r\n    }\r\n    return undefined;\r\n  } catch (e) {\r\n    captureException(e);\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction removeItem(key: string) {\r\n  try {\r\n    getLocalStorage().removeItem(key);\r\n  } catch (e) {\r\n    captureException(e);\r\n  }\r\n}\r\n\r\nconst storage = {\r\n  setItem,\r\n  getItem,\r\n  removeItem,\r\n};\r\n\r\nexport default storage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"announcement\":\"UfBj8HDb\",\"body\":\"ygNmZTdF\",\"bodyElement\":\"Sjejg3Eh\",\"actions\":\"hCc4UQR1\",\"buttons\":\"arC4yZWi\",\"backgroundIcon\":\"ZayHAXuO\",\"wrapButtons\":\"IQ5yrjRZ\",\"hacktoberfest\":\"zprLxpGe\"};","import { memo, useState, useCallback } from 'react';\r\nimport classnames from 'classnames';\r\nimport { Heart } from 'react-feather';\r\n\r\nimport storage from 'storage';\r\nimport { announcementKey } from 'storage/keys';\r\nimport CloseButton from 'views/components/CloseButton';\r\nimport styles from './Announcements.scss';\r\n\r\n/**\r\n * If false, hides announcement.\r\n */\r\nconst enableAnnouncements = true;\r\n\r\n/**\r\n * Unique key for the current announcement. If the announcement is not\r\n * dismissible, set the key to null. Otherwise, set it to a string.\r\n *\r\n * Previous keys:\r\n * - 'ay202324-new-data' - AY2023/24 data is available\r\n * - 'ay202223-new-data' - AY2022/23 data is available\r\n * - 'vercel-migration-120522' - Announcement for possible outage for\r\n *                               migration out of Vercel team plan\r\n * - 'ay202122-2107-search-outage' - Module search outage apology\r\n * - 'ay202122-new-data' - AY2021/22 data is available\r\n * - 'ay202021-new-data' - AY2020/21 data is available\r\n * - 'ay201920-new-data' - AY2019/20 data is available\r\n * - 'nusmods-is-official' - NUSMods switch to official APIs\r\n * - 'nusmods-r-announcement' - NUSMods R announcement message\r\n * - 'ay201819-new-data' - AY2018/19 data is available\r\n * - 'ay201819-s2-new-data' - S2 data available\r\n */\r\nconst key = announcementKey('ay202324-new-data');\r\n\r\nconst Announcements = memo(() => {\r\n  const [isOpen, setIsOpen] = useState(() => {\r\n    if (!enableAnnouncements) return false;\r\n    if (key) return !storage.getItem(key);\r\n    return true;\r\n  });\r\n\r\n  const dismiss = useCallback(() => {\r\n    if (key) storage.setItem(key, true);\r\n    setIsOpen(false);\r\n  }, []);\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        'alert alert-success no-export',\r\n        styles.announcement,\r\n        // styles.wrapButtons, // Uncomment if needed\r\n      )}\r\n    >\r\n      <Heart className={styles.backgroundIcon} />\r\n\r\n      <div className={styles.body}>\r\n        <h3>AY2023/24 courses now available!</h3>\r\n        <p className={styles.bodyElement}>\r\n          NUSMods now has AY2023/24 course information available. The data is accurate but subject\r\n          to changes.\r\n        </p>\r\n        <p className={styles.bodyElement}>\r\n          If there are any discrepancies with course data, please contact your respective faculty's\r\n          office. Happy new academic year!\r\n        </p>\r\n      </div>\r\n\r\n      <div className={styles.buttons}>{key && <CloseButton onClick={dismiss} />}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Announcements;\r\n","/**\r\n * Keys used for localStorage - kept here in a constants file to ensure they don't collide\r\n */\r\nexport const BROWSER_WARNING_KEY = 'dismissedBrowserWarning';\r\n\r\n// Change this every year if we want to keep participating\r\nexport const HACKTOBERFEST = 'hacktoberfest-2018';\r\n\r\n// Used by announcements\r\nconst ANNOUNCEMENT_PREFIX = 'announcements.';\r\n/**\r\n * Returns a transformed announcement key. Possible values:\r\n *\r\n * - `null`: An announcement that cannot be dismissed.\r\n * - A `string` value: A dismissable announcement.\r\n */\r\nexport function announcementKey(key: string | null) {\r\n  if (!key) return null;\r\n  return `${ANNOUNCEMENT_PREFIX}${key}`;\r\n}\r\n\r\n// Used by ModTris\r\nexport const MODTRIS_SCORES = 'modtris-scores';\r\n\r\nexport const CONTACT_INFO = 'contact-info';\r\n\r\n// Used by MPE\r\nexport const NUS_AUTH_TOKEN = 'nus-auth-token';\r\n","import { FC, memo, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\nimport { formatDistance } from 'date-fns';\r\n\r\nimport type { State } from 'types/state';\r\n\r\nimport config, { RegPeriod, RegPeriodType } from 'config';\r\nimport { dismissModregNotification } from 'actions/settings';\r\nimport { openNotification } from 'actions/app';\r\nimport { getRounds } from 'selectors/modreg';\r\nimport CloseButton from 'views/components/CloseButton';\r\nimport ExternalLink from 'views/components/ExternalLink';\r\nimport { forceTimer } from 'utils/debug';\r\n\r\nimport styles from './ModRegNotification.scss';\r\n\r\n// Holy shit\r\nconst MOD_REG_URL =\r\n  'https://myedurec.nus.edu.sg/psc/cs90prd/EMPLOYEE/SA/c/N_STUDENT_RECORDS.N_MRS_START_MD_FL.GBL?Action=U&MD=Y&GMenu=N_STUDENT_RECORDS&GComp=N_MRS_START_NAV_FL&GPage=N_MRS_START_NAV_FL&scname=N_MRS_MODULE_REG_NAV&dup=Y&';\r\n\r\nconst NotificationText: FC<{\r\n  useLineBreaks: boolean;\r\n  round: RegPeriod;\r\n  now: Date;\r\n}> = ({ useLineBreaks, round, now }) => {\r\n  const isRoundOpen = now >= round.startDate;\r\n  const timeFromNow = formatDistance(now, isRoundOpen ? round.endDate : round.startDate, {\r\n    includeSeconds: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isRoundOpen ? 'Current' : 'Next'} <strong>{round.type}</strong>{' '}\r\n      {round.name ? `(Round ${round.name})` : ''}: {useLineBreaks && <br />}\r\n      {isRoundOpen ? ' till' : ' at'} <strong>{isRoundOpen ? round.end : round.start}</strong>\r\n      {useLineBreaks && <br />} ({timeFromNow} from now)\r\n    </>\r\n  );\r\n};\r\n\r\nconst NotificationLink: FC<{\r\n  roundType: RegPeriodType;\r\n  children: React.ReactNode;\r\n}> = ({ roundType, children }) =>\r\n  roundType === 'Course Planning Exercise (CPEx)' ? (\r\n    <NavLink to=\"/cpex\">{children}</NavLink>\r\n  ) : (\r\n    <ExternalLink href={MOD_REG_URL}>{children}</ExternalLink>\r\n  );\r\n\r\nconst ModRegNotification: FC<{\r\n  // True only on the settings page since we don't want\r\n  // users accidentally dismissing the preview notification\r\n  dismissible?: boolean;\r\n}> = ({ dismissible }) => {\r\n  const rounds = useSelector(({ settings }: State) =>\r\n    getRounds(settings.modRegNotification, config.modRegSchedule).filter(\r\n      (round) => !round.dismissed,\r\n    ),\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const dismiss = useCallback(\r\n    (round: RegPeriod) => {\r\n      dispatch(dismissModregNotification(round));\r\n      dispatch(\r\n        openNotification('Reminder snoozed until start of next round', {\r\n          timeout: 12000,\r\n          action: {\r\n            text: 'Settings',\r\n            handler: () => {\r\n              history.push('/settings#modreg');\r\n            },\r\n          },\r\n        }),\r\n      );\r\n    },\r\n    [dispatch, history],\r\n  );\r\n\r\n  if (!rounds.length) return null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {rounds.map((round) => (\r\n        <div className={styles.notificationWrapper} key={round.type}>\r\n          <NotificationLink roundType={round.type}>\r\n            <div className={styles.notification}>\r\n              <NotificationText useLineBreaks round={round} now={forceTimer() || new Date()} />\r\n            </div>\r\n          </NotificationLink>\r\n\r\n          {!dismissible && <CloseButton className={styles.close} onClick={() => dismiss(round)} />}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ModRegNotification);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"nWv_BdIb no-export\",\"notificationWrapper\":\"uAVLHJDo\",\"notification\":\"gNmlRBvD\",\"close\":\"fHyAWozW\"};","import * as React from 'react';\r\nimport { differenceInMilliseconds } from 'date-fns';\r\nimport { wrapComponentName } from 'utils/react';\r\nimport { forceTimer } from 'utils/debug';\r\n\r\nexport interface TimerData {\r\n  readonly currentTime: Date;\r\n}\r\n\r\nfunction getCurrentTime() {\r\n  return forceTimer() || new Date();\r\n}\r\n\r\nfunction withTimer<Props extends TimerData>(\r\n  WrappedComponent: React.ComponentType<Props>,\r\n  intervalInMs: number = 60 * 1000,\r\n): React.ComponentType<Omit<Props, keyof TimerData>> {\r\n  return class extends React.Component<Omit<Props, keyof TimerData>, TimerData> {\r\n    intervalId?: number;\r\n\r\n    static displayName = wrapComponentName(WrappedComponent, withTimer.name);\r\n\r\n    override state: TimerData = {\r\n      currentTime: getCurrentTime(),\r\n    };\r\n\r\n    override componentDidMount() {\r\n      this.intervalId = window.setInterval(\r\n        () => this.setState({ currentTime: getCurrentTime() }),\r\n        intervalInMs,\r\n      );\r\n      document.addEventListener('visibilitychange', this.onPageVisibilityChange);\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n      clearInterval(this.intervalId);\r\n      document.removeEventListener('visibilitychange', this.onPageVisibilityChange);\r\n    }\r\n\r\n    onPageVisibilityChange = () => {\r\n      // Page visibility changes when tabs go in and out of focus. When tabs\r\n      // are out of focus, mobile browsers slow down timers, so we run an\r\n      // additional check to make sure the page state has not drifted too far\r\n      // from the wall clock\r\n      const now = getCurrentTime();\r\n      if (\r\n        !document.hidden &&\r\n        differenceInMilliseconds(now, this.state.currentTime) > intervalInMs\r\n      ) {\r\n        this.setState({ currentTime: now });\r\n      }\r\n    };\r\n\r\n    override render() {\r\n      // TODO: remove as Props hack as defined in:\r\n      // https://github.com/Microsoft/TypeScript/issues/28938#issuecomment-450636046\r\n      return <WrappedComponent {...this.state} {...(this.props as Props)} />;\r\n    }\r\n  };\r\n}\r\n\r\nexport default withTimer;\r\n","import * as React from 'react';\r\nimport { range } from 'lodash';\r\n\r\nimport { convertIndexToTime } from 'utils/timify';\r\nimport styles from './TimetableTimings.scss';\r\n\r\ntype Props = {\r\n  startingIndex: number;\r\n  endingIndex: number;\r\n};\r\n\r\nconst TimetableTimings: React.FC<Props> = (props) => {\r\n  const indices = range(props.startingIndex, props.endingIndex);\r\n\r\n  return (\r\n    <div className={styles.timings}>\r\n      {indices.map((i) => {\r\n        const time = convertIndexToTime(i);\r\n\r\n        // Only mark even ticks\r\n        if (i % 2 === 1) return null;\r\n\r\n        return (\r\n          <time key={time} className={styles.time}>\r\n            {time}\r\n          </time>\r\n        );\r\n      })}\r\n      <span />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableTimings;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"timings\":\"otCBV0gl\",\"time\":\"JwnFQEOd\"};","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport { isEqual } from 'lodash';\r\nimport { addWeeks, format, parseISO } from 'date-fns';\r\nimport NUSModerator, { AcadWeekInfo } from 'nusmoderator';\r\n\r\nimport { consumeWeeks, WeekRange } from 'types/modules';\r\nimport { HoverLesson, ModifiableLesson } from 'types/timetables';\r\nimport { OnHoverCell } from 'types/views';\r\n\r\nimport {\r\n  formatNumericWeeks,\r\n  getHoverLesson,\r\n  getLessonIdentifier,\r\n  LESSON_TYPE_ABBREV,\r\n} from 'utils/timetables';\r\nimport elements from 'views/elements';\r\nimport Tooltip from 'views/components/Tooltip/Tooltip';\r\nimport styles from './TimetableCell.scss';\r\n\r\ntype Props = {\r\n  showTitle: boolean;\r\n  lesson: ModifiableLesson;\r\n  onHover: OnHoverCell;\r\n  style?: React.CSSProperties;\r\n  onClick?: (position: ClientRect) => void;\r\n  hoverLesson?: HoverLesson | null;\r\n  transparent: boolean;\r\n};\r\n\r\nconst lessonDateFormat = 'MMM dd';\r\n\r\nfunction formatWeekInfo(weekInfo: AcadWeekInfo) {\r\n  if (weekInfo.type === 'Instructional') return `Week ${weekInfo.num}`;\r\n  return weekInfo.type;\r\n}\r\n\r\nfunction formatWeekRange(weekRange: WeekRange) {\r\n  const start = parseISO(weekRange.start);\r\n\r\n  // Start = end means there's just one lesson\r\n  if (weekRange.start === weekRange.end) return format(start, lessonDateFormat);\r\n\r\n  let dateRange = `${format(start, lessonDateFormat)}–${format(\r\n    parseISO(weekRange.end),\r\n    lessonDateFormat,\r\n  )}`;\r\n\r\n  // If lessons are not weekly, we need to mention that\r\n  if (weekRange.weekInterval) {\r\n    dateRange += `, every ${weekRange.weekInterval} weeks`;\r\n  }\r\n\r\n  if (!weekRange.weeks) return dateRange;\r\n\r\n  // If the weeks are uneven (ie. there are gaps), we need to use a full table\r\n  // to show all the dates the lesson is on\r\n  const table = (\r\n    <div className={styles.classes}>\r\n      <h5>Classes</h5>\r\n      <ol className={classnames({ [styles.twoColumn]: weekRange.weeks.length > 6 })}>\r\n        {weekRange.weeks.map((week) => {\r\n          const date = addWeeks(start, week - 1);\r\n          const weekInfo = NUSModerator.academicCalendar.getAcadWeekInfo(date);\r\n          return (\r\n            <li key={week}>\r\n              {format(date, lessonDateFormat)}{' '}\r\n              <span className={styles.weekInfo}>({formatWeekInfo(weekInfo)})</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Tooltip content={table} interactive arrow>\r\n      <span className={styles.weeksSpecial}>{dateRange}</span>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\n/**\r\n * Smallest unit in timetable.\r\n * Representing a lesson in this case. In future we\r\n * might explore other representations e.g. grouped lessons\r\n */\r\nconst TimetableCell: React.FC<Props> = (props) => {\r\n  const { lesson, showTitle, onClick, onHover, hoverLesson, transparent } = props;\r\n\r\n  const moduleName = showTitle ? `${lesson.moduleCode} ${lesson.title}` : lesson.moduleCode;\r\n  const Cell = props.onClick ? 'button' : 'div';\r\n  const isHoveredOver = isEqual(getHoverLesson(lesson), hoverLesson);\r\n\r\n  const conditionalProps = onClick\r\n    ? {\r\n        onClick: (e: React.MouseEvent) => {\r\n          e.preventDefault();\r\n          e.stopPropagation(); // Do not propagate click to Timetable component below\r\n          onClick(e.currentTarget.getBoundingClientRect());\r\n        },\r\n      }\r\n    : {};\r\n\r\n  const weekText = consumeWeeks<React.ReactNode>(lesson.weeks, formatNumericWeeks, formatWeekRange);\r\n\r\n  const className = classnames(\r\n    styles.baseCell,\r\n    getLessonIdentifier(lesson),\r\n    elements.lessons,\r\n    transparent ? styles.transparentCell : [styles.coloredCell, `color-${lesson.colorIndex}`],\r\n    {\r\n      hoverable: !!onClick,\r\n      [styles.clickable]: !!onClick,\r\n      [styles.available]: lesson.isAvailable,\r\n      [styles.active]: lesson.isActive && !lesson.isAvailable,\r\n      // Local hover style for the timetable planner timetable,\r\n      [styles.hover]: isHoveredOver,\r\n      // Global hover style for module page timetable\r\n      hover: isHoveredOver,\r\n    },\r\n  );\r\n\r\n  return (\r\n    <Cell\r\n      className={className}\r\n      style={props.style}\r\n      onMouseEnter={() => onHover(getHoverLesson(lesson))}\r\n      onTouchStart={() => onHover(getHoverLesson(lesson))}\r\n      onMouseLeave={() => onHover(null)}\r\n      onTouchEnd={() => onHover(null)}\r\n      autoFocus={lesson.isActive}\r\n      {...conditionalProps}\r\n    >\r\n      <div className={styles.cellContainer}>\r\n        <div className={styles.moduleName}>{moduleName}</div>\r\n        <div>\r\n          {LESSON_TYPE_ABBREV[lesson.lessonType]} [{lesson.classNo}]\r\n        </div>\r\n        <div>{lesson.venue.startsWith('E-Learn') ? 'E-Learning' : lesson.venue}</div>\r\n        {weekText && <div>{weekText}</div>}\r\n      </div>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nexport default TimetableCell;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"baseCell\":\"FRwl0Met\",\"coloredCell\":\"HDSrsYUN\",\"transparentCell\":\"FGP6VUeO\",\"cellContainer\":\"m6qmhusC\",\"clickable\":\"QZw_5QSv\",\"available\":\"EtruaMU0\",\"hover\":\"sFvTuIIV\",\"active\":\"TsmOEN3V\",\"moduleName\":\"mQfUG5wB\",\"weeksSpecial\":\"a3pzmqS1\",\"classes\":\"gczRsXe8\",\"twoColumn\":\"mSrxIlw5\",\"weekInfo\":\"zaSf9I9l\"};","// Components within a module:\r\nexport type AcadYear = string;\r\nexport type ClassNo = string;\r\nexport type DayText = string;\r\nexport type StartTime = string;\r\nexport type EndTime = string;\r\nexport type Faculty = string;\r\nexport type LessonTime = StartTime | EndTime;\r\nexport type LessonType = string;\r\nexport type ModuleCode = string;\r\nexport type ModuleTitle = string;\r\nexport type Semester = number;\r\nexport type Department = string;\r\nexport type Workload = string | readonly number[];\r\nexport type Venue = string;\r\nexport type Weeks = NumericWeeks | WeekRange;\r\nexport type NumericWeeks = readonly number[];\r\nexport type WeekRange = {\r\n  // The start and end dates\r\n  start: string;\r\n  end: string;\r\n  // Number of weeks between each lesson. If not specified one week is assumed\r\n  // ie. there are lessons every week\r\n  weekInterval?: number;\r\n  // Week intervals for modules with uneven spacing between lessons\r\n  weeks?: number[];\r\n};\r\n\r\n// Recursive tree of module codes and boolean operators for the prereq tree\r\nexport type PrereqTree =\r\n  | string\r\n  | { and: PrereqTree[] }\r\n  | { or: PrereqTree[] }\r\n  | { nOf: [number, PrereqTree[]] };\r\n\r\n// Auxiliary data types\r\nexport type Day =\r\n  | 'Monday'\r\n  | 'Tuesday'\r\n  | 'Wednesday'\r\n  | 'Thursday'\r\n  | 'Friday'\r\n  | 'Saturday'\r\n  | 'Sunday';\r\n\r\nexport const WorkingDays: readonly Day[] = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\n\r\nexport const DaysOfWeek: readonly Day[] = [...WorkingDays, 'Sunday'];\r\n\r\nexport const Semesters: readonly Semester[] = [1, 2, 3, 4];\r\n\r\nexport type WorkloadComponent = 'Lecture' | 'Tutorial' | 'Laboratory' | 'Project' | 'Preparation';\r\n\r\n// Workload components as defined by CORS, in their correct positions (see below).\r\nexport const WORKLOAD_COMPONENTS: WorkloadComponent[] = [\r\n  'Lecture',\r\n  'Tutorial',\r\n  'Laboratory',\r\n  'Project',\r\n  'Preparation',\r\n];\r\n\r\n/**\r\n * Typesafe helper functions for consuming Weeks\r\n */\r\nexport const isWeekRange = (week: Weeks): week is WeekRange => !Array.isArray(week);\r\n\r\nexport const consumeWeeks = <T = void>(\r\n  weeks: Weeks,\r\n  consumeNumericWeeks: (numericWeeks: NumericWeeks) => T,\r\n  consumeWeekRange: (weekRange: WeekRange) => T,\r\n): T => {\r\n  if (Array.isArray(weeks)) return consumeNumericWeeks(weeks);\r\n  return consumeWeekRange(weeks as WeekRange);\r\n};\r\n\r\nexport type SearchableModule = {\r\n  moduleCode: ModuleCode;\r\n  title: ModuleTitle;\r\n  description?: string;\r\n};\r\n\r\nexport type SemesterDataCondensed = Readonly<{\r\n  semester: Semester;\r\n  examDate?: string;\r\n  examDuration?: number;\r\n  // The full timetable is not provided to reduce space\r\n}>;\r\n\r\ntype AttributeMap = {\r\n  year: boolean; // Year long\r\n  su: boolean; // Can S/U\r\n  grsu: boolean;\r\n  ssgf: boolean; // SkillsFuture Funded\r\n  sfs: boolean; // SkillsFuture series\r\n  lab: boolean; // Lab based\r\n  ism: boolean; // Independent study\r\n  urop: boolean; // Undergraduate Research Opportunities Program\r\n  fyp: boolean; // Honours / Final Year Project\r\n  mpes1: boolean; // Included in Semester 1's Module Planning Exercise\r\n  mpes2: boolean; // Included in Semester 2's Module Planning Exercise\r\n};\r\n\r\nexport type NUSModuleAttributes = Partial<AttributeMap>;\r\n\r\nexport const attributeDescription: { [key in keyof AttributeMap]: string } = {\r\n  year: 'Year long course',\r\n  su: 'Has S/U option for Undergraduate students only',\r\n  grsu: 'Has S/U option for relevant Graduate (Research) students only',\r\n  ssgf: 'SkillsFuture funded',\r\n  sfs: 'SkillsFuture series',\r\n  lab: 'Lab based course',\r\n  ism: 'Independent study course',\r\n  urop: 'Undergraduate Research Opportunities Program',\r\n  fyp: 'Honours / Final Year Project',\r\n  mpes1: \"Included in Semester 1's Course Planning Exercise\",\r\n  mpes2: \"Included in Semester 2's Course Planning Exercise\",\r\n};\r\n\r\n// RawLesson is a lesson time slot obtained from the API.\r\n// Lessons do not implement a modifiable interface.\r\n// They have to be injected in before using in the timetable.\r\n// Usually ModuleCode and ModuleTitle has to be injected in before using in the timetable.\r\nexport type RawLesson = Readonly<{\r\n  classNo: ClassNo;\r\n  day: DayText;\r\n  startTime: StartTime;\r\n  endTime: EndTime;\r\n  lessonType: LessonType;\r\n  venue: Venue;\r\n  weeks: Weeks;\r\n}>;\r\n\r\n// Semester-specific information of a module.\r\nexport type SemesterData = {\r\n  semester: Semester;\r\n  timetable: readonly RawLesson[];\r\n\r\n  // Exam\r\n  examDate?: string;\r\n  examDuration?: number;\r\n};\r\n\r\n// This format is returned from the module list endpoint.\r\nexport type ModuleCondensed = Readonly<{\r\n  moduleCode: ModuleCode;\r\n  title: ModuleTitle;\r\n  semesters: readonly number[];\r\n}>;\r\n\r\n// This format is returned from the module information endpoint\r\n// Subset of Module object that contains the properties that are needed for module search\r\nexport type ModuleInformation = Readonly<{\r\n  // Basic info\r\n  moduleCode: ModuleCode;\r\n  title: ModuleTitle;\r\n\r\n  // Additional info\r\n  description?: string;\r\n  moduleCredit: string;\r\n  department: Department;\r\n  faculty: Faculty;\r\n  workload?: Workload;\r\n  aliases?: ModuleCode[];\r\n  attributes?: NUSModuleAttributes;\r\n  gradingBasisDescription?: string;\r\n\r\n  // Requsites\r\n  prerequisite?: string;\r\n  corequisite?: string;\r\n  preclusion?: string;\r\n\r\n  // Condensed semester info\r\n  semesterData: readonly SemesterDataCondensed[];\r\n\r\n  // Requisite tree is not returned to save space\r\n}>;\r\n\r\n// Information for a module for a particular academic year.\r\nexport type Module = {\r\n  acadYear: AcadYear;\r\n\r\n  // Basic info\r\n  moduleCode: ModuleCode;\r\n  title: ModuleTitle;\r\n\r\n  // Additional info\r\n  description?: string;\r\n  moduleCredit: string;\r\n  department: Department;\r\n  faculty: Faculty;\r\n  workload?: Workload;\r\n  aliases?: ModuleCode[];\r\n  attributes?: NUSModuleAttributes;\r\n  gradingBasisDescription?: string;\r\n  additionalInformation?: string;\r\n\r\n  // Requsites\r\n  prerequisite?: string;\r\n  prerequisiteRule?: string;\r\n  prerequisiteAdvisory?: string;\r\n  corequisite?: string;\r\n  corequisiteRule?: string;\r\n  preclusion?: string;\r\n  preclusionRule?: string;\r\n\r\n  // Semester data\r\n  semesterData: readonly SemesterData[];\r\n\r\n  // Requisites\r\n  prereqTree?: PrereqTree;\r\n  fulfillRequirements?: readonly ModuleCode[];\r\n\r\n  // Meta\r\n  timestamp: number;\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { HoverLesson, ModifiableLesson } from 'types/timetables';\r\nimport { OnHoverCell, OnModifyCell } from 'types/views';\r\n\r\nimport { convertTimeToIndex } from 'utils/timify';\r\nimport styles from './TimetableRow.scss';\r\nimport TimetableCell from './TimetableCell';\r\n\r\ntype Props = {\r\n  verticalMode: boolean;\r\n  showTitle: boolean;\r\n  startingIndex: number;\r\n  endingIndex: number;\r\n  lessons: ModifiableLesson[];\r\n  hoverLesson?: HoverLesson | null;\r\n  onCellHover: OnHoverCell;\r\n  onModifyCell?: OnModifyCell;\r\n};\r\n\r\n/**\r\n * Position the lessons properly on the row.\r\n * In horizontal mode, we use margin to insert space for elements,\r\n * which are relative to each other.\r\n * In vertical mode, we use absolute positioning to place lessons\r\n * relative to the parent.\r\n *\r\n * Reasoning for doing so is that we need rows to resize according to their\r\n * children's height, in which absolute positioning would not allow.\r\n */\r\nconst TimetableRow: React.FC<Props> = (props) => {\r\n  const { startingIndex, endingIndex, lessons, onModifyCell, verticalMode } = props;\r\n  const totalCols = endingIndex - startingIndex;\r\n\r\n  let lastStartIndex = startingIndex;\r\n\r\n  return (\r\n    <div className={styles.timetableRow}>\r\n      {lessons.map((lesson) => {\r\n        const startIndex = convertTimeToIndex(lesson.startTime);\r\n        const endIndex = convertTimeToIndex(lesson.endTime);\r\n\r\n        const size = Math.max(endIndex - startIndex, 1);\r\n\r\n        const dirStyle = verticalMode ? 'top' : 'marginLeft';\r\n        const sizeStyle = verticalMode ? 'height' : 'width';\r\n\r\n        const dirValue = startIndex - (verticalMode ? startingIndex : lastStartIndex);\r\n        const style = {\r\n          // calc() adds a 1px gap between cells\r\n          [dirStyle]: `calc(${(dirValue / totalCols) * 100}% + 1px)`,\r\n          [sizeStyle]: `calc(${(size / totalCols) * 100}% - 1px)`,\r\n        };\r\n\r\n        lastStartIndex = endIndex;\r\n\r\n        const conditionalProps =\r\n          lesson.isModifiable && onModifyCell\r\n            ? {\r\n                onClick: (position: ClientRect) => onModifyCell(lesson, position),\r\n              }\r\n            : {};\r\n\r\n        return (\r\n          <TimetableCell\r\n            key={lesson.startTime}\r\n            style={style}\r\n            lesson={lesson}\r\n            showTitle={props.showTitle}\r\n            hoverLesson={props.hoverLesson}\r\n            onHover={props.onCellHover}\r\n            transparent={lesson.startTime === lesson.endTime}\r\n            {...conditionalProps}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetableRow;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"timetableRow\":\"KRfrugFP\"};","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './CurrentTimeIndicator.scss';\r\n\r\ntype Props = {\r\n  style: React.CSSProperties;\r\n};\r\n\r\nconst CurrentTimeIndicator: React.FC<Props> = (props) => (\r\n  <div className={classnames('no-export', styles.currentTimeIndicator)} style={props.style}>\r\n    <div className={styles.circularPart} />\r\n    <div className={styles.linePart} />\r\n  </div>\r\n);\r\n\r\nexport default CurrentTimeIndicator;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"currentTimeIndicator\":\"UcdNHUyo\",\"circularPart\":\"SyfCsnot\",\"linePart\":\"mQkfQLvX\"};","import classnames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nimport styles from './TimetableHighlight.scss';\r\n\r\ntype Props = {\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n};\r\n\r\n/**\r\n * A highlighted time period in the timetable.\r\n */\r\nconst TimetableHighlight: React.FC<Props> = (props) => (\r\n  <div className={classnames(styles.highlight, props.className)} style={props.style} />\r\n);\r\n\r\nexport default TimetableHighlight;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"highlight\":\"rRig5vv6\"};","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport { HoverLesson, TimetableDayArrangement } from 'types/timetables';\r\nimport { OnHoverCell, OnModifyCell } from 'types/views';\r\nimport { convertTimeToIndex } from 'utils/timify';\r\n\r\nimport { TimePeriod } from 'types/venues';\r\nimport styles from './TimetableDay.scss';\r\nimport TimetableRow from './TimetableRow';\r\nimport CurrentTimeIndicator from './CurrentTimeIndicator';\r\nimport TimetableHighlight from './TimetableHighlight';\r\n\r\ntype Props = {\r\n  day: string;\r\n  dayLessonRows: TimetableDayArrangement;\r\n  verticalMode: boolean;\r\n  showTitle: boolean;\r\n  isScrolledHorizontally: boolean;\r\n  startingIndex: number;\r\n  endingIndex: number;\r\n  isCurrentDay: boolean;\r\n  currentTimeIndicatorStyle: React.CSSProperties;\r\n  hoverLesson: HoverLesson | null;\r\n  onCellHover: OnHoverCell;\r\n  onModifyCell?: OnModifyCell;\r\n  highlightPeriod?: TimePeriod;\r\n};\r\n\r\n// Height of timetable per hour in vertical mode\r\nconst VERTICAL_HEIGHT = 2.4;\r\n\r\nfunction calculateLessonStyle(\r\n  period: TimePeriod,\r\n  startingIndex: number,\r\n  endingIndex: number,\r\n  verticalMode: boolean,\r\n): React.CSSProperties {\r\n  const totalCols = endingIndex - startingIndex;\r\n\r\n  const startIndex = convertTimeToIndex(period.startTime);\r\n  const endIndex = convertTimeToIndex(period.endTime);\r\n  const size = endIndex - startIndex;\r\n\r\n  const dirStyle = verticalMode ? 'top' : 'left';\r\n  const sizeStyle = verticalMode ? 'height' : 'width';\r\n\r\n  return {\r\n    [dirStyle]: `calc(${((startIndex - startingIndex) / totalCols) * 100}% + 1px)`,\r\n    [sizeStyle]: `calc(${(size / totalCols) * 100}% - 1px)`,\r\n  };\r\n}\r\n\r\nconst TimetableDay: React.FC<Props> = (props) => {\r\n  const { startingIndex, endingIndex, verticalMode, highlightPeriod } = props;\r\n\r\n  const columns = endingIndex - startingIndex;\r\n  const size = 100 / (columns / 4);\r\n\r\n  const rowStyle: React.CSSProperties = {\r\n    // Firefox defaults the second value (width) to auto if not specified\r\n    backgroundSize: `${size}% ${size}%`,\r\n  };\r\n\r\n  if (verticalMode) rowStyle.height = `${VERTICAL_HEIGHT * columns}rem`;\r\n\r\n  return (\r\n    <li className={styles.day}>\r\n      <div\r\n        className={classnames(styles.dayName, {\r\n          [styles.dayNameScrolled]: props.isScrolledHorizontally,\r\n        })}\r\n      >\r\n        <span className={styles.dayNameText}>{props.day.substring(0, 3)}</span>\r\n      </div>\r\n      <div className={styles.dayRows} style={rowStyle}>\r\n        <CurrentTimeIndicator style={props.currentTimeIndicatorStyle} />\r\n\r\n        {props.dayLessonRows.map((dayLessonRow, i) => (\r\n          <TimetableRow\r\n            key={i}\r\n            startingIndex={startingIndex}\r\n            endingIndex={endingIndex}\r\n            verticalMode={verticalMode}\r\n            showTitle={props.showTitle}\r\n            lessons={dayLessonRow}\r\n            onModifyCell={props.onModifyCell}\r\n            hoverLesson={props.hoverLesson}\r\n            onCellHover={props.onCellHover}\r\n          />\r\n        ))}\r\n\r\n        {highlightPeriod && (\r\n          <TimetableHighlight\r\n            style={calculateLessonStyle(highlightPeriod, startingIndex, endingIndex, verticalMode)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {props.isCurrentDay && <div className={classnames('no-export', styles.currentDay)} />}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TimetableDay;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"day\":\"Q75uDaQ4\",\"dayName\":\"raYe_qlX\",\"dayNameScrolled\":\"_QHfVVcF\",\"dayNameText\":\"AgEbS_1q\",\"dayRows\":\"lbOlYarM\",\"currentDay\":\"mSnlkKrp\"};","import * as React from 'react';\r\nimport { flattenDeep, noop, values } from 'lodash';\r\nimport classnames from 'classnames';\r\n\r\nimport { ColoredLesson, HoverLesson, TimetableArrangement } from 'types/timetables';\r\nimport { OnModifyCell } from 'types/views';\r\n\r\nimport {\r\n  calculateBorderTimings,\r\n  getCurrentHours,\r\n  getCurrentMinutes,\r\n  getDayIndex,\r\n  SCHOOLDAYS,\r\n} from 'utils/timify';\r\nimport elements from 'views/elements';\r\nimport withTimer, { TimerData } from 'views/hocs/withTimer';\r\n\r\nimport { TimePeriod } from 'types/venues';\r\nimport styles from './Timetable.scss';\r\nimport TimetableTimings from './TimetableTimings';\r\nimport TimetableDay from './TimetableDay';\r\n\r\ntype Props = TimerData & {\r\n  lessons: TimetableArrangement;\r\n  // These should be non-optional, but because HOCs currently strip defaultProps\r\n  // for the sake of our sanity we type these as optional to reduce errors at call sites\r\n  isVerticalOrientation?: boolean;\r\n  isScrolledHorizontally?: boolean;\r\n  showTitle?: boolean;\r\n  onModifyCell?: OnModifyCell;\r\n  highlightPeriod?: TimePeriod;\r\n};\r\n\r\ntype State = {\r\n  hoverLesson: HoverLesson | null;\r\n};\r\n\r\nconst nullCurrentTimeIndicatorStyle: React.CSSProperties = {\r\n  opacity: 0,\r\n};\r\n\r\nconst EMPTY_ROW_LESSONS = [[]];\r\n\r\nclass Timetable extends React.PureComponent<Props, State> {\r\n  static defaultProps = {\r\n    isVerticalOrientation: false,\r\n    isScrolledHorizontally: false,\r\n    showTitle: false,\r\n    onModifyCell: noop,\r\n  };\r\n\r\n  override state = {\r\n    hoverLesson: null,\r\n  };\r\n\r\n  onCellHover = (hoverLesson: HoverLesson | null) => {\r\n    this.setState({ hoverLesson });\r\n  };\r\n\r\n  override render() {\r\n    const { highlightPeriod } = this.props;\r\n\r\n    const schoolDays = SCHOOLDAYS.filter(\r\n      (day) => day !== 'Saturday' || this.props.lessons.Saturday,\r\n    );\r\n\r\n    const lessons = flattenDeep<ColoredLesson>(values(this.props.lessons));\r\n    const { startingIndex, endingIndex } = calculateBorderTimings(lessons, highlightPeriod);\r\n    const currentDayIndex = getDayIndex(); // Monday = 0, Friday = 4\r\n\r\n    // Calculate the margin offset for the CurrentTimeIndicator\r\n    const columns = endingIndex - startingIndex;\r\n    const currentHours = getCurrentHours();\r\n    const currentMinutes = getCurrentMinutes();\r\n    const hoursMarginOffset = ((currentHours * 2 - startingIndex) / columns) * 100;\r\n    const minutesMarginOffset = (currentMinutes / 30 / columns) * 100;\r\n    const currentTimeIndicatorVisible =\r\n      currentHours * 2 >= startingIndex && currentHours * 2 < endingIndex;\r\n    const dirStyle = this.props.isVerticalOrientation ? 'top' : 'marginLeft';\r\n    const currentTimeIndicatorStyle: React.CSSProperties = {\r\n      [dirStyle]: `${hoursMarginOffset + minutesMarginOffset}%`,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className={classnames(styles.container, elements.timetable)}>\r\n          <TimetableTimings startingIndex={startingIndex} endingIndex={endingIndex} />\r\n          <ol className={styles.days}>\r\n            {schoolDays.map((day, index) => (\r\n              <TimetableDay\r\n                key={day}\r\n                day={day}\r\n                startingIndex={startingIndex}\r\n                endingIndex={endingIndex}\r\n                onModifyCell={this.props.onModifyCell}\r\n                hoverLesson={this.state.hoverLesson}\r\n                onCellHover={this.onCellHover}\r\n                verticalMode={this.props.isVerticalOrientation || false}\r\n                showTitle={this.props.showTitle || false}\r\n                isScrolledHorizontally={this.props.isScrolledHorizontally || false}\r\n                dayLessonRows={this.props.lessons[day] || EMPTY_ROW_LESSONS}\r\n                isCurrentDay={index === currentDayIndex}\r\n                currentTimeIndicatorStyle={\r\n                  index === currentDayIndex && currentTimeIndicatorVisible\r\n                    ? currentTimeIndicatorStyle\r\n                    : nullCurrentTimeIndicatorStyle\r\n                }\r\n                highlightPeriod={\r\n                  highlightPeriod && index === highlightPeriod.day ? highlightPeriod : undefined\r\n                }\r\n              />\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTimer(Timetable);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"XiksrxMf\",\"days\":\"Mslxbzfs list-unstyled\"};","import * as React from 'react';\r\nimport { XSquare } from 'react-feather';\r\n\r\nimport Modal from 'views/components/Modal';\r\nimport CloseButton from 'views/components/CloseButton';\r\n\r\nimport styles from './ShareTimetable.scss';\r\n\r\ntype Props = {\r\n  resetTimetable: () => void;\r\n};\r\n\r\ntype State = {\r\n  isOpen: boolean;\r\n};\r\n\r\nexport default class ResetTimetable extends React.PureComponent<Props, State> {\r\n  override state: State = {\r\n    isOpen: false,\r\n  };\r\n\r\n  openModal = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeModal = () =>\r\n    this.setState({\r\n      isOpen: false,\r\n    });\r\n\r\n  override render() {\r\n    const { isOpen } = this.state;\r\n    const resetTimetable = () => {\r\n      this.props.resetTimetable();\r\n      this.closeModal();\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <button type=\"button\" className=\"btn btn-outline-primary btn-svg\" onClick={this.openModal}>\r\n          <XSquare className=\"svg svg-small\" />\r\n          Reset\r\n        </button>\r\n\r\n        <Modal isOpen={isOpen} onRequestClose={this.closeModal} animate>\r\n          <CloseButton absolutePositioned onClick={this.closeModal} />\r\n          <div className={styles.header}>\r\n            <XSquare />\r\n\r\n            <h3>Do you want to reset your timetable?</h3>\r\n            <p>\r\n              This will permanently remove all courses that are in the timetable for the current\r\n              semester.\r\n            </p>\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-block\"\r\n            onClick={() => resetTimetable()}\r\n          >\r\n            Reset\r\n          </button>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"w0mGPsgc\",\"linkInputGroup\":\"JaW3hli9\",\"copyIcon\":\"Htw02kcT\",\"copyStatus\":\"f6j1pPKU\",\"shareHeading\":\"z7HCsgzD\",\"qrCode\":\"zlV_G12k\"};","// extracted by mini-css-extract-plugin\nexport default {\"sidebarIcon\":\"AOhOKmFE svg svg-small\",\"titleIcon\":\"T4M9cA1T svg svg-small\",\"titleBtn\":\"GQNHmbMv\",\"buttonGroup\":\"brnlgCLF\"};","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Calendar, Grid, Sidebar, Type } from 'react-feather';\r\nimport { toggleTimetableOrientation, toggleTitleDisplay } from 'actions/theme';\r\nimport { ModuleCode, Semester } from 'types/modules';\r\nimport { SemTimetableConfig } from 'types/timetables';\r\n\r\nimport elements from 'views/elements';\r\nimport config from 'config';\r\nimport ResetTimetable from './ResetTimetable';\r\nimport ShareTimetable from './ShareTimetable';\r\n\r\nimport styles from './TimetableActions.scss';\r\n\r\ntype Props = {\r\n  semester: Semester;\r\n  timetable: SemTimetableConfig;\r\n\r\n  isVerticalOrientation: boolean;\r\n  toggleTimetableOrientation: () => void;\r\n\r\n  showTitle: boolean;\r\n  toggleTitleDisplay: () => void;\r\n\r\n  showExamCalendar: boolean;\r\n  toggleExamCalendar: () => void;\r\n\r\n  hiddenModules: ModuleCode[];\r\n\r\n  resetTimetable: () => void;\r\n};\r\n\r\nconst TimetableActions: React.FC<Props> = (props) => (\r\n  <div\r\n    className=\"btn-toolbar justify-content-between\"\r\n    role=\"toolbar\"\r\n    aria-label=\"Timetable utilities\"\r\n  >\r\n    <div className={styles.buttonGroup} role=\"group\" aria-label=\"Timetable manipulation\">\r\n      <button\r\n        type=\"button\"\r\n        className={classnames('btn btn-outline-primary btn-svg')}\r\n        onClick={props.toggleTimetableOrientation}\r\n        disabled={props.showExamCalendar}\r\n      >\r\n        <Sidebar className={styles.sidebarIcon} />\r\n        {props.isVerticalOrientation ? 'Horizontal Mode' : 'Vertical Mode'}\r\n      </button>\r\n\r\n      {!props.isVerticalOrientation && (\r\n        <button\r\n          type=\"button\"\r\n          className={classnames(styles.titleBtn, 'btn-outline-primary btn btn-svg')}\r\n          onClick={props.toggleTitleDisplay}\r\n          disabled={props.showExamCalendar}\r\n        >\r\n          <Type className={styles.titleIcon} />\r\n          {props.showTitle ? 'Hide Titles' : 'Show Titles'}\r\n        </button>\r\n      )}\r\n\r\n    </div>\r\n\r\n    <div className={styles.buttonGroup} role=\"group\" aria-label=\"Timetable exporting\">\r\n      <ResetTimetable resetTimetable={props.resetTimetable} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default connect(null, {\r\n  toggleTimetableOrientation,\r\n  toggleTitleDisplay,\r\n})(TimetableActions);\r\n","import { memo } from 'react';\r\nimport classnames from 'classnames';\r\nimport Downshift, { ChildrenFunction } from 'downshift';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorIndex } from 'types/timetables';\r\n\r\nimport { NUM_DIFFERENT_COLORS } from 'utils/colors';\r\nimport styles from './ColorPicker.scss';\r\n\r\ntype Props = {\r\n  label: string;\r\n  color: ColorIndex;\r\n  isHidden: boolean;\r\n  onChooseColor: (colorIndex: ColorIndex) => void;\r\n};\r\n\r\n/**\r\n * ColorPicker presentational component\r\n *\r\n * For use in places like changing module colors\r\n */\r\nconst ColorPicker = memo<Props>((props) => {\r\n  const renderColorPicker: ChildrenFunction<ColorIndex> = ({\r\n    getToggleButtonProps,\r\n    getItemProps,\r\n    getMenuProps,\r\n    isOpen,\r\n  }) => {\r\n    const { label, color, isHidden } = props;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <button\r\n          type=\"button\"\r\n          {...getToggleButtonProps({\r\n            title: label,\r\n          })}\r\n          className={classnames('btn btn-block hoverable', `color-${color}`, styles.moduleColor, {\r\n            [styles.hidden]: isHidden,\r\n          })}\r\n        />\r\n        <div\r\n          className={classnames(styles.palette, { [styles.isClosed]: !isOpen })}\r\n          {...getMenuProps()}\r\n        >\r\n          {_.range(NUM_DIFFERENT_COLORS).map((index: ColorIndex) => (\r\n            <button\r\n              type=\"button\"\r\n              {...getItemProps({ item: index })}\r\n              key={index}\r\n              className={classnames(styles.option, `color-${index}`, {\r\n                [styles.selected]: index === color,\r\n              })}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Downshift onChange={(colorIndex) => colorIndex !== null && props.onChooseColor(colorIndex)}>\r\n      {renderColorPicker}\r\n    </Downshift>\r\n  );\r\n});\r\n\r\nexport default ColorPicker;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ICpXWLLQ\",\"moduleColor\":\"cXZGqvSO\",\"hidden\":\"Yy7LTuYz\",\"palette\":\"NKZzmMp3\",\"isClosed\":\"MVNm0Yl3\",\"option\":\"TJn9WnQH btn\",\"selected\":\"xFIKmKDY\"};","// extracted by mini-css-extract-plugin\nexport default {\"modulesTable\":\"vCr3sSgf\",\"modulesTableRow\":\"raarVSAk\",\"moduleColor\":\"Jp8DTnWi\",\"moduleInfo\":\"uU1EJb4n\",\"tombstone\":\"EYwpBndR\",\"moduleActionButtons\":\"Aldw9Oeu\",\"moduleAction\":\"bL0PMrEl\",\"moduleExam\":\"jKwlrAls\",\"actionIcon\":\"as0mEfxL svg-small\",\"footer\":\"ubiQFKio\",\"moduleOrder\":\"Qm2aWsgT\"};","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { undo } from 'actions/undoHistory';\r\nimport { Module } from 'types/modules';\r\nimport styles from './TimetableModulesTable.scss';\r\n\r\nexport type Props = {\r\n  module: Module;\r\n  undo: () => void;\r\n  resetTombstone: () => void;\r\n};\r\n\r\nconst ModuleTombstone: React.FC<Props> = (props) => (\r\n  <div className={classnames(styles.moduleInfo, styles.tombstone)}>\r\n    <span>{props.module.moduleCode} removed</span>\r\n\r\n    <div className={styles.moduleActionButtons}>\r\n      <button\r\n        type=\"button\"\r\n        className={classnames('btn btn-sm btn-link', styles.moduleAction)}\r\n        onClick={props.resetTombstone}\r\n      >\r\n        Dismiss\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={classnames('btn btn-sm btn-link', styles.moduleAction)}\r\n        onClick={() => {\r\n          props.undo();\r\n          props.resetTombstone();\r\n        }}\r\n      >\r\n        Undo\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport { ModuleTombstone as DisconnectedModuleTombstone };\r\n\r\nexport default connect(null, { undo })(ModuleTombstone);\r\n","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport { map, sumBy } from 'lodash';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ModuleTableOrder } from 'types/reducers';\r\nimport { Module, Semester } from 'types/modules';\r\nimport { State } from 'types/state';\r\n\r\nimport { setModuleTableOrder } from 'actions/settings';\r\nimport { getExamDate, renderMCs } from 'utils/modules';\r\nimport config from 'config';\r\nimport styles from './TimetableModulesTable.scss';\r\n\r\ntype ModuleOrder = {\r\n  label: string;\r\n  orderBy: (module: Module, semester: Semester) => string | number;\r\n};\r\n\r\nexport const moduleOrders: { [moduleTableOrder: string]: ModuleOrder } = {\r\n  exam: {\r\n    label: 'Exam Date',\r\n    orderBy: (module: Module, semester: Semester) => getExamDate(module, semester) || '',\r\n  },\r\n  mc: { label: 'Course Credits', orderBy: (module: Module) => parseFloat(module.moduleCredit) },\r\n  code: { label: 'Course Code', orderBy: (module: Module) => module.moduleCode },\r\n};\r\n\r\ntype Props = {\r\n  semester: Semester;\r\n  moduleTableOrder: ModuleTableOrder;\r\n  modules: Module[];\r\n  hiddenInTimetable: string[];\r\n\r\n  setModuleTableOrder: (moduleTableOrder: ModuleTableOrder) => void;\r\n};\r\n\r\nconst ModulesTableFooter: React.FC<Props> = (props) => {\r\n  const totalMCs = sumBy(props.modules, (module) => parseFloat(module.moduleCredit));\r\n  const shownMCs = sumBy(\r\n    props.modules.filter((module) => !props.hiddenInTimetable.includes(module.moduleCode)),\r\n    (module) => parseFloat(module.moduleCredit),\r\n  );\r\n\r\n  return (\r\n    <div className={classnames(styles.footer, 'row align-items-center')}>\r\n      <div className=\"col-12\">\r\n        {!config.examAvailabilitySet.has(props.semester) && (\r\n          <div className=\"alert alert-warning\">\r\n            Exam dates are not available for this semester yet. Course combinations may not be\r\n            available due to conflicting exams.\r\n          </div>\r\n        )}\r\n        <hr />\r\n      </div>\r\n      <div className=\"col\">\r\n        {shownMCs !== totalMCs && (\r\n          <div>\r\n            Active Units: <strong>{renderMCs(shownMCs)}</strong>\r\n          </div>\r\n        )}\r\n        <div>\r\n          Total Units: <strong>{renderMCs(totalMCs)}</strong>\r\n        </div>\r\n      </div>\r\n      <div className={classnames(styles.moduleOrder, 'col no-export')}>\r\n        <label htmlFor=\"moduleOrder\">Order</label>\r\n        <select\r\n          onChange={(evt) => props.setModuleTableOrder(evt.target.value as ModuleTableOrder)}\r\n          className={classnames(styles.moduleOrder, 'form-control form-control-sm')}\r\n          value={props.moduleTableOrder}\r\n          id=\"moduleOrder\"\r\n        >\r\n          {map(moduleOrders, ({ label }, key) => (\r\n            <option key={key} value={key}>\r\n              {label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect((state: State) => ({ moduleTableOrder: state.settings.moduleTableOrder }), {\r\n  setModuleTableOrder,\r\n})(ModulesTableFooter);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { sortBy } from 'lodash';\r\nimport produce from 'immer';\r\n\r\nimport { Eye, EyeOff, Trash } from 'react-feather';\r\nimport { ModuleWithColor, TombstoneModule } from 'types/views';\r\nimport { ColorIndex } from 'types/timetables';\r\nimport { ModuleCode, Semester } from 'types/modules';\r\nimport { State as StoreState } from 'types/state';\r\nimport { ModuleTableOrder } from 'types/reducers';\r\n\r\nimport ColorPicker from 'views/components/ColorPicker';\r\nimport {\r\n  hideLessonInTimetable,\r\n  selectModuleColor,\r\n  showLessonInTimetable,\r\n} from 'actions/timetables';\r\nimport { getExamDate, getFormattedExamDate, renderMCs } from 'utils/modules';\r\nimport { intersperse } from 'utils/array';\r\nimport { BULLET_NBSP } from 'utils/react';\r\nimport { modulePage } from 'views/routes/paths';\r\nimport elements from 'views/elements';\r\nimport Tooltip from 'views/components/Tooltip';\r\nimport config from 'config';\r\n\r\nimport styles from './TimetableModulesTable.scss';\r\nimport ModuleTombstone from './ModuleTombstone';\r\nimport { moduleOrders } from './ModulesTableFooter';\r\n\r\nexport type Props = {\r\n  semester: Semester;\r\n  readOnly: boolean;\r\n  horizontalOrientation: boolean;\r\n  moduleTableOrder: ModuleTableOrder;\r\n  modules: ModuleWithColor[];\r\n  tombstone: TombstoneModule | null; // Placeholder for a deleted module\r\n\r\n  // Actions\r\n  selectModuleColor: (semester: Semester, moduleCode: ModuleCode, colorIndex: ColorIndex) => void;\r\n  hideLessonInTimetable: (semester: Semester, moduleCode: ModuleCode) => void;\r\n  showLessonInTimetable: (semester: Semester, moduleCode: ModuleCode) => void;\r\n  onRemoveModule: (moduleCode: ModuleCode) => void;\r\n  resetTombstone: () => void;\r\n};\r\n\r\nexport const TimetableModulesTableComponent: React.FC<Props> = (props) => {\r\n  const renderModuleActions = (module: ModuleWithColor) => {\r\n    const hideBtnLabel = `${module.hiddenInTimetable ? 'Show' : 'Hide'} ${module.moduleCode}`;\r\n    const removeBtnLabel = `Remove ${module.moduleCode} from timetable`;\r\n    const { semester } = props;\r\n\r\n    return (\r\n      <div className={styles.moduleActionButtons}>\r\n        <div className=\"btn-group\">\r\n          <Tooltip content={removeBtnLabel} touch=\"hold\">\r\n            <button\r\n              type=\"button\"\r\n              className={classnames('btn btn-outline-secondary btn-svg', styles.moduleAction)}\r\n              aria-label={removeBtnLabel}\r\n              onClick={() => props.onRemoveModule(module.moduleCode)}\r\n            >\r\n              <Trash className={styles.actionIcon} />\r\n            </button>\r\n          </Tooltip>\r\n          <Tooltip content={hideBtnLabel} touch=\"hold\">\r\n            <button\r\n              type=\"button\"\r\n              className={classnames('btn btn-outline-secondary btn-svg', styles.moduleAction)}\r\n              aria-label={hideBtnLabel}\r\n              onClick={() => {\r\n                if (module.hiddenInTimetable) {\r\n                  props.showLessonInTimetable(semester, module.moduleCode);\r\n                } else {\r\n                  props.hideLessonInTimetable(semester, module.moduleCode);\r\n                }\r\n              }}\r\n            >\r\n              {module.hiddenInTimetable ? (\r\n                <Eye className={styles.actionIcon} />\r\n              ) : (\r\n                <EyeOff className={styles.actionIcon} />\r\n              )}\r\n            </button>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderModule = (module: ModuleWithColor) => {\r\n    const { semester, readOnly, tombstone, resetTombstone } = props;\r\n\r\n    if (tombstone && tombstone.moduleCode === module.moduleCode) {\r\n      return <ModuleTombstone module={module} resetTombstone={resetTombstone} />;\r\n    }\r\n\r\n    // Second row of text consists of the exam date and the MCs\r\n    const secondRowText = [renderMCs(module.moduleCredit)];\r\n    if (config.examAvailabilitySet.has(semester)) {\r\n      secondRowText.unshift(\r\n        getExamDate(module, semester)\r\n          ? `Exam: ${getFormattedExamDate(module, semester)}`\r\n          : 'No Exam',\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.moduleColor}>\r\n          <ColorPicker\r\n            label={`Change ${module.moduleCode} timetable color`}\r\n            color={module.colorIndex}\r\n            isHidden={module.hiddenInTimetable}\r\n            onChooseColor={(colorIndex: ColorIndex) => {\r\n              props.selectModuleColor(semester, module.moduleCode, colorIndex);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={styles.moduleInfo}>\r\n          {!readOnly && renderModuleActions(module)}\r\n          <a href={`https://nusmods.com` + modulePage(module.moduleCode, module.title)} target='_blank'>\r\n            {module.moduleCode} {module.title}\r\n          </a>\r\n          <div className={styles.moduleExam}>{intersperse(secondRowText, BULLET_NBSP)}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const { semester, tombstone, horizontalOrientation, moduleTableOrder } = props;\r\n  let { modules } = props;\r\n\r\n  // tombstone contains the data for the last deleted module. We insert it back\r\n  // so that it gets sorted into its original location, then in renderModule()\r\n  // takes care of rendering the tombstone\r\n  if (tombstone && !modules.some((module) => module.moduleCode === tombstone.moduleCode)) {\r\n    modules = produce(modules, (draft: ModuleWithColor[]) => {\r\n      draft.splice(tombstone.index, 0, tombstone);\r\n    });\r\n  }\r\n  modules = sortBy(modules, (module) => moduleOrders[moduleTableOrder].orderBy(module, semester));\r\n\r\n  return (\r\n    <div className={classnames(styles.modulesTable, elements.moduleTable, 'row')}>\r\n      {modules.map((module) => (\r\n        <div\r\n          className={classnames(\r\n            styles.modulesTableRow,\r\n            'col-sm-6',\r\n            horizontalOrientation ? 'col-lg-4' : 'col-md-12',\r\n          )}\r\n          key={module.moduleCode}\r\n        >\r\n          {renderModule(module)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state: StoreState) => ({ moduleTableOrder: state.settings.moduleTableOrder }),\r\n  {\r\n    selectModuleColor,\r\n    hideLessonInTimetable,\r\n    showLessonInTimetable,\r\n  },\r\n)(React.memo(TimetableModulesTableComponent));\r\n","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMapping, HORIZONTAL, ModulesMap, TimetableOrientation } from 'types/reducers';\r\nimport { Module, ModuleCode, LessonType, Semester } from 'types/modules';\r\nimport {\r\n  ColoredLesson,\r\n  Lesson,\r\n  EditingLesson,\r\n  ModifiableLesson,\r\n  SemTimetableConfig,\r\n  SemTimetableConfigWithLessons,\r\n  SemTimetableMultiConfig,\r\n  TimetableArrangement,\r\n} from 'types/timetables';\r\n\r\nimport {\r\n  addModule,\r\n  cancelModifyLesson,\r\n  cancelEditLesson,\r\n  changeLesson,\r\n  HIDDEN_IMPORTED_SEM,\r\n  modifyLesson,\r\n  editLesson,\r\n  toggleSelectLesson,\r\n  removeModule,\r\n  resetTimetable,\r\n} from 'actions/timetables';\r\nimport {\r\n  areLessonsSameClass,\r\n  areLessonsSelected,\r\n  formatExamDate,\r\n  getExamDate,\r\n  getModuleTimetable,\r\n} from 'utils/modules';\r\nimport {\r\n  areOtherClassesAvailable,\r\n  arrangeLessonsForWeek,\r\n  findExamClashes,\r\n  getLessonIdentifier,\r\n  getSemesterModules,\r\n  hydrateSemTimetableWithLessons,\r\n  hydrateSemTimetableWithMultiLessons,\r\n  lessonsForLessonType,\r\n  timetableLessonsArray,\r\n} from 'utils/timetables';\r\nimport { resetScrollPosition } from 'utils/react';\r\nimport ModulesSelectContainer from 'views/timetable/ModulesSelectContainer';\r\nimport Announcements from 'views/components/notfications/Announcements';\r\nimport Title from 'views/components/Title';\r\nimport ErrorBoundary from 'views/errors/ErrorBoundary';\r\nimport ModRegNotification from 'views/components/notfications/ModRegNotification';\r\nimport { State as StoreState } from 'types/state';\r\nimport { TombstoneModule } from 'types/views';\r\nimport Timetable from './Timetable';\r\nimport TimetableActions from './TimetableActions';\r\nimport TimetableModulesTable from './TimetableModulesTable';\r\nimport ModulesTableFooter from './ModulesTableFooter';\r\nimport styles from './TimetableContent.scss';\r\n\r\ntype ModifiedCell = {\r\n  className: string;\r\n  position: ClientRect;\r\n};\r\n\r\ntype OwnProps = {\r\n  // Own props\r\n  readOnly: boolean;\r\n  header: React.ReactNode;\r\n  semester: Semester;\r\n  timetable: SemTimetableConfig;\r\n  colors: ColorMapping;\r\n};\r\n\r\ntype Props = OwnProps & {\r\n  // From Redux\r\n  timetableWithLessons: SemTimetableConfigWithLessons;\r\n  selectedLessons: SemTimetableMultiConfig;\r\n  modules: ModulesMap;\r\n  activeLesson: Lesson | null;\r\n  editingLesson: EditingLesson | null;\r\n  timetableOrientation: TimetableOrientation;\r\n  showTitle: boolean;\r\n  hiddenInTimetable: ModuleCode[];\r\n\r\n  // Actions\r\n  addModule: (semester: Semester, moduleCode: ModuleCode) => void;\r\n  removeModule: (semester: Semester, moduleCode: ModuleCode) => void;\r\n  resetTimetable: (semester: Semester) => void;\r\n  modifyLesson: (lesson: Lesson) => void;\r\n  editLesson: (lesson: Lesson) => void;\r\n  toggleSelectLesson: (semester:Semester, lesson: Lesson) => void;\r\n  changeLesson: (semester: Semester, lesson: Lesson) => void;\r\n  cancelModifyLesson: () => void;\r\n  cancelEditLesson: () => void;\r\n};\r\n\r\ntype State = {\r\n  isScrolledHorizontally: boolean;\r\n  showExamCalendar: boolean;\r\n  tombstone: TombstoneModule | null;\r\n};\r\n\r\n/**\r\n * When a module is modified, we want to ensure the selected timetable cell\r\n * is in approximately the same location when all of the new options are rendered.\r\n * This is important for modules with a lot of options which can push the selected\r\n * option off screen and disorientate the user.\r\n */\r\nfunction maintainScrollPosition(container: HTMLElement, modifiedCell: ModifiedCell) {\r\n  const newCell = container.getElementsByClassName(modifiedCell.className)[0];\r\n  if (!newCell) return;\r\n\r\n  const previousPosition = modifiedCell.position;\r\n  const currentPosition = newCell.getBoundingClientRect();\r\n\r\n  // We try to ensure the cell is in the same position on screen, so we calculate\r\n  // the new position by taking the difference between the two positions and\r\n  // adding it to the scroll position of the scroll container, which is the\r\n  // window for the y axis and the timetable container for the x axis\r\n  const x = currentPosition.left - previousPosition.left + window.scrollX;\r\n  const y = currentPosition.top - previousPosition.top + window.scrollY;\r\n\r\n  window.scroll(0, y);\r\n  container.scrollLeft = x; // eslint-disable-line no-param-reassign\r\n}\r\n\r\nclass TimetableContent extends React.Component<Props, State> {\r\n  override state: State = {\r\n    isScrolledHorizontally: false,\r\n    showExamCalendar: false,\r\n    tombstone: null,\r\n  };\r\n\r\n  timetableRef = React.createRef<HTMLDivElement>();\r\n\r\n  modifiedCell: ModifiedCell | null = null;\r\n\r\n  override componentDidUpdate() {\r\n    if (this.modifiedCell && this.timetableRef.current) {\r\n      maintainScrollPosition(this.timetableRef.current, this.modifiedCell);\r\n\r\n      this.modifiedCell = null;\r\n    }\r\n  }\r\n\r\n  override componentWillUnmount() {\r\n    this.cancelModifyLesson();\r\n  }\r\n\r\n  onScroll: React.UIEventHandler = (e) => {\r\n    // Only trigger when there is an active lesson\r\n    const isScrolledHorizontally =\r\n      !!this.props.activeLesson && e.currentTarget && e.currentTarget.scrollLeft > 0;\r\n    if (this.state.isScrolledHorizontally !== isScrolledHorizontally) {\r\n      this.setState({ isScrolledHorizontally });\r\n    }\r\n  };\r\n\r\n  cancelEditLesson = () => {\r\n    if (this.props.editingLesson) {\r\n      this.props.cancelEditLesson();\r\n\r\n      // resetScrollPosition();\r\n    }\r\n  };\r\n\r\n  cancelModifyLesson = () => {\r\n    if (this.props.activeLesson) {\r\n      this.props.cancelModifyLesson();\r\n\r\n      resetScrollPosition();\r\n    }\r\n  };\r\n\r\n  isHiddenInTimetable = (moduleCode: ModuleCode) =>\r\n    this.props.hiddenInTimetable.includes(moduleCode);\r\n\r\n  modifyCell = (lesson: ModifiableLesson, position: ClientRect) => {\r\n\r\n    if (lesson.isActive) {\r\n      this.props.toggleSelectLesson(this.props.semester, lesson);\r\n    } else {\r\n      // Enter edit mode for the module and lesson type\r\n      this.props.editLesson(lesson);\r\n\r\n      this.modifiedCell = {\r\n        position,\r\n        className: getLessonIdentifier(lesson),\r\n      };\r\n    }\r\n  };\r\n\r\n  addModule = (semester: Semester, moduleCode: ModuleCode) => {\r\n    this.props.addModule(semester, moduleCode);\r\n    this.resetTombstone();\r\n  };\r\n\r\n  removeModule = (moduleCodeToRemove: ModuleCode) => {\r\n    // Save the index of the module before removal so the tombstone can be inserted into\r\n    // the correct position\r\n    const index = this.addedModules().findIndex(\r\n      ({ moduleCode }) => moduleCode === moduleCodeToRemove,\r\n    );\r\n    this.props.removeModule(this.props.semester, moduleCodeToRemove);\r\n    const moduleWithColor = this.toModuleWithColor(this.addedModules()[index]);\r\n\r\n    // A tombstone is displayed in place of a deleted module\r\n    this.setState({ tombstone: { ...moduleWithColor, index } });\r\n  };\r\n\r\n  resetTimetable = () => {\r\n    this.props.resetTimetable(this.props.semester);\r\n  };\r\n\r\n  resetTombstone = () => this.setState({ tombstone: null });\r\n\r\n  // Returns modules currently in the timetable\r\n  addedModules(): Module[] {\r\n    const modules = getSemesterModules(this.props.timetableWithLessons, this.props.modules);\r\n    return _.sortBy(modules, (module: Module) => getExamDate(module, this.props.semester));\r\n  }\r\n\r\n  toModuleWithColor = (module: Module) => ({\r\n    ...module,\r\n    colorIndex: this.props.colors[module.moduleCode],\r\n    hiddenInTimetable: this.isHiddenInTimetable(module.moduleCode),\r\n  });\r\n\r\n  renderModuleTable = (\r\n    modules: Module[],\r\n    horizontalOrientation: boolean,\r\n    tombstone: TombstoneModule | null = null,\r\n  ) => (\r\n    <TimetableModulesTable\r\n      modules={modules.map(this.toModuleWithColor)}\r\n      horizontalOrientation={horizontalOrientation}\r\n      semester={this.props.semester}\r\n      onRemoveModule={this.removeModule}\r\n      readOnly={this.props.readOnly}\r\n      tombstone={tombstone}\r\n      resetTombstone={this.resetTombstone}\r\n    />\r\n  );\r\n\r\n  // Returns component with table(s) of modules\r\n  renderModuleSections(modules: Module[], horizontalOrientation: boolean) {\r\n    const { tombstone } = this.state;\r\n\r\n    // Separate added modules into sections of clashing modules\r\n    const clashes = findExamClashes(modules, this.props.semester);\r\n    const nonClashingMods: Module[] = _.difference(modules, _.flatten(_.values(clashes)));\r\n\r\n    if (_.isEmpty(clashes) && _.isEmpty(nonClashingMods) && !tombstone) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <p className=\"text-sm-center\">No courses added.</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {!_.isEmpty(clashes) && (\r\n          <>\r\n            <div className=\"alert alert-danger\">\r\n              Warning! There are clashes in your exam timetable.\r\n            </div>\r\n            {Object.keys(clashes)\r\n              .sort()\r\n              .map((clashDate) => (\r\n                <div key={clashDate}>\r\n                  <p>\r\n                    Clash on <strong>{formatExamDate(clashDate)}</strong>\r\n                  </p>\r\n                  {this.renderModuleTable(clashes[clashDate], horizontalOrientation)}\r\n                </div>\r\n              ))}\r\n            <hr />\r\n          </>\r\n        )}\r\n        {this.renderModuleTable(nonClashingMods, horizontalOrientation, tombstone)}\r\n      </>\r\n    );\r\n  }\r\n\r\n  override render() {\r\n    const {\r\n      semester,\r\n      modules,\r\n      colors,\r\n      activeLesson,\r\n      editingLesson,\r\n      selectedLessons,\r\n      timetableOrientation,\r\n      showTitle,\r\n      readOnly,\r\n      hiddenInTimetable,\r\n    } = this.props;\r\n\r\n    const { showExamCalendar } = this.state;\r\n\r\n    const filteredTimetableWithLessons = {\r\n      ...this.props.timetableWithLessons,\r\n    };\r\n\r\n    if (editingLesson)\r\n      // Remove duplicates\r\n      filteredTimetableWithLessons[editingLesson.moduleCode][editingLesson.lessonType].length = 0;\r\n\r\n    let timetableLessons: Lesson[] = timetableLessonsArray(filteredTimetableWithLessons)\r\n      // Do not process hidden modules\r\n      .filter((lesson) => !this.isHiddenInTimetable(lesson.moduleCode));\r\n\r\n    if (editingLesson) {\r\n      const { moduleCode, lessonType } = editingLesson;\r\n      const module = modules[moduleCode];\r\n      const moduleTimetable = getModuleTimetable(module, semester);\r\n      lessonsForLessonType(moduleTimetable, lessonType).forEach((lesson) => {\r\n        const modifiableLesson: Lesson & {\r\n          isActive?: boolean;\r\n          isAvailable?: boolean;\r\n        } = {\r\n          ...lesson,\r\n          // Inject module code in\r\n          moduleCode,\r\n          title: module.title,\r\n        };\r\n\r\n        // Blink animation\r\n        modifiableLesson.isActive = true;\r\n        // Transparency\r\n        modifiableLesson.isAvailable = areLessonsSelected(modifiableLesson, selectedLessons) ? false : true;\r\n\r\n        timetableLessons.push(modifiableLesson);\r\n      });\r\n    }\r\n\r\n    // Inject color into module\r\n    const coloredTimetableLessons = timetableLessons.map(\r\n      (lesson: Lesson): ColoredLesson => ({\r\n        ...lesson,\r\n        colorIndex: colors[lesson.moduleCode],\r\n      }),\r\n    );\r\n\r\n    const arrangedLessons = arrangeLessonsForWeek(coloredTimetableLessons);\r\n    const arrangedLessonsWithModifiableFlag: TimetableArrangement = _.mapValues(\r\n      arrangedLessons,\r\n      (dayRows) =>\r\n        dayRows.map((row) =>\r\n          row.map((lesson) => {\r\n            const module: Module = modules[lesson.moduleCode];\r\n            const moduleTimetable = getModuleTimetable(module, semester);\r\n\r\n            return {\r\n              ...lesson,\r\n              isModifiable:\r\n                !readOnly && areOtherClassesAvailable(moduleTimetable, lesson.lessonType),\r\n            };\r\n          }),\r\n        ),\r\n    );\r\n\r\n    const isVerticalOrientation = timetableOrientation !== HORIZONTAL;\r\n    const isShowingTitle = !isVerticalOrientation && showTitle;\r\n    const addedModules = this.addedModules();\r\n\r\n    return (\r\n      <div\r\n        className={classnames('page-container', styles.container, {\r\n          verticalMode: isVerticalOrientation,\r\n        })}\r\n        onClick={this.cancelEditLesson}\r\n        onKeyUp={(e) => e.key === 'Escape' && this.cancelEditLesson()} // Quit modifying when Esc is pressed\r\n      >\r\n        <Title>Timetable</Title>\r\n\r\n        <Announcements />\r\n\r\n        <ErrorBoundary>\r\n          <ModRegNotification />\r\n        </ErrorBoundary>\r\n\r\n        <div>{this.props.header}</div>\r\n\r\n        <div className=\"row\">\r\n          <div\r\n            className={classnames({\r\n              'col-md-12': !isVerticalOrientation,\r\n              'col-md-8': isVerticalOrientation,\r\n            })}\r\n          >\r\n            <div\r\n              className={styles.timetableWrapper}\r\n              onScroll={this.onScroll}\r\n              ref={this.timetableRef}\r\n            >\r\n              <Timetable\r\n                lessons={arrangedLessonsWithModifiableFlag}\r\n                isVerticalOrientation={isVerticalOrientation}\r\n                isScrolledHorizontally={this.state.isScrolledHorizontally}\r\n                showTitle={isShowingTitle}\r\n                onModifyCell={this.modifyCell}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={classnames({\r\n              'col-md-12': !isVerticalOrientation,\r\n              'col-md-4': isVerticalOrientation,\r\n            })}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-12 no-export\">\r\n                <TimetableActions\r\n                  isVerticalOrientation={isVerticalOrientation}\r\n                  showTitle={isShowingTitle}\r\n                  semester={semester}\r\n                  timetable={this.props.timetable}\r\n                  showExamCalendar={showExamCalendar}\r\n                  resetTimetable={this.resetTimetable}\r\n                  toggleExamCalendar={() => this.setState({ showExamCalendar: !showExamCalendar })}\r\n                  hiddenModules={hiddenInTimetable}\r\n                />\r\n              </div>\r\n\r\n              <div className={styles.modulesSelect}>\r\n                {!readOnly && (\r\n                  <ModulesSelectContainer\r\n                    semester={semester}\r\n                    timetable={this.props.timetable}\r\n                    addModule={this.addModule}\r\n                    removeModule={this.removeModule}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"col-12\">\r\n                {this.renderModuleSections(addedModules, !isVerticalOrientation)}\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <ModulesTableFooter\r\n                  modules={addedModules}\r\n                  semester={semester}\r\n                  hiddenInTimetable={hiddenInTimetable}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: StoreState, ownProps: OwnProps) {\r\n  const { semester, timetable, readOnly } = ownProps;\r\n  const { modules } = state.moduleBank;\r\n  const { selectedLessons } = state.app;\r\n\r\n  const timetableWithLessons = hydrateSemTimetableWithMultiLessons(timetable, selectedLessons, modules, semester);\r\n\r\n  // Determine the key to check for hidden modules based on readOnly status\r\n  const hiddenModulesKey = readOnly ? HIDDEN_IMPORTED_SEM : semester;\r\n  const hiddenInTimetable = state.timetables.hidden[hiddenModulesKey] || [];\r\n\r\n  return {\r\n    semester,\r\n    timetable,\r\n    timetableWithLessons,\r\n    modules,\r\n    activeLesson: state.app.activeLesson,\r\n    editingLesson: state.app.editingLesson,\r\n    selectedLessons: state.app.selectedLessons,\r\n    timetableOrientation: state.theme.timetableOrientation,\r\n    showTitle: state.theme.showTitle,\r\n    hiddenInTimetable,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  addModule,\r\n  removeModule,\r\n  resetTimetable,\r\n  modifyLesson,\r\n  editLesson,\r\n  toggleSelectLesson,\r\n  changeLesson,\r\n  cancelModifyLesson,\r\n  cancelEditLesson,\r\n})(TimetableContent);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"vkRPJL_Q\",\"timetableWrapper\":\"ArV6IRie scrollable\",\"modulesSelect\":\"tSNnD21v col-12\",\"moduleTableFooter\":\"ZfLPtFn7\"};","import { FC, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { Repeat } from 'react-feather';\r\nimport classnames from 'classnames';\r\n\r\nimport type { ModuleCode, Semester } from 'types/modules';\r\nimport type { ColorMapping } from 'types/reducers';\r\nimport type { State } from 'types/state';\r\nimport type { SemTimetableConfig } from 'types/timetables';\r\n\r\nimport { selectSemester } from 'actions/settings';\r\nimport { getSemesterTimetableColors, getSemesterTimetableLessons } from 'selectors/timetables';\r\nimport {\r\n  fetchTimetableModules,\r\n  setHiddenModulesFromImport,\r\n  setTimetable,\r\n} from 'actions/timetables';\r\nimport { openNotification } from 'actions/app';\r\nimport { undo } from 'actions/undoHistory';\r\nimport { getModuleCondensed } from 'selectors/moduleBank';\r\nimport { deserializeHidden, deserializeTimetable } from 'utils/timetables';\r\nimport { fillColorMapping } from 'utils/colors';\r\nimport { semesterForTimetablePage, TIMETABLE_SHARE, timetablePage } from 'views/routes/paths';\r\nimport deferComponentRender from 'views/hocs/deferComponentRender';\r\nimport SemesterSwitcher from 'views/components/semester-switcher/SemesterSwitcher';\r\nimport LoadingSpinner from 'views/components/LoadingSpinner';\r\nimport useScrollToTop from 'views/hooks/useScrollToTop';\r\nimport TimetableContent from './TimetableContent';\r\n\r\nimport styles from './TimetableContainer.scss';\r\n\r\ntype Params = {\r\n  action: string;\r\n  semester: string;\r\n};\r\n\r\n/*\r\n * If there is an imported timetable, show a sharing header which asks the user\r\n * if they want to import the shared timetable.\r\n */\r\nconst SharingHeader: FC<{\r\n  semester: Semester;\r\n  filledColors: ColorMapping;\r\n  importedTimetable: SemTimetableConfig | null;\r\n  setImportedTimetable: (timetable: SemTimetableConfig | null) => void;\r\n}> = ({ semester, filledColors, importedTimetable, setImportedTimetable }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const clearImportedTimetable = useCallback(() => {\r\n    if (semester) {\r\n      setImportedTimetable(null);\r\n      history.push(timetablePage(semester)); // TODO: Check that this works\r\n    }\r\n  }, [history, semester, setImportedTimetable]);\r\n\r\n  const importTimetable = useCallback(() => {\r\n    if (!importedTimetable) {\r\n      return;\r\n    }\r\n    dispatch(setTimetable(semester, importedTimetable, filledColors));\r\n    clearImportedTimetable();\r\n    dispatch(\r\n      openNotification('Timetable imported', {\r\n        timeout: 12000,\r\n        overwritable: true,\r\n        action: {\r\n          text: 'Undo',\r\n          handler: () => dispatch(undo()) as never,\r\n        },\r\n      }),\r\n    );\r\n  }, [clearImportedTimetable, dispatch, filledColors, importedTimetable, semester]);\r\n\r\n  if (!importedTimetable) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classnames('alert', 'alert-success', styles.importAlert)}>\r\n      <Repeat />\r\n\r\n      <div className={classnames('row', styles.row)}>\r\n        <div className={classnames('col')}>\r\n          <h3>This timetable was shared with you</h3>\r\n          <p>\r\n            Clicking import will <strong>replace</strong> your saved timetable with the one below.\r\n          </p>\r\n        </div>\r\n\r\n        <div className={classnames('col-md-auto', styles.actions)}>\r\n          <button className=\"btn btn-success\" type=\"button\" onClick={importTimetable}>\r\n            Import\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-primary\"\r\n            type=\"button\"\r\n            onClick={clearImportedTimetable}\r\n          >\r\n            Back to saved timetable\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TimetableHeader: FC<{\r\n  semester: Semester;\r\n  readOnly?: boolean;\r\n}> = ({ semester, readOnly }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSelectSemester = useCallback(\r\n    (newSemester: Semester) => {\r\n      dispatch(selectSemester(newSemester));\r\n      history.push({\r\n        ...history.location,\r\n        pathname: timetablePage(newSemester),\r\n      });\r\n    },\r\n    [dispatch, history],\r\n  );\r\n\r\n  return (\r\n    <SemesterSwitcher\r\n      semester={semester}\r\n      onSelectSemester={handleSelectSemester}\r\n      readOnly={readOnly}\r\n    />\r\n  );\r\n};\r\n\r\n/**\r\n * Manages semester switching and sync/shared timetables\r\n * - Checks if the semester path param is valid and display a 404 page if it is not\r\n * - Import timetable data from query string if action is defined\r\n * - Create the UI for the user to confirm their actions\r\n */\r\nexport const TimetableContainerComponent: FC = () => {\r\n  const params = useParams<Params>();\r\n\r\n  const semester = semesterForTimetablePage(params.semester);\r\n\r\n  const timetable = useSelector(getSemesterTimetableLessons)(semester);\r\n  const colors = useSelector(getSemesterTimetableColors)(semester);\r\n  const getModule = useSelector(getModuleCondensed);\r\n  const modules = useSelector(({ moduleBank }: State) => moduleBank.modules);\r\n  const activeSemester = useSelector(({ app }: State) => app.activeSemester);\r\n\r\n  const location = useLocation();\r\n  const [importedTimetable, setImportedTimetable] = useState(() =>\r\n    semester && params.action ? deserializeTimetable(location.search) : null,\r\n  );\r\n\r\n  const importedHidden = useMemo(\r\n    () => (semester && params.action ? deserializeHidden(location.search) : []),\r\n    [semester, params.action, location.search],\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (importedTimetable) {\r\n      dispatch(fetchTimetableModules([importedTimetable]));\r\n    }\r\n  }, [dispatch, importedTimetable]);\r\n\r\n  useEffect(() => {\r\n    if (importedHidden) {\r\n      dispatch(setHiddenModulesFromImport(importedHidden));\r\n    }\r\n  }, [dispatch, importedHidden]);\r\n\r\n  const isLoading = useMemo(() => {\r\n    // Check that all modules are fully loaded into the ModuleBank\r\n    const isValidModule = (moduleCode: ModuleCode) => !!getModule(moduleCode);\r\n    const moduleCodes = new Set(Object.keys(timetable));\r\n    if (importedTimetable) {\r\n      Object.keys(importedTimetable)\r\n        .filter(isValidModule)\r\n        .forEach((moduleCode) => moduleCodes.add(moduleCode));\r\n    }\r\n    // TODO: Account for loading error\r\n    return Array.from(moduleCodes).some((moduleCode) => !modules[moduleCode]);\r\n  }, [getModule, importedTimetable, modules, timetable]);\r\n\r\n  const displayedTimetable = importedTimetable || timetable;\r\n  const filledColors = useMemo(\r\n    () => fillColorMapping(displayedTimetable, colors),\r\n    [colors, displayedTimetable],\r\n  );\r\n  const readOnly = displayedTimetable === importedTimetable;\r\n\r\n  useScrollToTop();\r\n\r\n  // 1. If the URL doesn't look correct, we'll direct the user to the home page\r\n  if (semester == null || (params.action && params.action !== TIMETABLE_SHARE)) {\r\n    return <Redirect to={timetablePage(activeSemester)} />;\r\n  }\r\n\r\n  // 2. If we are importing a timetable, check that all imported modules are\r\n  //    loaded first, and display a spinner if they're not.\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <TimetableContent\r\n      key={semester}\r\n      semester={semester}\r\n      timetable={displayedTimetable}\r\n      colors={filledColors}\r\n      header={\r\n        <>\r\n          <SharingHeader\r\n            semester={semester}\r\n            filledColors={filledColors}\r\n            importedTimetable={importedTimetable}\r\n            setImportedTimetable={setImportedTimetable}\r\n          />\r\n          <TimetableHeader semester={semester} readOnly={readOnly} />\r\n        </>\r\n      }\r\n      readOnly={readOnly}\r\n    />\r\n  );\r\n};\r\n\r\nexport default deferComponentRender(TimetableContainerComponent);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"importAlert\":\"ucsaQgX8\",\"actions\":\"asUQBPKA\",\"row\":\"oGYomFWm\"};","import * as React from 'react';\r\nimport { defer, wrapComponentName } from 'utils/react';\r\n\r\ntype State = {\r\n  shouldRender: boolean;\r\n};\r\n\r\n/**\r\n * Allows two animation frames to complete to allow other components to update\r\n * and re-render before mounting and rendering an expensive `WrappedComponent`.\r\n *\r\n * Referenced from\r\n * https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3\r\n */\r\nfunction deferComponentRender<Props>(\r\n  WrappedComponent: React.ComponentType<Props>,\r\n): React.ComponentType<Props> {\r\n  return class extends React.Component<Props, State> {\r\n    static displayName = wrapComponentName(WrappedComponent, deferComponentRender.name);\r\n\r\n    override state = {\r\n      shouldRender: false,\r\n    };\r\n\r\n    override componentDidMount() {\r\n      defer(() => this.setState({ shouldRender: true }));\r\n    }\r\n\r\n    override render() {\r\n      return this.state.shouldRender && <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n}\r\n\r\nexport default deferComponentRender;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { scrollToHash } from 'utils/react';\r\n\r\nfunction scrollToTop() {\r\n  window.scrollTo(0, 0);\r\n}\r\n\r\n/**\r\n * Scrolls to top (or hash, if a hash is present in the URL) after the first\r\n * completed render.\r\n */\r\nexport default function useScrollToTop() {\r\n  // TODO: Prevent location changes from triggering renders, as we don't care.\r\n  // We can't use window.location to support non-browser environments (e.g.\r\n  // tests).\r\n  const { hash } = useLocation();\r\n\r\n  // Intentionally *not* care after executing once.\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => (hash ? scrollToHash(hash) : scrollToTop()), []);\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\nimport RandomKawaii from 'views/components/RandomKawaii';\r\nimport Title from 'views/components/Title';\r\nimport styles from './ErrorPage.scss';\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n  Sentry.withScope(() => {\r\n    Sentry.captureMessage('404 - Page Not Found');\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Title>Page Not Found</Title>\r\n\r\n      <div className={styles.heading}>\r\n        <span className={styles.bigCharacter}>4</span>\r\n        <RandomKawaii aria-label=\"0\" title=\"0\" size={100} />\r\n        <span className={styles.bigCharacter}>4</span>\r\n      </div>\r\n\r\n      <h2>Ooops, page not found.</h2>\r\n      <p>Are you sure you are at the right page?</p>\r\n\r\n      <div className={styles.buttons}>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={() => Sentry.showReportDialog()}\r\n        >\r\n          Something should be here\r\n        </button>\r\n        <Link className=\"btn btn-primary\" to=\"/\">\r\n          Bring me home\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import * as React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport TimetableContainer from 'views/timetable/TimetableContainer';\r\nimport NotFoundPage from 'views/errors/NotFoundPage';\r\n\r\n// IMPORTANT: Remember to update any route changes on the sitemap\r\nconst Routes: React.FC = () => (\r\n  <Switch>\r\n    <Redirect exact from=\"/\" to=\"/timetable\" />\r\n    <Route path=\"/timetable/:semester?/:action?\" component={TimetableContainer} />\r\n\r\n    {/* 404 page */}\r\n    <Route component={NotFoundPage} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import { Store } from 'redux';\r\n\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Persistor } from 'storage/persistReducer';\r\nimport { State } from 'types/state';\r\n\r\nimport AppShell from 'views/AppShell';\r\nimport Routes from 'views/routes/Routes';\r\nimport { DIMENSIONS, setCustomDimensions } from 'bootstrapping/matomo';\r\nimport ErrorBoundary from 'views/errors/ErrorBoundary';\r\nimport ErrorPage from 'views/errors/ErrorPage';\r\n\r\ntype Props = {\r\n  store: Store<State>;\r\n  persistor: Persistor;\r\n};\r\n\r\nconst App: React.FC<Props> = ({ store, persistor }) => {\r\n  const onBeforeLift = () => {\r\n    const { theme, settings } = store.getState();\r\n\r\n    setCustomDimensions({\r\n      [DIMENSIONS.theme]: theme.id,\r\n      [DIMENSIONS.beta]: String(!!settings.beta),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary errorPage={() => <ErrorPage showReportDialog />}>\r\n      <Provider store={store}>\r\n        <PersistGate persistor={persistor} onBeforeLift={onBeforeLift}>\r\n          <Router>\r\n            <AppShell>\r\n              <Routes />\r\n            </AppShell>\r\n          </Router>\r\n        </PersistGate>\r\n      </Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// Import Sentry earliest to capture exceptions\r\nimport 'bootstrapping/sentry';\r\n// core-js has issues with Promise feature detection on Edge, and hence\r\n// polyfills Promise incorrectly. Importing this polyfill directly resolves that.\r\n// This is necessary as PersistGate used in ./App uses `Promise.prototype.finally`.\r\n// See: https://github.com/zloirock/core-js/issues/579#issuecomment-504325213\r\nimport 'core-js/es/promise/finally';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport configureStore from 'bootstrapping/configure-store';\r\nimport subscribeOnlineEvents from 'bootstrapping/subscribeOnlineEvents';\r\nimport { initializeMamoto } from 'bootstrapping/matomo';\r\nimport registerServiceWorker from 'bootstrapping/service-worker-manager';\r\n\r\nimport 'styles/main.scss';\r\n\r\nimport App from './App';\r\n\r\nconst { store, persistor } = configureStore();\r\n\r\nsubscribeOnlineEvents(store);\r\n\r\n// Initialize ReactModal\r\nReactModal.setAppElement('#app');\r\n\r\nReactDOM.render(<App store={store} persistor={persistor} />, document.getElementById('app'));\r\n\r\nif (\r\n  ((NUSMODS_ENV === 'preview' || NUSMODS_ENV === 'staging' || NUSMODS_ENV === 'production') &&\r\n    'serviceWorker' in navigator &&\r\n    window.location.protocol === 'https:') ||\r\n  // Allow us to force service worker to be enabled for debugging\r\n  DEBUG_SERVICE_WORKER\r\n) {\r\n  registerServiceWorker(store);\r\n}\r\n\r\nif (NUSMODS_ENV === 'production') {\r\n  initializeMamoto();\r\n}\r\n","import { Store } from 'redux';\r\nimport { setOnlineStatus } from 'actions/app';\r\n\r\nexport default function subscribeOnlineEvents(store: Store<any, any>) {\r\n  const updateOnlineStatus = () => {\r\n    store.dispatch(setOnlineStatus(navigator.onLine));\r\n  };\r\n\r\n  window.addEventListener('online', updateOnlineStatus);\r\n  window.addEventListener('offline', updateOnlineStatus);\r\n}\r\n","import * as React from 'react';\r\nimport Tippy, { TippyProps, TippySingleton, TippySingletonProps } from '@tippy.js/react';\r\nimport { animateFill } from 'tippy.js'; // eslint-disable-line import/no-extraneous-dependencies\r\n\r\nimport { isIOS } from 'bootstrapping/browser';\r\n\r\nimport 'styles/tippy/tippy.css';\r\n\r\n// To use plugins, add them to DEFAULT_PLUGINS\r\nconst DEFAULT_PLUGINS = [animateFill];\r\n\r\nexport type Props = Omit<TippyProps, 'plugins'>;\r\nconst Tooltip: React.FC<Props> = (props) => {\r\n  // Clone the props to make it extensible\r\n  const tippyProps = { plugins: DEFAULT_PLUGINS, animateFill: true, ...props };\r\n\r\n  // HACK: Emulate Android tooltip behavior (hold to show tooltip, tap to\r\n  // activate click) on iOS\r\n  if (tippyProps.touch === 'hold' && isIOS) {\r\n    tippyProps.trigger = 'focus';\r\n  }\r\n\r\n  return <Tippy {...tippyProps} />;\r\n};\r\n\r\nexport type TooltipGroupProps = Omit<TippySingletonProps, 'plugins'>;\r\nconst TooltipGroup: React.FC<TooltipGroupProps> = (props) => {\r\n  const singletonProps = {\r\n    plugins: DEFAULT_PLUGINS,\r\n    animateFill: true,\r\n    ...props,\r\n  };\r\n\r\n  return <TippySingleton {...singletonProps} />;\r\n};\r\n\r\nexport default Tooltip;\r\nexport { TooltipGroup };\r\n","// Used to share classnames with e2e tests. This allows the e2e tests to select\r\n// and assert against elements, which would be difficult to do otherwise because\r\n// we use CSS modules, which mangles the classnames.\r\n\r\nconst elements = {\r\n  // Global\r\n  timetable: 'timetable',\r\n  lessons: 'timetable-cell',\r\n\r\n  // Timetable page\r\n  addModuleInput: 'add-module-input',\r\n  moduleTable: 'module-table',\r\n  examCalendar: 'exam-calendar',\r\n  examCalendarBtn: 'exam-calendar-btn',\r\n\r\n  // Module finder\r\n  moduleFinderSearchBox: 'module-finder-input',\r\n  moduleResultItem: 'module-result-item',\r\n};\r\n\r\nmodule.exports = elements;\r\n"],"names":["config","require","NUSModsApi","baseUrl","envApiBaseUrl","academicYear","arguments","length","undefined","process","env","DATA_API_BASE_URL","apiBaseUrl","concat","replace","moduleListUrl","modulesUrl","moduleDetailsUrl","moduleCode","venueListUrl","semester","venuesUrl","facultyDepartmentsUrl","mpeModuleListUrl","module","exports","convertToCheckTree","versionMap","checkTree","Object","keys","forEach","key","setMinVersion","version","currentVersion","browserlist","minVersions","desktop","mobile","tablet","browserlistItem","browserName","versions","split","browser","platform","parseBrowser","minVersion","map","versionStr","parseFloat","Math","min","parseVersion","browserlistToBowser","browsersList","parser","Bowser","window","navigator","userAgent","isIOS","is","satisfies","chrome","API_REQUEST","requestAction","type","options","payload","Error","meta","augmentedConfig","_objectSpread","appConfig","holidays","date","Date","modRegSchedule","_mapValues","modRegData","roundData","data","start","format","end","startDate","endDate","examAvailabilitySet","Set","getSemesterKey","semesterNames","FETCH_MODULE","FETCH_MODULE_LIST","UPDATE_MODULE_TIMESTAMP","REMOVE_LRU_MODULE","getRequestModuleCode","parts","UNDO","REDO","SET_EXPORTED_DATA","MAX_MODULE_LIMIT","Internal","updateModuleTimestamp","removeLRUModule","moduleCodes","fetchModule","dispatch","getState","onFinally","moduleBank","modules","overLimitCount","_size","timetables","LRUModule","lessons","currentModule","toRemove","timetableModules","_flatMap","canRemove","filter","has","_sortBy","_get","slice","getLRUModules","fetchModuleRequest","url","then","error","SET_ONLINE_STATUS","TOGGLE_FEEDBACK_MODAL","OPEN_NOTIFICATION","openNotification","message","POP_NOTIFICATION","popNotification","notNull","x","REQUEST","SUCCESS","FAILURE","VERTICAL","HORIZONTAL","getModuleCondensed","createSelector","_ref","convertTimeToIndex","time","hour","parseInt","substring","getLessonTimeHours","minute","getLessonTimeMinutes","minuteOffset","SCHOOLDAYS","noBreak","text","wrapComponentName","Component","wrapper","displayName","name","getModuleSemesterData","semesterData","find","semData","getModuleTimetable","areLessonsSelected","lesson","selectedLessons","_selectedLessons$less","lessonType","includes","classNo","formatExamDate","examDate","localDate","getTime","getTimezoneOffset","toSingaporeTime","getExamDate","getExamDuration","renderMCs","moduleCredits","credit","intersperse","array","delimiter","item","LESSON_TYPE_ABBREV","Laboratory","Lecture","Recitation","Tutorial","Workshop","LESSON_ABBREV_TYPE","_invert","EMPTY_OBJECT","isValidSemester","areOtherClassesAvailable","lessonTypeGroups","_groupBy","getValidExamStartTimeAsEpoch","startTimeString","getValidExamEndTimeAsEpoch","duration","parseModuleConfig","serialized","_castArray","serializedModule","lessonTypeAbbr","formatNumericWeeks","unprocessedWeeks","weeks","value","index","indexOf","numbers","result","previous","element","push","deltas","every","d","processed","mergeConsecutive","_range","next","join","getHoverLesson","getLessonIdentifier","SET_TIMETABLE","ADD_MODULE","SET_HIDDEN_IMPORTED","HIDDEN_IMPORTED_SEM","setTimetable","timetable","colors","hiddenModules","addModule","moduleLessonConfig","REMOVE_MODULE","RESET_TIMETABLE","MODIFY_LESSON","EDIT_LESSON","CANCEL_EDIT_LESSON","TOGGLE_SELECT_LESSON","CHANGE_LESSON","SET_LESSON_CONFIG","CANCEL_MODIFY_LESSON","fetchTimetableModules","validateModule","Promise","all","Array","from","SELECT_MODULE_COLOR","HIDE_LESSON_IN_TIMETABLE","SHOW_LESSON_IN_TIMETABLE","persistReducer","reducer","basePersistReducer","storage","debug","NUSMODS_ENV","requests","state","action","requestStatus","status","getParams","qs","location","search","forceTimer","dateString","isArray","Number","isNaN","getUTCHours","getMinutes","getSeconds","setHours","setMinutes","setSeconds","getHours","setTime","NO_NOTIFICATIONS","getModRegRoundKey","isRoundDismissed","dismissed","Boolean","dismissedRound","_isEqual","SELECT_SEMESTER","TOGGLE_MODE","DISMISS_MODREG_NOTIFICATION","SET_MODULE_TABLE_SORT","activeSemester","activeLesson","editingLesson","isOnline","onLine","isFeedbackModalOpen","promptRefresh","refresh","notifications","_state$selectedLesson","oldLessonType","newLessonType","e","_state$selectedLesson2","oldLT","newLT","overwritable","priority","SUCCESS_KEY","FAILURE_KEY","requestMiddleware","request","axios","headers","response","responseHeaders","defaultModuleBankState","moduleList","moduleArchive","apiLastUpdatedTimestamp","precomputeFromModuleList","_zipObject","persistConfig","throttle","whitelist","migrate","createMigrate","_persist","venueList","NUM_DIFFERENT_COLORS","generateInitialColors","getNewColor","currentColors","randomize","availableColors","_sample2","_without","_sample","archive","stateReconciler","inbound","original","_reduced","console","log","defaultModuleLessonConfig","lessonConfig","DEFAULT_SEM_TIMETABLE_CONFIG","DEFAULT_SEM_COLOR_MAP","DEFAULT_HIDDEN_STATE","defaultTimetableState","hidden","CYCLE_THEME","cycleTheme","offset","TOGGLE_TIMETABLE_ORIENTATION","toggleTimetableOrientation","TOGGLE_TITLE_DISPLAY","captureException","extra","Sentry","scope","_each","_data","setExtra","queuedTasks","matomo","initialDimensions","initialViewTracked","withTracker","defaultThemeState","id","timetableOrientation","showTitle","themeIds","themes","obj","LIGHT_MODE","DARK_MODE","defaultModRegNotificationState","semesterKey","enabled","scheduleType","defaultSettingsState","newStudent","faculty","mode","hiddenInTimetable","modRegNotification","moduleTableOrder","beta","loadDisqusManually","corsNotification","_objectWithoutProperties","_excluded","csScience","ge","match","get","startsWith","ges","ger","geq","geh","cs","defaultPlannerState","minYear","maxYear","iblocs","ignorePrereqCheck","custom","getSemesterIds","year","exclude","ids","moduleTimes","_values","filterModuleForSemester","_pull","oldState","newModules","String","_action$meta","timestamp","now","trimmedModules","_omit","produce","draft","_keyBy","REHYDRATE","moduleBankPersistConfig","venueBank","semTimetable","colorIndex","semColors","c","semHiddenModules","timetablesPersistConfig","theme","setTheme","newTheme","tracker","setCustomDimension","newThemeIndex","settings","round","newStatus","nextState","settingsPersistConfig","planner","_max","_min","max","nextId","props","placeholderId","newModuleOrder","splice","oldModuleOrder","oldYear","oldSemester","newId","order","oldId","plannerPersistConfig","defaultState","undoReducer","limit","actionsToWatch","storedKeyPaths","previousState","presentState","updatedHistory","past","present","future","previousAppState","presentAppState","appendedPast","_pick","_takeRight","_last","newFuture","computeUndoStacks","undoHistory","updatedState","keyPaths","newState","path","presentValue","_set","mergePresent","reducers","app","store","addEventProcessor","event","_draft$extra","category","usableLocalStorage","getLocalStorage","localStorage","setItem","removeItem","canUseBrowserLocalStorage","privData","clear","val","getItem","createLocalStorageShim","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","setAutoFreeze","weekText","acadWeekInfo","sem","weekNumber","num","trim","getWeekText","NUSModerator","academicCalendar","getAcadWeekInfo","fromSemester","toSemester","timetablePage","shortSemesterNames","_kebabCase","Navtabs","useSelector","_ref2","tabProps","className","activeClassName","_jsx","_jsxs","NavLink","to","children","_Calendar","Calendar","styles","classnames","_Trello","Trello","NotificationComponent","React","constructor","super","openTimeoutId","closeTimeoutId","transitioning","onTransitionEnd","evt","target","this","current","clearTimeout","isOpen","shownNotification","timeout","setTimeout","openSnackbar","setState","actionClicked","clearTransition","closeSnackbar","shouldComponentUpdate","nextProps","componentDidUpdate","discarded","willClose","renderNotificationContent","_Fragment","onClick","handler","render","_jsx2","ref","connect","ErrorBoundary","componentDidCatch","info","captureError","errorPage","defaultProps","icons","SpeechBubble","Mug","Browser","Ghost","defaultMoods","RandomKawaii","size","color","mood","wrapperProps","Kawaii","useState","defaultMood","memo","description","Helmet","titleTemplate","brandName","defer","property","content","OnlineComponent","isLive","ErrorPage","showReportDialog","showRefresh","_Title","Title","_RandomKawaii","errorMessage","Online","reload","breakpoints","xs","sm","md","lg","xl","breakpointUp","minWidth","_path","ApiError","onlineListener","retry","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","dataName","_p","_strong","innerWidth","_extends","assign","bind","i","source","prototype","hasOwnProperty","call","apply","title","titleId","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","xmlns","viewBox","fill","small","white","_span","forwardRef","otherProps","rel","RawCloseButton","_Close","Close","absolutePositioned","overlayClassName","fullscreen","animate","otherModalProps","modalContent","setModalContent","contentRefCallback","useCallback","node","useLayoutEffect","disableBodyScroll","enableBodyScroll","ReactModal","closeTimeoutMS","contentRef","FeedbackButtons","links","ExternalLink","messenger","href","contact","_Facebook","Facebook","github","githubRepo","_GitHub","GitHub","email","_Mail","Mail","privateEmail","FeedbackModalComponent","Modal","onRequestClose","toggleFeedback","modal","CloseButton","Heart","topIcon","_h","_FeedbackButtons","globalSearchInput","downloadButton","APPEARANCE","NAVIGATION","TIMETABLE","KeyboardShortcuts","helpShown","setHelpShown","closeModal","useStore","useDispatch","history","useHistory","shortcuts","useRef","renderShortcut","shortcut","capitalized","toUpperCase","useEffect","section","Mousetrap","notifyThemeChange","themeId","t","ComponentMap","focus","preventDefault","button","click","sections","_map","shortcutsInSection","heading","_th","useFetchModuleListAndTimetableModules","moduleListError","setModuleListError","fetchModuleList","catch","fetchTimetableModulesImpl","fetchTimetableModulesAction","validatedLessonConfig","changedLessonTypes","updatedLessonTypes","validLessons","lessonsByType","some","_difference","validateModuleLessons","setLessonConfig","validateTimetable","fetchModuleListAndTimetableModules","moduleListPromise","semesterString","refetchModuleListAndTimetableModules","listen","_location","trackPageView","document","isModuleListReady","isDarkMode","Logo","_Navtabs","_ErrorPage","_LoadingSpinner","LoadingSpinner","_ErrorBoundary","FeedbackModal","_ErrorBoundary2","Notification","_ErrorBoundary3","getSemesterTimetableLessons","_lessons$semester","getSemesterTimetableColors","_colors$semester","undo","readOnly","onSelectSemester","switchSemester","newSemester","disabled","_ChevronLeft","ChevronLeft","_ChevronRight","ChevronRight","tokenize","str","regexify","terms","RegExp","async","retries","fn","shouldRetry","err","retryImport","importFactory","AsyncTooltip","AsyncTooltipGroup","useLoadTooltip","default","TooltipGroup","Tooltip","_excluded2","_strong2","moduleCount","placeholder","getFilteredModules","onChange","onRemoveModule","setIsOpen","inputValue","setInputValue","matchBreakpoint","mediaQuery","media","useMemo","json2mq","getMedia","subscription","getCurrentValue","matchMedia","matches","subscribe","callback","mediaQueryList","addListener","removeListener","useSubscription","useMediaQuery","openSelect","closeSelect","closeSelectAndEmptyInput","handleInputValueChange","newInputValue","stateAndHelpers","selectedItem","handleDownshiftChange","stateReducer","changes","Downshift","stateChangeTypes","blurInput","keyDownEnter","clickItem","mouseUp","renderDropdown","getLabelProps","getInputProps","getItemProps","getMenuProps","highlightedIndex","isModalOpen","results","showResults","showTip","showNoResultMessage","removeBtnLabel","container","input","elements","autoFocus","onFocus","close","selectList","isAdded","isAdding","option","optionDisabled","optionSelected","optionActions","touch","actionButton","Trash","actionIcon","_div","tip","downshiftComponent","onOuterClick","onInputValueChange","defaultHighlightedIndex","shouldCloseOnOverlayClick","ModulesSelectContainer","predicate","searchTerm","searchRegexes","regex","test","createSearchPredicate","sum","sortModules","ModulesSelect","removeModule","ownProps","semTimetableConfig","pendingModules","isOngoing","getAllPendingModules","semesters","getSemModuleSelectList","_isString","JSON","stringify","usedSpace","k","parse","announcementKey","dismiss","NotificationText","useLineBreaks","isRoundOpen","timeFromNow","formatDistance","includeSeconds","_br","_br2","NotificationLink","roundType","ModRegNotification","_ref3","dismissible","rounds","_ref4","schedule","nextRoundByType","period","previousPeriod","roundKey","_isEmpty","differenceInCalendarDays","getRounds","dismissModregNotification","getCurrentTime","startingIndex","endingIndex","timeIndex","floor","toString","convertIndexToTime","lessonDateFormat","formatWeekRange","weekRange","parseISO","dateRange","weekInterval","table","week","addWeeks","weekInfo","formatWeekInfo","interactive","arrow","onHover","hoverLesson","transparent","moduleName","Cell","isHoveredOver","conditionalProps","stopPropagation","currentTarget","getBoundingClientRect","consumeNumericWeeks","consumeWeekRange","consumeWeeks","hoverable","isAvailable","isActive","hover","style","onMouseEnter","onTouchStart","onMouseLeave","onTouchEnd","venue","onModifyCell","verticalMode","totalCols","lastStartIndex","startIndex","startTime","endIndex","endTime","sizeStyle","isModifiable","position","TimetableCell","onCellHover","calculateLessonStyle","highlightPeriod","columns","rowStyle","backgroundSize","height","isScrolledHorizontally","day","CurrentTimeIndicator","currentTimeIndicatorStyle","dayLessonRows","dayLessonRow","TimetableRow","TimetableHighlight","isCurrentDay","nullCurrentTimeIndicatorStyle","opacity","EMPTY_ROW_LESSONS","Timetable","schoolDays","Saturday","_flattenDeep","earliestTime","latestTime","calculateBorderTimings","currentDayIndex","getISODay","getDayIndex","currentHours","getCurrentHours","currentMinutes","getCurrentMinutes","hoursMarginOffset","minutesMarginOffset","currentTimeIndicatorVisible","isVerticalOrientation","TimetableTimings","TimetableDay","_noop","withTimer","WrappedComponent","_class","intervalInMs","intervalId","currentTime","onPageVisibilityChange","differenceInMilliseconds","setInterval","clearInterval","ResetTimetable","openModal","resetTimetable","_XSquare","XSquare","_XSquare2","toggleTitleDisplay","role","showExamCalendar","Sidebar","Type","renderColorPicker","getToggleButtonProps","label","isHidden","_createElement","onChooseColor","resetTombstone","moduleOrders","exam","orderBy","mc","moduleCredit","code","setModuleTableOrder","sort","totalMCs","_sumBy","shownMCs","_hr","_label","htmlFor","TimetableModulesTableComponent","renderModuleActions","hideBtnLabel","showLessonInTimetable","hideLessonInTimetable","Eye","EyeOff","tombstone","horizontalOrientation","ModuleTombstone","secondRowText","unshift","getFormattedExamDate","ColorPicker","selectModuleColor","moduleTitle","renderModule","TimetableContent","_this","timetableRef","modifiedCell","onScroll","scrollLeft","cancelEditLesson","cancelModifyLesson","scrollTo","isHiddenInTimetable","modifyCell","toggleSelectLesson","editLesson","moduleCodeToRemove","addedModules","findIndex","moduleWithColor","toModuleWithColor","renderModuleTable","TimetableModulesTable","newCell","getElementsByClassName","previousPosition","currentPosition","left","scrollX","y","top","scrollY","scroll","maintainScrollPosition","getSemesterModules","timetableWithLessons","renderModuleSections","clashes","filteredModules","groupedModules","examDateTime","getExamDateOnly","values","sameDayMods","a","b","aStartEpoch","bStartEpoch","aEndEpoch","bEndEpoch","overlappingGroups","currentOverlapEnd","currentOverlappingMods","mod","modIndex","group","clashingDateTime","findExamClashes","nonClashingMods","_flatten","_div2","clashDate","filteredTimetableWithLessons","timetableLessons","_flatMapDeep","lessonsForLessonType","modifiableLesson","arrangedLessons","dayLessons","groupLessonsByDay","dayLesson","rows","timeDiff","localeCompare","rowLessons","previousLesson","lesson1","lesson2","arrangeLessonsWithinDay","arrangeLessonsForWeek","arrangedLessonsWithModifiableFlag","dayRows","row","moduleTimetable","isShowingTitle","onKeyUp","_Announcements","Announcements","header","TimetableActions","toggleExamCalendar","ModulesTableFooter","semTimetableMultiConfig","_semTimetableMultiCon","multiClassNo","classNoArray","lessonsFromClassNo","hydrateSemTimetableWithMultiLessons","hiddenModulesKey","lessonByGroups","lessonByGroupsByClassNo","lessonsOfSamelessonType","_first","randomModuleLessonConfig","modifyLesson","changeLesson","setLesson","SharingHeader","filledColors","importedTimetable","setImportedTimetable","clearImportedTimetable","importTimetable","validatedTimetable","valid","invalid","_partition","validateTimetableModules","_Repeat","Repeat","TimetableHeader","handleSelectSemester","selectSemester","pathname","SemesterSwitcher","deferComponentRender","shouldRender","task","requestAnimationFrame","TimetableContainerComponent","params","useParams","semStr","getModule","useLocation","deserializeTimetable","importedHidden","deserializeHidden","setHiddenImported","isLoading","add","displayedTimetable","colorMap","colorsUsed","withoutColors","fillColorMapping","hash","ele","getElementById","scrollIntoView","scrollToHash","useScrollToTop","Redirect","NotFoundPage","_Link","Link","Routes","Switch","_Redirect","exact","_Route","Route","component","TimetableContainer","_Route2","persistor","Provider","PersistGate","onBeforeLift","dimensions","trackInitialPageView","_Router","Router","AppShell","middlewares","ravenMiddleware","thunk","requestsMiddleware","createLogger","logger","level","collapsed","diff","diffPredicate","_getState","storeEnhancer","applyMiddleware","createStore","rootReducer","configureStore","persistStore","updateOnlineStatus","subscribeOnlineEvents","ReactDOM","App","DEFAULT_PLUGINS","animateFill","singletonProps","plugins","TippySingleton","tippyProps","trigger","Tippy","addModuleInput","moduleTable","examCalendar","examCalendarBtn","moduleFinderSearchBox","moduleResultItem"],"sourceRoot":""}